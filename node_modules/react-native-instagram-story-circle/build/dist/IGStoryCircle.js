"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const React = tslib_1.__importStar(require("react"));
const react_native_1 = require("react-native");
const react_native_linear_gradient_1 = tslib_1.__importDefault(require("react-native-linear-gradient"));
const react_native_bounceable_1 = tslib_1.__importDefault(require("@freakycoder/react-native-bounceable"));
/**
 * ? Local Imports
 */
const IGStoryCircle_style_1 = tslib_1.__importStar(require("./IGStoryCircle.style"));
const IGStoryCircle = (props) => {
    const { size = 64, source, onPress, hasStory, storyRingColor, innerCircleSize, notificationSize, defaultRingColor, innerBorderColor, notificationCount, innerBorderRadius = 32, outerBorderRadius = 32, profileImageBorderSize, notificationPositionTop, notificationPositionLeft, notificationBubbleBackgroundColor, ImageHost = react_native_1.View, ImageComponent = react_native_1.Image, } = props;
    const borderSize = (size * 6) / 100;
    const innerBorderSize = (size * 3) / 100;
    const defaultNotificationPositionTop = size / 12;
    const defaultNotificationPositionLeft = (size * 9) / 12;
    const generateRingColor = () => {
        if (hasStory)
            return storyRingColor;
        else
            return defaultRingColor;
    };
    const renderNotificationCount = () => notificationCount && (<react_native_1.View style={IGStoryCircle_style_1._notificationContainer(notificationSize, notificationBubbleBackgroundColor, notificationPositionTop || defaultNotificationPositionTop, notificationPositionLeft || defaultNotificationPositionLeft)}>
        <react_native_1.Text style={IGStoryCircle_style_1.default.notificationText}>{notificationCount}</react_native_1.Text>
      </react_native_1.View>);
    const renderIGCircle = () => (<react_native_linear_gradient_1.default useAngle angle={45} style={IGStoryCircle_style_1._storyRing(size, outerBorderRadius)} colors={generateRingColor()} start={{ x: 0.0, y: 1.0 }} end={{ x: 1.0, y: 1.0 }}>
      <ImageHost>
        <ImageComponent source={source} style={IGStoryCircle_style_1._profileImageStyle(innerCircleSize || size - borderSize, profileImageBorderSize || hasStory ? innerBorderSize : 0, innerBorderColor, innerBorderRadius)}/>
      </ImageHost>
    </react_native_linear_gradient_1.default>);
    return (<react_native_bounceable_1.default onPress={onPress}>
      <react_native_1.View style={IGStoryCircle_style_1.default.container}>
        {renderIGCircle()}
        {renderNotificationCount()}
      </react_native_1.View>
    </react_native_bounceable_1.default>);
};
IGStoryCircle.defaultProps = {
    notificationSize: 18,
    innerBorderColor: "#000",
    defaultRingColor: ["#000", "#000"],
    storyRingColor: ["#feda75", "#d62976"],
    notificationBubbleBackgroundColor: "#eb3434",
};
exports.default = IGStoryCircle;
//# sourceMappingURL=IGStoryCircle.js.map
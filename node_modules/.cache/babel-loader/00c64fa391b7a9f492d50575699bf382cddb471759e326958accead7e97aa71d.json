{"ast":null,"code":"import { _registerComponent, registerVersion, _getProvider, getApp, _removeServiceInstance, SDK_VERSION } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { FirebaseError, getDefaultEmulatorHostnameAndPort, createMockUserToken, getModularInstance, deepEqual } from '@firebase/util';\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass d {\n  constructor(t) {\n    this.uid = t;\n  }\n  isAuthenticated() {\n    return null != this.uid;\n  }\n  /**\n   * Returns a key representing this user, suitable for inclusion in a\n   * dictionary.\n   */\n  toKey() {\n    return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n  }\n  isEqual(t) {\n    return t.uid === this.uid;\n  }\n}\n\n/** A user with a null UID. */\nd.UNAUTHENTICATED = new d(null),\n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nd.GOOGLE_CREDENTIALS = new d(\"google-credentials-uid\"), d.FIRST_PARTY = new d(\"first-party-uid\"), d.MOCK_USER = new d(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet w = \"9.22.1\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst m = new Logger(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */\nfunction p(t) {\n  m.setLogLevel(t);\n}\nfunction y(t) {\n  if (m.logLevel <= LogLevel.DEBUG) {\n    for (var _len = arguments.length, e = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      e[_key - 1] = arguments[_key];\n    }\n    const n = e.map(v);\n    m.debug(`Firestore (${w}): ${t}`, ...n);\n  }\n}\nfunction g(t) {\n  if (m.logLevel <= LogLevel.ERROR) {\n    for (var _len2 = arguments.length, e = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      e[_key2 - 1] = arguments[_key2];\n    }\n    const n = e.map(v);\n    m.error(`Firestore (${w}): ${t}`, ...n);\n  }\n}\n\n/**\n * @internal\n */\nfunction _(t) {\n  if (m.logLevel <= LogLevel.WARN) {\n    for (var _len3 = arguments.length, e = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      e[_key3 - 1] = arguments[_key3];\n    }\n    const n = e.map(v);\n    m.warn(`Firestore (${w}): ${t}`, ...n);\n  }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */\nfunction v(t) {\n  if (\"string\" == typeof t) return t;\n  try {\n    return e = t, JSON.stringify(e);\n  } catch (e) {\n    // Converting to JSON failed, just log the object directly\n    return t;\n  }\n  /**\n  * @license\n  * Copyright 2020 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n  /** Formats an object as a JSON string, suitable for logging. */\n  var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */\nfunction b() {\n  let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Unexpected state\";\n  // Log the failure in addition to throw an exception, just in case the\n  // exception is swallowed.\n  const e = `FIRESTORE (${w}) INTERNAL ASSERTION FAILED: ` + t;\n  // NOTE: We don't use FirestoreError here because these are internal failures\n  // that cannot be handled by the user. (Also it would create a circular\n  // dependency between the error and assert modules which doesn't work.)\n  throw g(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */\nfunction E(t, e) {\n  t || b();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */\nfunction I(t,\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n  return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst T = \"ok\",\n  A = \"cancelled\",\n  R = \"unknown\",\n  P = \"invalid-argument\",\n  V = \"deadline-exceeded\",\n  $ = \"not-found\",\n  N = \"already-exists\",\n  D = \"permission-denied\",\n  F = \"unauthenticated\",\n  x = \"resource-exhausted\",\n  S = \"failed-precondition\",\n  q = \"aborted\",\n  O = \"out-of-range\",\n  k = \"unimplemented\",\n  C = \"internal\",\n  M = \"unavailable\",\n  L = \"data-loss\";\n\n/** An error returned by a Firestore operation. */\nclass U extends FirebaseError {\n  /** @hideconstructor */\n  constructor(\n  /**\n   * The backend error code associated with this error.\n   */\n  t,\n  /**\n   * A custom error description.\n   */\n  e) {\n    super(t, e), this.code = t, this.message = e,\n    // HACK: We write a toString property directly because Error is not a real\n    // class and so inheritance does not work correctly. We could alternatively\n    // do the same \"back-door inheritance\" trick that FirebaseError does.\n    this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass j {\n  constructor() {\n    this.promise = new Promise((t, e) => {\n      this.resolve = t, this.reject = e;\n    });\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass B {\n  constructor(t, e) {\n    this.user = e, this.type = \"OAuth\", this.headers = new Map(), this.headers.set(\"Authorization\", `Bearer ${t}`);\n  }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */\nclass Q {\n  getToken() {\n    return Promise.resolve(null);\n  }\n  invalidateToken() {}\n  start(t, e) {\n    // Fire with initial user.\n    t.enqueueRetryable(() => e(d.UNAUTHENTICATED));\n  }\n  shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */\nclass z {\n  constructor(t) {\n    this.token = t,\n    /**\n     * Stores the listener registered with setChangeListener()\n     * This isn't actually necessary since the UID never changes, but we use this\n     * to verify the listen contract is adhered to in tests.\n     */\n    this.changeListener = null;\n  }\n  getToken() {\n    return Promise.resolve(this.token);\n  }\n  invalidateToken() {}\n  start(t, e) {\n    this.changeListener = e,\n    // Fire with initial user.\n    t.enqueueRetryable(() => e(this.token.user));\n  }\n  shutdown() {\n    this.changeListener = null;\n  }\n}\n\n/** Credential provider for the Lite SDK. */\nclass W {\n  constructor(t) {\n    this.auth = null, t.onInit(t => {\n      this.auth = t;\n    });\n  }\n  getToken() {\n    return this.auth ? this.auth.getToken().then(t => t ? (E(\"string\" == typeof t.accessToken), new B(t.accessToken, new d(this.auth.getUid()))) : null) : Promise.resolve(null);\n  }\n  invalidateToken() {}\n  start(t, e) {}\n  shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */\nclass G {\n  constructor(t, e, n) {\n    this.t = t, this.i = e, this.o = n, this.type = \"FirstParty\", this.user = d.FIRST_PARTY, this.u = new Map();\n  }\n  /**\n   * Gets an authorization token, using a provided factory function, or return\n   * null.\n   */\n  h() {\n    return this.o ? this.o() : null;\n  }\n  get headers() {\n    this.u.set(\"X-Goog-AuthUser\", this.t);\n    // Use array notation to prevent minification\n    const t = this.h();\n    return t && this.u.set(\"Authorization\", t), this.i && this.u.set(\"X-Goog-Iam-Authorization-Token\", this.i), this.u;\n  }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */\nclass K {\n  constructor(t, e, n) {\n    this.t = t, this.i = e, this.o = n;\n  }\n  getToken() {\n    return Promise.resolve(new G(this.t, this.i, this.o));\n  }\n  start(t, e) {\n    // Fire with initial uid.\n    t.enqueueRetryable(() => e(d.FIRST_PARTY));\n  }\n  shutdown() {}\n  invalidateToken() {}\n}\nclass Y {\n  constructor(t) {\n    this.value = t, this.type = \"AppCheck\", this.headers = new Map(), t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n  }\n}\n\n/** AppCheck token provider for the Lite SDK. */\nclass H {\n  constructor(t) {\n    this.l = t, this.appCheck = null, t.onInit(t => {\n      this.appCheck = t;\n    });\n  }\n  getToken() {\n    return this.appCheck ? this.appCheck.getToken().then(t => t ? (E(\"string\" == typeof t.token), new Y(t.token)) : null) : Promise.resolve(null);\n  }\n  invalidateToken() {}\n  start(t, e) {}\n  shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass J {\n  /**\n   * Constructs a DatabaseInfo using the provided host, databaseId and\n   * persistenceKey.\n   *\n   * @param databaseId - The database to use.\n   * @param appId - The Firebase App Id.\n   * @param persistenceKey - A unique identifier for this Firestore's local\n   * storage (used in conjunction with the databaseId).\n   * @param host - The Firestore backend host to connect to.\n   * @param ssl - Whether to use SSL when connecting.\n   * @param forceLongPolling - Whether to use the forceLongPolling option\n   * when using WebChannel as the network transport.\n   * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n   * option when using WebChannel as the network transport.\n   * @param longPollingOptions Options that configure long-polling.\n   * @param useFetchStreams Whether to use the Fetch API instead of\n   * XMLHTTPRequest\n   */\n  constructor(t, e, n, r, s, i, o, u, c) {\n    this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, this.forceLongPolling = i, this.autoDetectLongPolling = o, this.longPollingOptions = u, this.useFetchStreams = c;\n  }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass X {\n  constructor(t, e) {\n    this.projectId = t, this.database = e || \"(default)\";\n  }\n  static empty() {\n    return new X(\"\", \"\");\n  }\n  get isDefaultDatabase() {\n    return \"(default)\" === this.database;\n  }\n  isEqual(t) {\n    return t instanceof X && t.projectId === this.projectId && t.database === this.database;\n  }\n}\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass Z {\n  constructor(t, e, n) {\n    void 0 === e ? e = 0 : e > t.length && b(), void 0 === n ? n = t.length - e : n > t.length - e && b(), this.segments = t, this.offset = e, this.len = n;\n  }\n  get length() {\n    return this.len;\n  }\n  isEqual(t) {\n    return 0 === Z.comparator(this, t);\n  }\n  child(t) {\n    const e = this.segments.slice(this.offset, this.limit());\n    return t instanceof Z ? t.forEach(t => {\n      e.push(t);\n    }) : e.push(t), this.construct(e);\n  }\n  /** The index of one past the last segment of the path. */\n  limit() {\n    return this.offset + this.length;\n  }\n  popFirst(t) {\n    return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n  }\n  popLast() {\n    return this.construct(this.segments, this.offset, this.length - 1);\n  }\n  firstSegment() {\n    return this.segments[this.offset];\n  }\n  lastSegment() {\n    return this.get(this.length - 1);\n  }\n  get(t) {\n    return this.segments[this.offset + t];\n  }\n  isEmpty() {\n    return 0 === this.length;\n  }\n  isPrefixOf(t) {\n    if (t.length < this.length) return !1;\n    for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n    return !0;\n  }\n  isImmediateParentOf(t) {\n    if (this.length + 1 !== t.length) return !1;\n    for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n    return !0;\n  }\n  forEach(t) {\n    for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n  }\n  toArray() {\n    return this.segments.slice(this.offset, this.limit());\n  }\n  static comparator(t, e) {\n    const n = Math.min(t.length, e.length);\n    for (let r = 0; r < n; r++) {\n      const n = t.get(r),\n        s = e.get(r);\n      if (n < s) return -1;\n      if (n > s) return 1;\n    }\n    return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n  }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */\nclass tt extends Z {\n  construct(t, e, n) {\n    return new tt(t, e, n);\n  }\n  canonicalString() {\n    // NOTE: The client is ignorant of any path segments containing escape\n    // sequences (e.g. __id123__) and just passes them through raw (they exist\n    // for legacy reasons and should not be used frequently).\n    return this.toArray().join(\"/\");\n  }\n  toString() {\n    return this.canonicalString();\n  }\n  /**\n   * Creates a resource path from the given slash-delimited string. If multiple\n   * arguments are provided, all components are combined. Leading and trailing\n   * slashes from all components are ignored.\n   */\n  static fromString() {\n    // NOTE: The client is ignorant of any path segments containing escape\n    // sequences (e.g. __id123__) and just passes them through raw (they exist\n    // for legacy reasons and should not be used frequently).\n    const e = [];\n    for (var _len4 = arguments.length, t = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      t[_key4] = arguments[_key4];\n    }\n    for (const n of t) {\n      if (n.indexOf(\"//\") >= 0) throw new U(P, `Invalid segment (${n}). Paths must not contain // in them.`);\n      // Strip leading and traling slashed.\n      e.push(...n.split(\"/\").filter(t => t.length > 0));\n    }\n    return new tt(e);\n  }\n  static emptyPath() {\n    return new tt([]);\n  }\n}\nconst et = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */\nclass nt extends Z {\n  construct(t, e, n) {\n    return new nt(t, e, n);\n  }\n  /**\n   * Returns true if the string could be used as a segment in a field path\n   * without escaping.\n   */\n  static isValidIdentifier(t) {\n    return et.test(t);\n  }\n  canonicalString() {\n    return this.toArray().map(t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), nt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t)).join(\".\");\n  }\n  toString() {\n    return this.canonicalString();\n  }\n  /**\n   * Returns true if this field references the key of a document.\n   */\n  isKeyField() {\n    return 1 === this.length && \"__name__\" === this.get(0);\n  }\n  /**\n   * The field designating the key of a document.\n   */\n  static keyField() {\n    return new nt([\"__name__\"]);\n  }\n  /**\n   * Parses a field string from the given server-formatted string.\n   *\n   * - Splitting the empty string is not allowed (for now at least).\n   * - Empty segments within the string (e.g. if there are two consecutive\n   *   separators) are not allowed.\n   *\n   * TODO(b/37244157): we should make this more strict. Right now, it allows\n   * non-identifier path components, even if they aren't escaped.\n   */\n  static fromServerFormat(t) {\n    const e = [];\n    let n = \"\",\n      r = 0;\n    const s = () => {\n      if (0 === n.length) throw new U(P, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n      e.push(n), n = \"\";\n    };\n    let i = !1;\n    for (; r < t.length;) {\n      const e = t[r];\n      if (\"\\\\\" === e) {\n        if (r + 1 === t.length) throw new U(P, \"Path has trailing escape character: \" + t);\n        const e = t[r + 1];\n        if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new U(P, \"Path has invalid escape sequence: \" + t);\n        n += e, r += 2;\n      } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n    }\n    if (s(), i) throw new U(P, \"Unterminated ` in path: \" + t);\n    return new nt(e);\n  }\n  static emptyPath() {\n    return new nt([]);\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */\nclass rt {\n  constructor(t) {\n    this.path = t;\n  }\n  static fromPath(t) {\n    return new rt(tt.fromString(t));\n  }\n  static fromName(t) {\n    return new rt(tt.fromString(t).popFirst(5));\n  }\n  static empty() {\n    return new rt(tt.emptyPath());\n  }\n  get collectionGroup() {\n    return this.path.popLast().lastSegment();\n  }\n  /** Returns true if the document is in the specified collectionId. */\n  hasCollectionId(t) {\n    return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n  }\n  /** Returns the collection group (i.e. the name of the parent collection) for this key. */\n  getCollectionGroup() {\n    return this.path.get(this.path.length - 2);\n  }\n  /** Returns the fully qualified path to the parent collection. */\n  getCollectionPath() {\n    return this.path.popLast();\n  }\n  isEqual(t) {\n    return null !== t && 0 === tt.comparator(this.path, t.path);\n  }\n  toString() {\n    return this.path.toString();\n  }\n  static comparator(t, e) {\n    return tt.comparator(t.path, e.path);\n  }\n  static isDocumentKey(t) {\n    return t.length % 2 == 0;\n  }\n  /**\n   * Creates and returns a new document key with the given segments.\n   *\n   * @param segments - The segments of the path to the document\n   * @returns A new instance of DocumentKey\n   */\n  static fromSegments(t) {\n    return new rt(new tt(t.slice()));\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction st(t, e, n) {\n  if (!n) throw new U(P, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction it(t) {\n  if (!rt.isDocumentKey(t)) throw new U(P, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */\nfunction ot(t) {\n  if (rt.isDocumentKey(t)) throw new U(P, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction ut(t) {\n  if (void 0 === t) return \"undefined\";\n  if (null === t) return \"null\";\n  if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), JSON.stringify(t);\n  if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n  if (\"object\" == typeof t) {\n    if (t instanceof Array) return \"an array\";\n    {\n      const e = /** try to get the constructor name for an object. */\n      function (t) {\n        if (t.constructor) return t.constructor.name;\n        return null;\n      }\n      /**\n      * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n      * underlying instance. Throws if  `obj` is not an instance of `T`.\n      *\n      * This cast is used in the Lite and Full SDK to verify instance types for\n      * arguments passed to the public API.\n      * @internal\n      */(t);\n      return e ? `a custom ${e} object` : \"an object\";\n    }\n  }\n  return \"function\" == typeof t ? \"a function\" : b();\n}\nfunction ct(t,\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n  if (\"_delegate\" in t && (\n  // Unwrap Compat types\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  t = t._delegate), !(t instanceof e)) {\n    if (e.name === t.constructor.name) throw new U(P, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n    {\n      const n = ut(t);\n      throw new U(P, `Expected type '${e.name}', but it was: ${n}`);\n    }\n  }\n  return t;\n}\nfunction at(t, e) {\n  if (e <= 0) throw new U(P, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Compares two `ExperimentalLongPollingOptions` objects for equality.\n */\n/**\n * Creates and returns a new `ExperimentalLongPollingOptions` with the same\n * option values as the given instance.\n */\nfunction ht(t) {\n  const e = {};\n  return void 0 !== t.timeoutSeconds && (e.timeoutSeconds = t.timeoutSeconds), e;\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The value returned from the most recent invocation of\n * `generateUniqueDebugId()`, or null if it has never been invoked.\n */\nlet lt = null;\n\n/**\n * Generates and returns an initial value for `lastUniqueDebugId`.\n *\n * The returned value is randomly selected from a range of integers that are\n * represented as 8 hexadecimal digits. This means that (within reason) any\n * numbers generated by incrementing the returned number by 1 will also be\n * represented by 8 hexadecimal digits. This leads to all \"IDs\" having the same\n * length when converted to a hexadecimal string, making reading logs containing\n * these IDs easier to follow. And since the return value is randomly selected\n * it will help to differentiate between logs from different executions.\n */\n/**\n * Generates and returns a unique ID as a hexadecimal string.\n *\n * The returned ID is intended to be used in debug logging messages to help\n * correlate log messages that may be spatially separated in the logs, but\n * logically related. For example, a network connection could include the same\n * \"debug ID\" string in all of its log messages to help trace a specific\n * connection over time.\n *\n * @return the 10-character generated ID (e.g. \"0xa1b2c3d4\").\n */\nfunction ft() {\n  return null === lt ? lt = 268435456 + Math.round(2147483648 * Math.random()) : lt++, \"0x\" + lt.toString(16);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */\nfunction dt(t) {\n  return null == t;\n}\n\n/** Returns whether the value represents -0. */\nfunction wt(t) {\n  // Detect if the value is -0.0. Based on polyfill from\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n  return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst mt = {\n  BatchGetDocuments: \"batchGet\",\n  Commit: \"commit\",\n  RunQuery: \"runQuery\",\n  RunAggregationQuery: \"runAggregationQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar pt, yt;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction gt(t) {\n  if (void 0 === t) return g(\"RPC_ERROR\", \"HTTP error has no status\"), R;\n  // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n  // status codes but the mapping is not bijective. In each case of ambiguity\n  // this function chooses a primary error.\n\n  // [1]\n  // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n  switch (t) {\n    case 200:\n      // OK\n      return T;\n    case 400:\n      // Bad Request\n      return S;\n\n    // Other possibilities based on the forward mapping\n    // return Code.INVALID_ARGUMENT;\n    // return Code.OUT_OF_RANGE;\n    case 401:\n      // Unauthorized\n      return F;\n    case 403:\n      // Forbidden\n      return D;\n    case 404:\n      // Not Found\n      return $;\n    case 409:\n      // Conflict\n      return q;\n\n    // Other possibilities:\n    // return Code.ALREADY_EXISTS;\n    case 416:\n      // Range Not Satisfiable\n      return O;\n    case 429:\n      // Too Many Requests\n      return x;\n    case 499:\n      // Client Closed Request\n      return A;\n    case 500:\n      // Internal Server Error\n      return R;\n\n    // Other possibilities:\n    // return Code.INTERNAL;\n    // return Code.DATA_LOSS;\n    case 501:\n      // Unimplemented\n      return k;\n    case 503:\n      // Service Unavailable\n      return M;\n    case 504:\n      // Gateway Timeout\n      return V;\n    default:\n      return t >= 200 && t < 300 ? T : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? C : R;\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */\n(yt = pt || (pt = {}))[yt.OK = 0] = \"OK\", yt[yt.CANCELLED = 1] = \"CANCELLED\", yt[yt.UNKNOWN = 2] = \"UNKNOWN\", yt[yt.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", yt[yt.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", yt[yt.NOT_FOUND = 5] = \"NOT_FOUND\", yt[yt.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", yt[yt.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", yt[yt.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", yt[yt.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", yt[yt.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", yt[yt.ABORTED = 10] = \"ABORTED\", yt[yt.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", yt[yt.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", yt[yt.INTERNAL = 13] = \"INTERNAL\", yt[yt.UNAVAILABLE = 14] = \"UNAVAILABLE\", yt[yt.DATA_LOSS = 15] = \"DATA_LOSS\";\nclass _t extends\n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n  constructor(t) {\n    this.databaseInfo = t, this.databaseId = t.databaseId;\n    const e = t.ssl ? \"https\" : \"http\";\n    this.m = e + \"://\" + t.host, this.p = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n  }\n  get g() {\n    // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n    // where to run the query, and expect the `request` to NOT specify the \"path\".\n    return !1;\n  }\n  v(t, e, n, r, s) {\n    const i = ft(),\n      o = this.I(t, e);\n    y(\"RestConnection\", `Sending RPC '${t}' ${i}:`, o, n);\n    const u = {};\n    return this.T(u, r, s), this.A(t, o, u, n).then(e => (y(\"RestConnection\", `Received RPC '${t}' ${i}: `, e), e), e => {\n      throw _(\"RestConnection\", `RPC '${t}' ${i} failed with error: `, e, \"url: \", o, \"request:\", n), e;\n    });\n  }\n  R(t, e, n, r, s, i) {\n    // The REST API automatically aggregates all of the streamed results, so we\n    // can just use the normal invoke() method.\n    return this.v(t, e, n, r, s);\n  }\n  /**\n   * Modifies the headers for a request, adding any authorization token if\n   * present and any additional headers for the request.\n   */\n  T(t, e, n) {\n    t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + w,\n    // Content-Type: text/plain will avoid preflight requests which might\n    // mess with CORS and redirects by proxies. If we add custom headers\n    // we will need to change this code to potentially use the $httpOverwrite\n    // parameter supported by ESF to avoid triggering preflight requests.\n    t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), e && e.headers.forEach((e, n) => t[n] = e), n && n.headers.forEach((e, n) => t[n] = e);\n  }\n  I(t, e) {\n    const n = mt[t];\n    return `${this.m}/v1/${e}:${n}`;\n  }\n} {\n  /**\n   * @param databaseInfo - The connection info.\n   * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n   */\n  constructor(t, e) {\n    super(t), this.P = e;\n  }\n  V(t, e) {\n    throw new Error(\"Not supported by FetchConnection\");\n  }\n  async A(t, e, n, r) {\n    var s;\n    const i = JSON.stringify(r);\n    let o;\n    try {\n      o = await this.P(e, {\n        method: \"POST\",\n        headers: n,\n        body: i\n      });\n    } catch (t) {\n      const e = t;\n      throw new U(gt(e.status), \"Request failed with error: \" + e.statusText);\n    }\n    if (!o.ok) {\n      let t = await o.json();\n      Array.isArray(t) && (t = t[0]);\n      const e = null === (s = null == t ? void 0 : t.error) || void 0 === s ? void 0 : s.message;\n      throw new U(gt(o.status), `Request failed with error: ${null != e ? e : o.statusText}`);\n    }\n    return o.json();\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Concrete implementation of the Aggregate type.\n */\nclass vt {\n  constructor(t, e, n) {\n    this.alias = t, this.$ = e, this.fieldPath = n;\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction bt(t) {\n  // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n  const e =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto),\n    n = new Uint8Array(t);\n  if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n);else\n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n  return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass Et {\n  static N() {\n    // Alphanumeric characters\n    const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\",\n      e = Math.floor(256 / t.length) * t.length;\n    // The largest byte value that is a multiple of `char.length`.\n    let n = \"\";\n    for (; n.length < 20;) {\n      const r = bt(40);\n      for (let s = 0; s < r.length; ++s)\n      // Only accept values that are [0, maxMultiple), this ensures they can\n      // be evenly mapped to indices of `chars` via a modulo operation.\n      n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n    }\n    return n;\n  }\n}\nfunction It(t, e) {\n  return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */\nfunction Tt(t, e, n) {\n  return t.length === e.length && t.every((t, r) => n(t, e[r]));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction At(t) {\n  let e = 0;\n  for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n  return e;\n}\nfunction Rt(t, e) {\n  for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An error encountered while decoding base64 string.\n */\nclass Pt extends Error {\n  constructor() {\n    super(...arguments), this.name = \"Base64DecodeError\";\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass Vt {\n  constructor(t) {\n    this.binaryString = t;\n  }\n  static fromBase64String(t) {\n    const e = function (t) {\n      try {\n        return atob(t);\n      } catch (t) {\n        // Check that `DOMException` is defined before using it to avoid\n        // \"ReferenceError: Property 'DOMException' doesn't exist\" in react-native.\n        // (https://github.com/firebase/firebase-js-sdk/issues/7115)\n        throw \"undefined\" != typeof DOMException && t instanceof DOMException ? new Pt(\"Invalid base64 string: \" + t) : t;\n      }\n    }\n    /** Converts a binary string to a Base64 encoded string. */(t);\n    return new Vt(e);\n  }\n  static fromUint8Array(t) {\n    // TODO(indexing); Remove the copy of the byte string here as this method\n    // is frequently called during indexing.\n    const e =\n    /**\n    * Helper function to convert an Uint8array to a binary string.\n    */\n    function (t) {\n      let e = \"\";\n      for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n      return e;\n    }\n    /**\n    * Helper function to convert a binary string to an Uint8Array.\n    */(t);\n    return new Vt(e);\n  }\n  [Symbol.iterator]() {\n    let t = 0;\n    return {\n      next: () => t < this.binaryString.length ? {\n        value: this.binaryString.charCodeAt(t++),\n        done: !1\n      } : {\n        value: void 0,\n        done: !0\n      }\n    };\n  }\n  toBase64() {\n    return t = this.binaryString, btoa(t);\n    var t;\n  }\n  toUint8Array() {\n    return function (t) {\n      const e = new Uint8Array(t.length);\n      for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n      return e;\n    }\n    /**\n    * @license\n    * Copyright 2020 Google LLC\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *   http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n    (this.binaryString);\n  }\n  approximateByteSize() {\n    return 2 * this.binaryString.length;\n  }\n  compareTo(t) {\n    return It(this.binaryString, t.binaryString);\n  }\n  isEqual(t) {\n    return this.binaryString === t.binaryString;\n  }\n}\nVt.EMPTY_BYTE_STRING = new Vt(\"\");\nconst $t = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */\nfunction Nt(t) {\n  // The json interface (for the browser) will return an iso timestamp string,\n  // while the proto js library (for node) will return a\n  // google.protobuf.Timestamp instance.\n  if (E(!!t), \"string\" == typeof t) {\n    // The date string can have higher precision (nanos) than the Date class\n    // (millis), so we do some custom parsing here.\n    // Parse the nanos right out of the string.\n    let e = 0;\n    const n = $t.exec(t);\n    if (E(!!n), n[1]) {\n      // Pad the fraction out to 9 digits (nanos).\n      let t = n[1];\n      t = (t + \"000000000\").substr(0, 9), e = Number(t);\n    }\n    // Parse the date to get the seconds.\n    const r = new Date(t);\n    return {\n      seconds: Math.floor(r.getTime() / 1e3),\n      nanos: e\n    };\n  }\n  return {\n    seconds: Dt(t.seconds),\n    nanos: Dt(t.nanos)\n  };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */\nfunction Dt(t) {\n  // TODO(bjornick): Handle int64 greater than 53 bits.\n  return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */\nfunction Ft(t) {\n  return \"string\" == typeof t ? Vt.fromBase64String(t) : Vt.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass xt {\n  /**\n   * Creates a new timestamp.\n   *\n   * @param seconds - The number of seconds of UTC time since Unix epoch\n   *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n   *     9999-12-31T23:59:59Z inclusive.\n   * @param nanoseconds - The non-negative fractions of a second at nanosecond\n   *     resolution. Negative second values with fractions must still have\n   *     non-negative nanoseconds values that count forward in time. Must be\n   *     from 0 to 999,999,999 inclusive.\n   */\n  constructor(\n  /**\n   * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n   */\n  t,\n  /**\n   * The fractions of a second at nanosecond resolution.*\n   */\n  e) {\n    if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n    if (e >= 1e9) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n    if (t < -62135596800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n    // This will break in the year 10,000.\n    if (t >= 253402300800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n  }\n  /**\n   * Creates a new timestamp with the current date, with millisecond precision.\n   *\n   * @returns a new timestamp representing the current date.\n   */\n  static now() {\n    return xt.fromMillis(Date.now());\n  }\n  /**\n   * Creates a new timestamp from the given date.\n   *\n   * @param date - The date to initialize the `Timestamp` from.\n   * @returns A new `Timestamp` representing the same point in time as the given\n   *     date.\n   */\n  static fromDate(t) {\n    return xt.fromMillis(t.getTime());\n  }\n  /**\n   * Creates a new timestamp from the given number of milliseconds.\n   *\n   * @param milliseconds - Number of milliseconds since Unix epoch\n   *     1970-01-01T00:00:00Z.\n   * @returns A new `Timestamp` representing the same point in time as the given\n   *     number of milliseconds.\n   */\n  static fromMillis(t) {\n    const e = Math.floor(t / 1e3),\n      n = Math.floor(1e6 * (t - 1e3 * e));\n    return new xt(e, n);\n  }\n  /**\n   * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n   * causes a loss of precision since `Date` objects only support millisecond\n   * precision.\n   *\n   * @returns JavaScript `Date` object representing the same point in time as\n   *     this `Timestamp`, with millisecond precision.\n   */\n  toDate() {\n    return new Date(this.toMillis());\n  }\n  /**\n   * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n   * epoch). This operation causes a loss of precision.\n   *\n   * @returns The point in time corresponding to this timestamp, represented as\n   *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n   */\n  toMillis() {\n    return 1e3 * this.seconds + this.nanoseconds / 1e6;\n  }\n  _compareTo(t) {\n    return this.seconds === t.seconds ? It(this.nanoseconds, t.nanoseconds) : It(this.seconds, t.seconds);\n  }\n  /**\n   * Returns true if this `Timestamp` is equal to the provided one.\n   *\n   * @param other - The `Timestamp` to compare against.\n   * @returns true if this `Timestamp` is equal to the provided one.\n   */\n  isEqual(t) {\n    return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n  }\n  /** Returns a textual representation of this `Timestamp`. */\n  toString() {\n    return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n  }\n  /** Returns a JSON-serializable representation of this `Timestamp`. */\n  toJSON() {\n    return {\n      seconds: this.seconds,\n      nanoseconds: this.nanoseconds\n    };\n  }\n  /**\n   * Converts this object to a primitive string, which allows `Timestamp` objects\n   * to be compared using the `>`, `<=`, `>=` and `>` operators.\n   */\n  valueOf() {\n    // This method returns a string of the form <seconds>.<nanoseconds> where\n    // <seconds> is translated to have a non-negative value and both <seconds>\n    // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n    // Strings with this format then have a lexiographical ordering that matches\n    // the expected ordering. The <seconds> translation is done to avoid having\n    // a leading negative sign (i.e. a leading '-' character) in its string\n    // representation, which would affect its lexiographical ordering.\n    const t = this.seconds - -62135596800;\n    // Note: Up to 12 decimal digits are required to represent all valid\n    // 'seconds' values.\n    return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */\nfunction St(t) {\n  var e, n;\n  return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */\nfunction qt(t) {\n  const e = t.mapValue.fields.__previous_value__;\n  return St(e) ? qt(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */\nfunction Ot(t) {\n  const e = Nt(t.mapValue.fields.__local_write_time__.timestampValue);\n  return new xt(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst kt = {\n  fields: {\n    __type__: {\n      stringValue: \"__max__\"\n    }\n  }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction Ct(t) {\n  return \"nullValue\" in t ? 0 /* TypeOrder.NullValue */ : \"booleanValue\" in t ? 1 /* TypeOrder.BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* TypeOrder.NumberValue */ : \"timestampValue\" in t ? 3 /* TypeOrder.TimestampValue */ : \"stringValue\" in t ? 5 /* TypeOrder.StringValue */ : \"bytesValue\" in t ? 6 /* TypeOrder.BlobValue */ : \"referenceValue\" in t ? 7 /* TypeOrder.RefValue */ : \"geoPointValue\" in t ? 8 /* TypeOrder.GeoPointValue */ : \"arrayValue\" in t ? 9 /* TypeOrder.ArrayValue */ : \"mapValue\" in t ? St(t) ? 4 /* TypeOrder.ServerTimestampValue */ : /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n  function (t) {\n    return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n  }\n  /**\n  * @license\n  * Copyright 2022 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n  /**\n  * Represents a bound of a query.\n  *\n  * The bound is specified with the given components representing a position and\n  * whether it's just before or just after the position (relative to whatever the\n  * query order is).\n  *\n  * The position represents a logical index position for a query. It's a prefix\n  * of values for the (potentially implicit) order by clauses of a query.\n  *\n  * Bound provides a function to determine whether a document comes before or\n  * after a bound. This is influenced by whether the position is just before or\n  * just after the provided values.\n  */(t) ? 9007199254740991 /* TypeOrder.MaxValue */ : 10 /* TypeOrder.ObjectValue */ : b();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */\nfunction Mt(t, e) {\n  if (t === e) return !0;\n  const n = Ct(t);\n  if (n !== Ct(e)) return !1;\n  switch (n) {\n    case 0 /* TypeOrder.NullValue */:\n    case 9007199254740991 /* TypeOrder.MaxValue */:\n      return !0;\n    case 1 /* TypeOrder.BooleanValue */:\n      return t.booleanValue === e.booleanValue;\n    case 4 /* TypeOrder.ServerTimestampValue */:\n      return Ot(t).isEqual(Ot(e));\n    case 3 /* TypeOrder.TimestampValue */:\n      return function (t, e) {\n        if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length)\n          // Use string equality for ISO 8601 timestamps\n          return t.timestampValue === e.timestampValue;\n        const n = Nt(t.timestampValue),\n          r = Nt(e.timestampValue);\n        return n.seconds === r.seconds && n.nanos === r.nanos;\n      }(t, e);\n    case 5 /* TypeOrder.StringValue */:\n      return t.stringValue === e.stringValue;\n    case 6 /* TypeOrder.BlobValue */:\n      return function (t, e) {\n        return Ft(t.bytesValue).isEqual(Ft(e.bytesValue));\n      }(t, e);\n    case 7 /* TypeOrder.RefValue */:\n      return t.referenceValue === e.referenceValue;\n    case 8 /* TypeOrder.GeoPointValue */:\n      return function (t, e) {\n        return Dt(t.geoPointValue.latitude) === Dt(e.geoPointValue.latitude) && Dt(t.geoPointValue.longitude) === Dt(e.geoPointValue.longitude);\n      }(t, e);\n    case 2 /* TypeOrder.NumberValue */:\n      return function (t, e) {\n        if (\"integerValue\" in t && \"integerValue\" in e) return Dt(t.integerValue) === Dt(e.integerValue);\n        if (\"doubleValue\" in t && \"doubleValue\" in e) {\n          const n = Dt(t.doubleValue),\n            r = Dt(e.doubleValue);\n          return n === r ? wt(n) === wt(r) : isNaN(n) && isNaN(r);\n        }\n        return !1;\n      }(t, e);\n    case 9 /* TypeOrder.ArrayValue */:\n      return Tt(t.arrayValue.values || [], e.arrayValue.values || [], Mt);\n    case 10 /* TypeOrder.ObjectValue */:\n      return function (t, e) {\n        const n = t.mapValue.fields || {},\n          r = e.mapValue.fields || {};\n        if (At(n) !== At(r)) return !1;\n        for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !Mt(n[t], r[t]))) return !1;\n        return !0;\n      }\n      /** Returns true if the ArrayValue contains the specified element. */(t, e);\n    default:\n      return b();\n  }\n}\nfunction Lt(t, e) {\n  return void 0 !== (t.values || []).find(t => Mt(t, e));\n}\nfunction Ut(t, e) {\n  if (t === e) return 0;\n  const n = Ct(t),\n    r = Ct(e);\n  if (n !== r) return It(n, r);\n  switch (n) {\n    case 0 /* TypeOrder.NullValue */:\n    case 9007199254740991 /* TypeOrder.MaxValue */:\n      return 0;\n    case 1 /* TypeOrder.BooleanValue */:\n      return It(t.booleanValue, e.booleanValue);\n    case 2 /* TypeOrder.NumberValue */:\n      return function (t, e) {\n        const n = Dt(t.integerValue || t.doubleValue),\n          r = Dt(e.integerValue || e.doubleValue);\n        return n < r ? -1 : n > r ? 1 : n === r ? 0 :\n        // one or both are NaN.\n        isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n      }(t, e);\n    case 3 /* TypeOrder.TimestampValue */:\n      return jt(t.timestampValue, e.timestampValue);\n    case 4 /* TypeOrder.ServerTimestampValue */:\n      return jt(Ot(t), Ot(e));\n    case 5 /* TypeOrder.StringValue */:\n      return It(t.stringValue, e.stringValue);\n    case 6 /* TypeOrder.BlobValue */:\n      return function (t, e) {\n        const n = Ft(t),\n          r = Ft(e);\n        return n.compareTo(r);\n      }(t.bytesValue, e.bytesValue);\n    case 7 /* TypeOrder.RefValue */:\n      return function (t, e) {\n        const n = t.split(\"/\"),\n          r = e.split(\"/\");\n        for (let t = 0; t < n.length && t < r.length; t++) {\n          const e = It(n[t], r[t]);\n          if (0 !== e) return e;\n        }\n        return It(n.length, r.length);\n      }(t.referenceValue, e.referenceValue);\n    case 8 /* TypeOrder.GeoPointValue */:\n      return function (t, e) {\n        const n = It(Dt(t.latitude), Dt(e.latitude));\n        if (0 !== n) return n;\n        return It(Dt(t.longitude), Dt(e.longitude));\n      }(t.geoPointValue, e.geoPointValue);\n    case 9 /* TypeOrder.ArrayValue */:\n      return function (t, e) {\n        const n = t.values || [],\n          r = e.values || [];\n        for (let t = 0; t < n.length && t < r.length; ++t) {\n          const e = Ut(n[t], r[t]);\n          if (e) return e;\n        }\n        return It(n.length, r.length);\n      }(t.arrayValue, e.arrayValue);\n    case 10 /* TypeOrder.ObjectValue */:\n      return function (t, e) {\n        if (t === kt && e === kt) return 0;\n        if (t === kt) return 1;\n        if (e === kt) return -1;\n        const n = t.fields || {},\n          r = Object.keys(n),\n          s = e.fields || {},\n          i = Object.keys(s);\n        // Even though MapValues are likely sorted correctly based on their insertion\n        // order (e.g. when received from the backend), local modifications can bring\n        // elements out of order. We need to re-sort the elements to ensure that\n        // canonical IDs are independent of insertion order.\n        r.sort(), i.sort();\n        for (let t = 0; t < r.length && t < i.length; ++t) {\n          const e = It(r[t], i[t]);\n          if (0 !== e) return e;\n          const o = Ut(n[r[t]], s[i[t]]);\n          if (0 !== o) return o;\n        }\n        return It(r.length, i.length);\n      }\n      /** Returns a reference value for the provided database and key. */(t.mapValue, e.mapValue);\n    default:\n      throw b();\n  }\n}\nfunction jt(t, e) {\n  if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return It(t, e);\n  const n = Nt(t),\n    r = Nt(e),\n    s = It(n.seconds, r.seconds);\n  return 0 !== s ? s : It(n.nanos, r.nanos);\n}\nfunction Bt(t, e) {\n  return {\n    referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n  };\n}\n\n/** Returns true if `value` is an ArrayValue. */\nfunction Qt(t) {\n  return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */\nfunction zt(t) {\n  return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */\nfunction Wt(t) {\n  return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */\nfunction Gt(t) {\n  return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */\nfunction Kt(t) {\n  if (t.geoPointValue) return {\n    geoPointValue: Object.assign({}, t.geoPointValue)\n  };\n  if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n    timestampValue: Object.assign({}, t.timestampValue)\n  };\n  if (t.mapValue) {\n    const e = {\n      mapValue: {\n        fields: {}\n      }\n    };\n    return Rt(t.mapValue.fields, (t, n) => e.mapValue.fields[t] = Kt(n)), e;\n  }\n  if (t.arrayValue) {\n    const e = {\n      arrayValue: {\n        values: []\n      }\n    };\n    for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Kt(t.arrayValue.values[n]);\n    return e;\n  }\n  return Object.assign({}, t);\n}\nclass Yt {\n  constructor(t, e) {\n    this.position = t, this.inclusive = e;\n  }\n}\nfunction Ht(t, e) {\n  if (null === t) return null === e;\n  if (null === e) return !1;\n  if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n  for (let n = 0; n < t.position.length; n++) {\n    if (!Mt(t.position[n], e.position[n])) return !1;\n  }\n  return !0;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass Jt {}\nclass Xt extends Jt {\n  constructor(t, e, n) {\n    super(), this.field = t, this.op = e, this.value = n;\n  }\n  /**\n   * Creates a filter based on the provided arguments.\n   */\n  static create(t, e, n) {\n    return t.isKeyField() ? \"in\" /* Operator.IN */ === e || \"not-in\" /* Operator.NOT_IN */ === e ? this.createKeyFieldInFilter(t, e, n) : new ee(t, e, n) : \"array-contains\" /* Operator.ARRAY_CONTAINS */ === e ? new ie(t, n) : \"in\" /* Operator.IN */ === e ? new oe(t, n) : \"not-in\" /* Operator.NOT_IN */ === e ? new ue(t, n) : \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === e ? new ce(t, n) : new Xt(t, e, n);\n  }\n  static createKeyFieldInFilter(t, e, n) {\n    return \"in\" /* Operator.IN */ === e ? new ne(t, n) : new re(t, n);\n  }\n  matches(t) {\n    const e = t.data.field(this.field);\n    // Types do not have to match in NOT_EQUAL filters.\n    return \"!=\" /* Operator.NOT_EQUAL */ === this.op ? null !== e && this.matchesComparison(Ut(e, this.value)) : null !== e && Ct(this.value) === Ct(e) && this.matchesComparison(Ut(e, this.value));\n    // Only compare types with matching backend order (such as double and int).\n  }\n\n  matchesComparison(t) {\n    switch (this.op) {\n      case \"<\" /* Operator.LESS_THAN */:\n        return t < 0;\n      case \"<=\" /* Operator.LESS_THAN_OR_EQUAL */:\n        return t <= 0;\n      case \"==\" /* Operator.EQUAL */:\n        return 0 === t;\n      case \"!=\" /* Operator.NOT_EQUAL */:\n        return 0 !== t;\n      case \">\" /* Operator.GREATER_THAN */:\n        return t > 0;\n      case \">=\" /* Operator.GREATER_THAN_OR_EQUAL */:\n        return t >= 0;\n      default:\n        return b();\n    }\n  }\n  isInequality() {\n    return [\"<\" /* Operator.LESS_THAN */, \"<=\" /* Operator.LESS_THAN_OR_EQUAL */, \">\" /* Operator.GREATER_THAN */, \">=\" /* Operator.GREATER_THAN_OR_EQUAL */, \"!=\" /* Operator.NOT_EQUAL */, \"not-in\" /* Operator.NOT_IN */].indexOf(this.op) >= 0;\n  }\n  getFlattenedFilters() {\n    return [this];\n  }\n  getFilters() {\n    return [this];\n  }\n  getFirstInequalityField() {\n    return this.isInequality() ? this.field : null;\n  }\n}\nclass Zt extends Jt {\n  constructor(t, e) {\n    super(), this.filters = t, this.op = e, this.D = null;\n  }\n  /**\n   * Creates a filter based on the provided arguments.\n   */\n  static create(t, e) {\n    return new Zt(t, e);\n  }\n  matches(t) {\n    return \"and\" /* CompositeOperator.AND */ === this.op ? void 0 === this.filters.find(e => !e.matches(t)) : void 0 !== this.filters.find(e => e.matches(t));\n  }\n  getFlattenedFilters() {\n    return null !== this.D || (this.D = this.filters.reduce((t, e) => t.concat(e.getFlattenedFilters()), [])), this.D;\n  }\n  // Returns a mutable copy of `this.filters`\n  getFilters() {\n    return Object.assign([], this.filters);\n  }\n  getFirstInequalityField() {\n    const t = this.F(t => t.isInequality());\n    return null !== t ? t.field : null;\n  }\n  // Performs a depth-first search to find and return the first FieldFilter in the composite filter\n  // that satisfies the predicate. Returns `null` if none of the FieldFilters satisfy the\n  // predicate.\n  F(t) {\n    for (const e of this.getFlattenedFilters()) if (t(e)) return e;\n    return null;\n  }\n}\nfunction te(t, e) {\n  return t instanceof Xt ? function (t, e) {\n    return e instanceof Xt && t.op === e.op && t.field.isEqual(e.field) && Mt(t.value, e.value);\n  }(t, e) : t instanceof Zt ? function (t, e) {\n    if (e instanceof Zt && t.op === e.op && t.filters.length === e.filters.length) {\n      return t.filters.reduce((t, n, r) => t && te(n, e.filters[r]), !0);\n    }\n    return !1;\n  }\n  /** Filter that matches on key fields (i.e. '__name__'). */(t, e) : void b();\n}\nclass ee extends Xt {\n  constructor(t, e, n) {\n    super(t, e, n), this.key = rt.fromName(n.referenceValue);\n  }\n  matches(t) {\n    const e = rt.comparator(t.key, this.key);\n    return this.matchesComparison(e);\n  }\n}\n\n/** Filter that matches on key fields within an array. */\nclass ne extends Xt {\n  constructor(t, e) {\n    super(t, \"in\" /* Operator.IN */, e), this.keys = se(\"in\" /* Operator.IN */, e);\n  }\n  matches(t) {\n    return this.keys.some(e => e.isEqual(t.key));\n  }\n}\n\n/** Filter that matches on key fields not present within an array. */\nclass re extends Xt {\n  constructor(t, e) {\n    super(t, \"not-in\" /* Operator.NOT_IN */, e), this.keys = se(\"not-in\" /* Operator.NOT_IN */, e);\n  }\n  matches(t) {\n    return !this.keys.some(e => e.isEqual(t.key));\n  }\n}\nfunction se(t, e) {\n  var n;\n  return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map(t => rt.fromName(t.referenceValue));\n}\n\n/** A Filter that implements the array-contains operator. */\nclass ie extends Xt {\n  constructor(t, e) {\n    super(t, \"array-contains\" /* Operator.ARRAY_CONTAINS */, e);\n  }\n  matches(t) {\n    const e = t.data.field(this.field);\n    return Qt(e) && Lt(e.arrayValue, this.value);\n  }\n}\n\n/** A Filter that implements the IN operator. */\nclass oe extends Xt {\n  constructor(t, e) {\n    super(t, \"in\" /* Operator.IN */, e);\n  }\n  matches(t) {\n    const e = t.data.field(this.field);\n    return null !== e && Lt(this.value.arrayValue, e);\n  }\n}\n\n/** A Filter that implements the not-in operator. */\nclass ue extends Xt {\n  constructor(t, e) {\n    super(t, \"not-in\" /* Operator.NOT_IN */, e);\n  }\n  matches(t) {\n    if (Lt(this.value.arrayValue, {\n      nullValue: \"NULL_VALUE\"\n    })) return !1;\n    const e = t.data.field(this.field);\n    return null !== e && !Lt(this.value.arrayValue, e);\n  }\n}\n\n/** A Filter that implements the array-contains-any operator. */\nclass ce extends Xt {\n  constructor(t, e) {\n    super(t, \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */, e);\n  }\n  matches(t) {\n    const e = t.data.field(this.field);\n    return !(!Qt(e) || !e.arrayValue.values) && e.arrayValue.values.some(t => Lt(this.value.arrayValue, t));\n  }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */\nclass ae {\n  constructor(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"asc\";\n    this.field = t, this.dir = e;\n  }\n}\nfunction he(t, e) {\n  return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */\nclass le {\n  constructor(t) {\n    this.timestamp = t;\n  }\n  static fromTimestamp(t) {\n    return new le(t);\n  }\n  static min() {\n    return new le(new xt(0, 0));\n  }\n  static max() {\n    return new le(new xt(253402300799, 999999999));\n  }\n  compareTo(t) {\n    return this.timestamp._compareTo(t.timestamp);\n  }\n  isEqual(t) {\n    return this.timestamp.isEqual(t.timestamp);\n  }\n  /** Returns a number representation of the version for use in spec tests. */\n  toMicroseconds() {\n    // Convert to microseconds.\n    return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n  }\n  toString() {\n    return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n  }\n  toTimestamp() {\n    return this.timestamp;\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass fe {\n  constructor(t, e) {\n    this.comparator = t, this.root = e || we.EMPTY;\n  }\n  // Returns a copy of the map, with the specified key/value added or replaced.\n  insert(t, e) {\n    return new fe(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, we.BLACK, null, null));\n  }\n  // Returns a copy of the map, with the specified key removed.\n  remove(t) {\n    return new fe(this.comparator, this.root.remove(t, this.comparator).copy(null, null, we.BLACK, null, null));\n  }\n  // Returns the value of the node with the given key, or null.\n  get(t) {\n    let e = this.root;\n    for (; !e.isEmpty();) {\n      const n = this.comparator(t, e.key);\n      if (0 === n) return e.value;\n      n < 0 ? e = e.left : n > 0 && (e = e.right);\n    }\n    return null;\n  }\n  // Returns the index of the element in this sorted map, or -1 if it doesn't\n  // exist.\n  indexOf(t) {\n    // Number of nodes that were pruned when descending right\n    let e = 0,\n      n = this.root;\n    for (; !n.isEmpty();) {\n      const r = this.comparator(t, n.key);\n      if (0 === r) return e + n.left.size;\n      r < 0 ? n = n.left : (\n      // Count all nodes left of the node plus the node itself\n      e += n.left.size + 1, n = n.right);\n    }\n    // Node not found\n    return -1;\n  }\n  isEmpty() {\n    return this.root.isEmpty();\n  }\n  // Returns the total number of nodes in the map.\n  get size() {\n    return this.root.size;\n  }\n  // Returns the minimum key in the map.\n  minKey() {\n    return this.root.minKey();\n  }\n  // Returns the maximum key in the map.\n  maxKey() {\n    return this.root.maxKey();\n  }\n  // Traverses the map in key order and calls the specified action function\n  // for each key/value pair. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n  inorderTraversal(t) {\n    return this.root.inorderTraversal(t);\n  }\n  forEach(t) {\n    this.inorderTraversal((e, n) => (t(e, n), !1));\n  }\n  toString() {\n    const t = [];\n    return this.inorderTraversal((e, n) => (t.push(`${e}:${n}`), !1)), `{${t.join(\", \")}}`;\n  }\n  // Traverses the map in reverse key order and calls the specified action\n  // function for each key/value pair. If action returns true, traversal is\n  // aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n  reverseTraversal(t) {\n    return this.root.reverseTraversal(t);\n  }\n  // Returns an iterator over the SortedMap.\n  getIterator() {\n    return new de(this.root, null, this.comparator, !1);\n  }\n  getIteratorFrom(t) {\n    return new de(this.root, t, this.comparator, !1);\n  }\n  getReverseIterator() {\n    return new de(this.root, null, this.comparator, !0);\n  }\n  getReverseIteratorFrom(t) {\n    return new de(this.root, t, this.comparator, !0);\n  }\n}\n\n// end SortedMap\n// An iterator over an LLRBNode.\nclass de {\n  constructor(t, e, n, r) {\n    this.isReverse = r, this.nodeStack = [];\n    let s = 1;\n    for (; !t.isEmpty();) if (s = e ? n(t.key, e) : 1,\n    // flip the comparison if we're going in reverse\n    e && r && (s *= -1), s < 0)\n      // This node is less than our start key. ignore it\n      t = this.isReverse ? t.left : t.right;else {\n      if (0 === s) {\n        // This node is exactly equal to our start key. Push it on the stack,\n        // but stop iterating;\n        this.nodeStack.push(t);\n        break;\n      }\n      // This node is greater than our start key, add it to the stack and move\n      // to the next one\n      this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n    }\n  }\n  getNext() {\n    let t = this.nodeStack.pop();\n    const e = {\n      key: t.key,\n      value: t.value\n    };\n    if (this.isReverse) for (t = t.left; !t.isEmpty();) this.nodeStack.push(t), t = t.right;else for (t = t.right; !t.isEmpty();) this.nodeStack.push(t), t = t.left;\n    return e;\n  }\n  hasNext() {\n    return this.nodeStack.length > 0;\n  }\n  peek() {\n    if (0 === this.nodeStack.length) return null;\n    const t = this.nodeStack[this.nodeStack.length - 1];\n    return {\n      key: t.key,\n      value: t.value\n    };\n  }\n}\n\n// end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass we {\n  constructor(t, e, n, r, s) {\n    this.key = t, this.value = e, this.color = null != n ? n : we.RED, this.left = null != r ? r : we.EMPTY, this.right = null != s ? s : we.EMPTY, this.size = this.left.size + 1 + this.right.size;\n  }\n  // Returns a copy of the current node, optionally replacing pieces of it.\n  copy(t, e, n, r, s) {\n    return new we(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n  }\n  isEmpty() {\n    return !1;\n  }\n  // Traverses the tree in key order and calls the specified action function\n  // for each node. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n  inorderTraversal(t) {\n    return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n  }\n  // Traverses the tree in reverse key order and calls the specified action\n  // function for each node. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n  reverseTraversal(t) {\n    return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n  }\n  // Returns the minimum node in the tree.\n  min() {\n    return this.left.isEmpty() ? this : this.left.min();\n  }\n  // Returns the maximum key in the tree.\n  minKey() {\n    return this.min().key;\n  }\n  // Returns the maximum key in the tree.\n  maxKey() {\n    return this.right.isEmpty() ? this.key : this.right.maxKey();\n  }\n  // Returns new tree, with the key/value added.\n  insert(t, e, n) {\n    let r = this;\n    const s = n(t, r.key);\n    return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), r.fixUp();\n  }\n  removeMin() {\n    if (this.left.isEmpty()) return we.EMPTY;\n    let t = this;\n    return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), t.fixUp();\n  }\n  // Returns new tree, with the specified item removed.\n  remove(t, e) {\n    let n,\n      r = this;\n    if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), r = r.copy(null, null, null, r.left.remove(t, e), null);else {\n      if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), 0 === e(t, r.key)) {\n        if (r.right.isEmpty()) return we.EMPTY;\n        n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n      }\n      r = r.copy(null, null, null, null, r.right.remove(t, e));\n    }\n    return r.fixUp();\n  }\n  isRed() {\n    return this.color;\n  }\n  // Returns new tree after performing any needed rotations.\n  fixUp() {\n    let t = this;\n    return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n  }\n  moveRedLeft() {\n    let t = this.colorFlip();\n    return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), t = t.rotateLeft(), t = t.colorFlip()), t;\n  }\n  moveRedRight() {\n    let t = this.colorFlip();\n    return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n  }\n  rotateLeft() {\n    const t = this.copy(null, null, we.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, t, null);\n  }\n  rotateRight() {\n    const t = this.copy(null, null, we.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, t);\n  }\n  colorFlip() {\n    const t = this.left.copy(null, null, !this.left.color, null, null),\n      e = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, t, e);\n  }\n  // For testing.\n  checkMaxDepth() {\n    const t = this.check();\n    return Math.pow(2, t) <= this.size + 1;\n  }\n  // In a balanced RB tree, the black-depth (number of black nodes) from root to\n  // leaves is equal on both sides.  This function verifies that or asserts.\n  check() {\n    if (this.isRed() && this.left.isRed()) throw b();\n    if (this.right.isRed()) throw b();\n    const t = this.left.check();\n    if (t !== this.right.check()) throw b();\n    return t + (this.isRed() ? 0 : 1);\n  }\n}\n\n// end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nwe.EMPTY = null, we.RED = !0, we.BLACK = !1;\n\n// end LLRBEmptyNode\nwe.EMPTY = new\n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n  constructor() {\n    this.size = 0;\n  }\n  get key() {\n    throw b();\n  }\n  get value() {\n    throw b();\n  }\n  get color() {\n    throw b();\n  }\n  get left() {\n    throw b();\n  }\n  get right() {\n    throw b();\n  }\n  // Returns a copy of the current node.\n  copy(t, e, n, r, s) {\n    return this;\n  }\n  // Returns a copy of the tree, with the specified key/value added.\n  insert(t, e, n) {\n    return new we(t, e);\n  }\n  // Returns a copy of the tree, with the specified key removed.\n  remove(t, e) {\n    return this;\n  }\n  isEmpty() {\n    return !0;\n  }\n  inorderTraversal(t) {\n    return !1;\n  }\n  reverseTraversal(t) {\n    return !1;\n  }\n  minKey() {\n    return null;\n  }\n  maxKey() {\n    return null;\n  }\n  isRed() {\n    return !1;\n  }\n  // For testing.\n  checkMaxDepth() {\n    return !0;\n  }\n  check() {\n    return 0;\n  }\n}();\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass me {\n  constructor(t) {\n    this.comparator = t, this.data = new fe(this.comparator);\n  }\n  has(t) {\n    return null !== this.data.get(t);\n  }\n  first() {\n    return this.data.minKey();\n  }\n  last() {\n    return this.data.maxKey();\n  }\n  get size() {\n    return this.data.size;\n  }\n  indexOf(t) {\n    return this.data.indexOf(t);\n  }\n  /** Iterates elements in order defined by \"comparator\" */\n  forEach(t) {\n    this.data.inorderTraversal((e, n) => (t(e), !1));\n  }\n  /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */\n  forEachInRange(t, e) {\n    const n = this.data.getIteratorFrom(t[0]);\n    for (; n.hasNext();) {\n      const r = n.getNext();\n      if (this.comparator(r.key, t[1]) >= 0) return;\n      e(r.key);\n    }\n  }\n  /**\n   * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n   */\n  forEachWhile(t, e) {\n    let n;\n    for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext();) {\n      if (!t(n.getNext().key)) return;\n    }\n  }\n  /** Finds the least element greater than or equal to `elem`. */\n  firstAfterOrEqual(t) {\n    const e = this.data.getIteratorFrom(t);\n    return e.hasNext() ? e.getNext().key : null;\n  }\n  getIterator() {\n    return new pe(this.data.getIterator());\n  }\n  getIteratorFrom(t) {\n    return new pe(this.data.getIteratorFrom(t));\n  }\n  /** Inserts or updates an element */\n  add(t) {\n    return this.copy(this.data.remove(t).insert(t, !0));\n  }\n  /** Deletes an element */\n  delete(t) {\n    return this.has(t) ? this.copy(this.data.remove(t)) : this;\n  }\n  isEmpty() {\n    return this.data.isEmpty();\n  }\n  unionWith(t) {\n    let e = this;\n    // Make sure `result` always refers to the larger one of the two sets.\n    return e.size < t.size && (e = t, t = this), t.forEach(t => {\n      e = e.add(t);\n    }), e;\n  }\n  isEqual(t) {\n    if (!(t instanceof me)) return !1;\n    if (this.size !== t.size) return !1;\n    const e = this.data.getIterator(),\n      n = t.data.getIterator();\n    for (; e.hasNext();) {\n      const t = e.getNext().key,\n        r = n.getNext().key;\n      if (0 !== this.comparator(t, r)) return !1;\n    }\n    return !0;\n  }\n  toArray() {\n    const t = [];\n    return this.forEach(e => {\n      t.push(e);\n    }), t;\n  }\n  toString() {\n    const t = [];\n    return this.forEach(e => t.push(e)), \"SortedSet(\" + t.toString() + \")\";\n  }\n  copy(t) {\n    const e = new me(this.comparator);\n    return e.data = t, e;\n  }\n}\nclass pe {\n  constructor(t) {\n    this.iter = t;\n  }\n  getNext() {\n    return this.iter.getNext().key;\n  }\n  hasNext() {\n    return this.iter.hasNext();\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */\nclass ye {\n  constructor(t) {\n    this.fields = t,\n    // TODO(dimond): validation of FieldMask\n    // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n    t.sort(nt.comparator);\n  }\n  static empty() {\n    return new ye([]);\n  }\n  /**\n   * Returns a new FieldMask object that is the result of adding all the given\n   * fields paths to this field mask.\n   */\n  unionWith(t) {\n    let e = new me(nt.comparator);\n    for (const t of this.fields) e = e.add(t);\n    for (const n of t) e = e.add(n);\n    return new ye(e.toArray());\n  }\n  /**\n   * Verifies that `fieldPath` is included by at least one field in this field\n   * mask.\n   *\n   * This is an O(n) operation, where `n` is the size of the field mask.\n   */\n  covers(t) {\n    for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n    return !1;\n  }\n  isEqual(t) {\n    return Tt(this.fields, t.fields, (t, e) => t.isEqual(e));\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */\nclass ge {\n  constructor(t) {\n    this.value = t;\n  }\n  static empty() {\n    return new ge({\n      mapValue: {}\n    });\n  }\n  /**\n   * Returns the value at the given path or null.\n   *\n   * @param path - the path to search\n   * @returns The value at the path or null if the path is not set.\n   */\n  field(t) {\n    if (t.isEmpty()) return this.value;\n    {\n      let e = this.value;\n      for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], !Gt(e)) return null;\n      return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n    }\n  }\n  /**\n   * Sets the field to the provided value.\n   *\n   * @param path - The field path to set.\n   * @param value - The value to set.\n   */\n  set(t, e) {\n    this.getFieldsMap(t.popLast())[t.lastSegment()] = Kt(e);\n  }\n  /**\n   * Sets the provided fields to the provided values.\n   *\n   * @param data - A map of fields to values (or null for deletes).\n   */\n  setAll(t) {\n    let e = nt.emptyPath(),\n      n = {},\n      r = [];\n    t.forEach((t, s) => {\n      if (!e.isImmediateParentOf(s)) {\n        // Insert the accumulated changes at this parent location\n        const t = this.getFieldsMap(e);\n        this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n      }\n      t ? n[s.lastSegment()] = Kt(t) : r.push(s.lastSegment());\n    });\n    const s = this.getFieldsMap(e);\n    this.applyChanges(s, n, r);\n  }\n  /**\n   * Removes the field at the specified path. If there is no field at the\n   * specified path, nothing is changed.\n   *\n   * @param path - The field path to remove.\n   */\n  delete(t) {\n    const e = this.field(t.popLast());\n    Gt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n  }\n  isEqual(t) {\n    return Mt(this.value, t.value);\n  }\n  /**\n   * Returns the map that contains the leaf element of `path`. If the parent\n   * entry does not yet exist, or if it is not a map, a new map will be created.\n   */\n  getFieldsMap(t) {\n    let e = this.value;\n    e.mapValue.fields || (e.mapValue = {\n      fields: {}\n    });\n    for (let n = 0; n < t.length; ++n) {\n      let r = e.mapValue.fields[t.get(n)];\n      Gt(r) && r.mapValue.fields || (r = {\n        mapValue: {\n          fields: {}\n        }\n      }, e.mapValue.fields[t.get(n)] = r), e = r;\n    }\n    return e.mapValue.fields;\n  }\n  /**\n   * Modifies `fieldsMap` by adding, replacing or deleting the specified\n   * entries.\n   */\n  applyChanges(t, e, n) {\n    Rt(e, (e, n) => t[e] = n);\n    for (const e of n) delete t[e];\n  }\n  clone() {\n    return new ge(Kt(this.value));\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */\nclass _e {\n  constructor(t, e, n, r, s, i, o) {\n    this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.createTime = s, this.data = i, this.documentState = o;\n  }\n  /**\n   * Creates a document with no known version or data, but which can serve as\n   * base document for mutations.\n   */\n  static newInvalidDocument(t) {\n    return new _e(t, 0 /* DocumentType.INVALID */, /* version */le.min(), /* readTime */le.min(), /* createTime */le.min(), ge.empty(), 0 /* DocumentState.SYNCED */);\n  }\n  /**\n   * Creates a new document that is known to exist with the given data at the\n   * given version.\n   */\n  static newFoundDocument(t, e, n, r) {\n    return new _e(t, 1 /* DocumentType.FOUND_DOCUMENT */, /* version */e, /* readTime */le.min(), /* createTime */n, r, 0 /* DocumentState.SYNCED */);\n  }\n  /** Creates a new document that is known to not exist at the given version. */\n  static newNoDocument(t, e) {\n    return new _e(t, 2 /* DocumentType.NO_DOCUMENT */, /* version */e, /* readTime */le.min(), /* createTime */le.min(), ge.empty(), 0 /* DocumentState.SYNCED */);\n  }\n  /**\n   * Creates a new document that is known to exist at the given version but\n   * whose data is not known (e.g. a document that was updated without a known\n   * base document).\n   */\n  static newUnknownDocument(t, e) {\n    return new _e(t, 3 /* DocumentType.UNKNOWN_DOCUMENT */, /* version */e, /* readTime */le.min(), /* createTime */le.min(), ge.empty(), 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */);\n  }\n  /**\n   * Changes the document type to indicate that it exists and that its version\n   * and data are known.\n   */\n  convertToFoundDocument(t, e) {\n    // If a document is switching state from being an invalid or deleted\n    // document to a valid (FOUND_DOCUMENT) document, either due to receiving an\n    // update from Watch or due to applying a local set mutation on top\n    // of a deleted document, our best guess about its createTime would be the\n    // version at which the document transitioned to a FOUND_DOCUMENT.\n    return !this.createTime.isEqual(le.min()) || 2 /* DocumentType.NO_DOCUMENT */ !== this.documentType && 0 /* DocumentType.INVALID */ !== this.documentType || (this.createTime = t), this.version = t, this.documentType = 1 /* DocumentType.FOUND_DOCUMENT */, this.data = e, this.documentState = 0 /* DocumentState.SYNCED */, this;\n  }\n  /**\n   * Changes the document type to indicate that it doesn't exist at the given\n   * version.\n   */\n  convertToNoDocument(t) {\n    return this.version = t, this.documentType = 2 /* DocumentType.NO_DOCUMENT */, this.data = ge.empty(), this.documentState = 0 /* DocumentState.SYNCED */, this;\n  }\n  /**\n   * Changes the document type to indicate that it exists at a given version but\n   * that its data is not known (e.g. a document that was updated without a known\n   * base document).\n   */\n  convertToUnknownDocument(t) {\n    return this.version = t, this.documentType = 3 /* DocumentType.UNKNOWN_DOCUMENT */, this.data = ge.empty(), this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */, this;\n  }\n  setHasCommittedMutations() {\n    return this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */, this;\n  }\n  setHasLocalMutations() {\n    return this.documentState = 1 /* DocumentState.HAS_LOCAL_MUTATIONS */, this.version = le.min(), this;\n  }\n  setReadTime(t) {\n    return this.readTime = t, this;\n  }\n  get hasLocalMutations() {\n    return 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ === this.documentState;\n  }\n  get hasCommittedMutations() {\n    return 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ === this.documentState;\n  }\n  get hasPendingWrites() {\n    return this.hasLocalMutations || this.hasCommittedMutations;\n  }\n  isValidDocument() {\n    return 0 /* DocumentType.INVALID */ !== this.documentType;\n  }\n  isFoundDocument() {\n    return 1 /* DocumentType.FOUND_DOCUMENT */ === this.documentType;\n  }\n  isNoDocument() {\n    return 2 /* DocumentType.NO_DOCUMENT */ === this.documentType;\n  }\n  isUnknownDocument() {\n    return 3 /* DocumentType.UNKNOWN_DOCUMENT */ === this.documentType;\n  }\n  isEqual(t) {\n    return t instanceof _e && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n  }\n  mutableCopy() {\n    return new _e(this.key, this.documentType, this.version, this.readTime, this.createTime, this.data.clone(), this.documentState);\n  }\n  toString() {\n    return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {createTime: ${this.createTime}}), {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n  }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass ve {\n  constructor(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    let i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n    let o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n    this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, this.startAt = i, this.endAt = o, this.S = null;\n  }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */\nfunction be(t) {\n  let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  let i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n  let o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n  return new ve(t, e, n, r, s, i, o);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\nclass Ee {\n  /**\n   * Initializes a Query with a path and optional additional query constraints.\n   * Path must currently be empty if this is a collection group query.\n   */\n  constructor(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    let i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : \"F\";\n    let o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n    let u = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n    this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.q = null,\n    // The corresponding `Target` of this `Query` instance.\n    this.O = null, this.startAt, this.endAt;\n  }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */\nfunction Ie(t) {\n  return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\nfunction Te(t) {\n  for (const e of t.filters) {\n    const t = e.getFirstInequalityField();\n    if (null !== t) return t;\n  }\n  return null;\n}\n\n/**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction Ae(t) {\n  return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */\nfunction Re(t) {\n  const e = I(t);\n  if (null === e.q) {\n    e.q = [];\n    const t = Te(e),\n      n = Ie(e);\n    if (null !== t && null === n)\n      // In order to implicitly add key ordering, we must also add the\n      // inequality filter field for it to be a valid query.\n      // Note that the default inequality field and key ordering is ascending.\n      t.isKeyField() || e.q.push(new ae(t)), e.q.push(new ae(nt.keyField(), \"asc\" /* Direction.ASCENDING */));else {\n      let t = !1;\n      for (const n of e.explicitOrderBy) e.q.push(n), n.field.isKeyField() && (t = !0);\n      if (!t) {\n        // The order of the implicit key ordering always matches the last\n        // explicit order by\n        const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* Direction.ASCENDING */;\n        e.q.push(new ae(nt.keyField(), t));\n      }\n    }\n  }\n  return e.q;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */\nfunction Pe(t) {\n  const e = I(t);\n  if (!e.O) if (\"F\" /* LimitType.First */ === e.limitType) e.O = be(e.path, e.collectionGroup, Re(e), e.filters, e.limit, e.startAt, e.endAt);else {\n    // Flip the orderBy directions since we want the last results\n    const t = [];\n    for (const n of Re(e)) {\n      const e = \"desc\" /* Direction.DESCENDING */ === n.dir ? \"asc\" /* Direction.ASCENDING */ : \"desc\" /* Direction.DESCENDING */;\n      t.push(new ae(n.field, e));\n    }\n    // We need to swap the cursors to match the now-flipped query ordering.\n    const n = e.endAt ? new Yt(e.endAt.position, e.endAt.inclusive) : null,\n      r = e.startAt ? new Yt(e.startAt.position, e.startAt.inclusive) : null;\n    // Now return as a LimitType.First query.\n    e.O = be(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n  }\n  return e.O;\n}\nfunction Ve(t, e) {\n  e.getFirstInequalityField(), Te(t);\n  const n = t.filters.concat([e]);\n  return new Ee(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n}\nfunction $e(t, e) {\n  return function (t, e) {\n    if (t.limit !== e.limit) return !1;\n    if (t.orderBy.length !== e.orderBy.length) return !1;\n    for (let n = 0; n < t.orderBy.length; n++) if (!he(t.orderBy[n], e.orderBy[n])) return !1;\n    if (t.filters.length !== e.filters.length) return !1;\n    for (let n = 0; n < t.filters.length; n++) if (!te(t.filters[n], e.filters[n])) return !1;\n    return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!Ht(t.startAt, e.startAt) && Ht(t.endAt, e.endAt);\n  }(Pe(t), Pe(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction Ne(t, e) {\n  return function (t) {\n    return \"number\" == typeof t && Number.isInteger(t) && !wt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n  }(e) ?\n  /**\n  * Returns an IntegerValue for `value`.\n  */\n  function (t) {\n    return {\n      integerValue: \"\" + t\n    };\n  }(e) : function (t, e) {\n    if (t.useProto3Json) {\n      if (isNaN(e)) return {\n        doubleValue: \"NaN\"\n      };\n      if (e === 1 / 0) return {\n        doubleValue: \"Infinity\"\n      };\n      if (e === -1 / 0) return {\n        doubleValue: \"-Infinity\"\n      };\n    }\n    return {\n      doubleValue: wt(e) ? \"-0\" : e\n    };\n  }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */\nclass De {\n  constructor() {\n    // Make sure that the structural type of `TransformOperation` is unique.\n    // See https://github.com/microsoft/TypeScript/issues/5451\n    this._ = void 0;\n  }\n}\n\n/** Transforms a value into a server-generated timestamp. */\nclass Fe extends De {}\n\n/** Transforms an array value via a union operation. */\nclass xe extends De {\n  constructor(t) {\n    super(), this.elements = t;\n  }\n}\n\n/** Transforms an array value via a remove operation. */\nclass Se extends De {\n  constructor(t) {\n    super(), this.elements = t;\n  }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */\nclass qe extends De {\n  constructor(t, e) {\n    super(), this.serializer = t, this.k = e;\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */\nclass Oe {\n  constructor(t, e) {\n    this.field = t, this.transform = e;\n  }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */\nclass ke {\n  constructor(t, e) {\n    this.updateTime = t, this.exists = e;\n  }\n  /** Creates a new empty Precondition. */\n  static none() {\n    return new ke();\n  }\n  /** Creates a new Precondition with an exists flag. */\n  static exists(t) {\n    return new ke(void 0, t);\n  }\n  /** Creates a new Precondition based on a version a document exists at. */\n  static updateTime(t) {\n    return new ke(t);\n  }\n  /** Returns whether this Precondition is empty. */\n  get isNone() {\n    return void 0 === this.updateTime && void 0 === this.exists;\n  }\n  isEqual(t) {\n    return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n  }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */\nclass Ce {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */\nclass Me extends Ce {\n  constructor(t, e, n) {\n    let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, this.type = 0 /* MutationType.Set */;\n  }\n\n  getFieldMask() {\n    return null;\n  }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */\nclass Le extends Ce {\n  constructor(t, e, n, r) {\n    let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n    super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, this.fieldTransforms = s, this.type = 1 /* MutationType.Patch */;\n  }\n\n  getFieldMask() {\n    return this.fieldMask;\n  }\n}\n\n/** A mutation that deletes the document at the given key. */\nclass Ue extends Ce {\n  constructor(t, e) {\n    super(), this.key = t, this.precondition = e, this.type = 2 /* MutationType.Delete */, this.fieldTransforms = [];\n  }\n  getFieldMask() {\n    return null;\n  }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */\nclass je extends Ce {\n  constructor(t, e) {\n    super(), this.key = t, this.precondition = e, this.type = 3 /* MutationType.Verify */, this.fieldTransforms = [];\n  }\n  getFieldMask() {\n    return null;\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst Be = (() => {\n    const t = {\n      asc: \"ASCENDING\",\n      desc: \"DESCENDING\"\n    };\n    return t;\n  })(),\n  Qe = (() => {\n    const t = {\n      \"<\": \"LESS_THAN\",\n      \"<=\": \"LESS_THAN_OR_EQUAL\",\n      \">\": \"GREATER_THAN\",\n      \">=\": \"GREATER_THAN_OR_EQUAL\",\n      \"==\": \"EQUAL\",\n      \"!=\": \"NOT_EQUAL\",\n      \"array-contains\": \"ARRAY_CONTAINS\",\n      in: \"IN\",\n      \"not-in\": \"NOT_IN\",\n      \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n  })(),\n  ze = (() => {\n    const t = {\n      and: \"AND\",\n      or: \"OR\"\n    };\n    return t;\n  })();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass We {\n  constructor(t, e) {\n    this.databaseId = t, this.useProto3Json = e;\n  }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction Ge(t, e) {\n  if (t.useProto3Json) {\n    return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n  }\n  return {\n    seconds: \"\" + e.seconds,\n    nanos: e.nanoseconds\n  };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Ke(t, e) {\n  return t.useProto3Json ? e.toBase64() : e.toUint8Array();\n}\nfunction Ye(t, e) {\n  return Ge(t, e.toTimestamp());\n}\nfunction He(t) {\n  return E(!!t), le.fromTimestamp(function (t) {\n    const e = Nt(t);\n    return new xt(e.seconds, e.nanos);\n  }(t));\n}\nfunction Je(t, e) {\n  return function (t) {\n    return new tt([\"projects\", t.projectId, \"databases\", t.database]);\n  }(t).child(\"documents\").child(e).canonicalString();\n}\nfunction Xe(t, e) {\n  return Je(t.databaseId, e.path);\n}\nfunction Ze(t, e) {\n  const n = function (t) {\n    const e = tt.fromString(t);\n    return E(dn(e)), e;\n  }(e);\n  if (n.get(1) !== t.databaseId.projectId) throw new U(P, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n  if (n.get(3) !== t.databaseId.database) throw new U(P, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n  return new rt((E((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n  var r;\n  /** Creates a Document proto from key and fields (but no create/update time) */\n}\n\nfunction tn(t, e) {\n  return Je(t.databaseId, e);\n}\nfunction en(t) {\n  return new tt([\"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database]).canonicalString();\n}\nfunction nn(t, e, n) {\n  return {\n    name: Xe(t, e),\n    fields: n.value.mapValue.fields\n  };\n}\nfunction rn(t, e) {\n  return \"found\" in e ? function (t, e) {\n    E(!!e.found), e.found.name, e.found.updateTime;\n    const n = Ze(t, e.found.name),\n      r = He(e.found.updateTime),\n      s = e.found.createTime ? He(e.found.createTime) : le.min(),\n      i = new ge({\n        mapValue: {\n          fields: e.found.fields\n        }\n      });\n    return _e.newFoundDocument(n, r, s, i);\n  }(t, e) : \"missing\" in e ? function (t, e) {\n    E(!!e.missing), E(!!e.readTime);\n    const n = Ze(t, e.missing),\n      r = He(e.readTime);\n    return _e.newNoDocument(n, r);\n  }(t, e) : b();\n}\nfunction sn(t, e) {\n  let n;\n  if (e instanceof Me) n = {\n    update: nn(t, e.key, e.value)\n  };else if (e instanceof Ue) n = {\n    delete: Xe(t, e.key)\n  };else if (e instanceof Le) n = {\n    update: nn(t, e.key, e.data),\n    updateMask: fn(e.fieldMask)\n  };else {\n    if (!(e instanceof je)) return b();\n    n = {\n      verify: Xe(t, e.key)\n    };\n  }\n  return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map(t => function (t, e) {\n    const n = e.transform;\n    if (n instanceof Fe) return {\n      fieldPath: e.field.canonicalString(),\n      setToServerValue: \"REQUEST_TIME\"\n    };\n    if (n instanceof xe) return {\n      fieldPath: e.field.canonicalString(),\n      appendMissingElements: {\n        values: n.elements\n      }\n    };\n    if (n instanceof Se) return {\n      fieldPath: e.field.canonicalString(),\n      removeAllFromArray: {\n        values: n.elements\n      }\n    };\n    if (n instanceof qe) return {\n      fieldPath: e.field.canonicalString(),\n      increment: n.k\n    };\n    throw b();\n  }(0, t))), e.precondition.isNone || (n.currentDocument = function (t, e) {\n    return void 0 !== e.updateTime ? {\n      updateTime: Ye(t, e.updateTime)\n    } : void 0 !== e.exists ? {\n      exists: e.exists\n    } : b();\n  }(t, e.precondition)), n;\n}\nfunction on(t, e) {\n  // Dissect the path into parent, collectionId, and optional key filter.\n  const n = {\n      structuredQuery: {}\n    },\n    r = e.path;\n  null !== e.collectionGroup ? (n.parent = tn(t, r), n.structuredQuery.from = [{\n    collectionId: e.collectionGroup,\n    allDescendants: !0\n  }]) : (n.parent = tn(t, r.popLast()), n.structuredQuery.from = [{\n    collectionId: r.lastSegment()\n  }]);\n  const s = function (t) {\n    if (0 === t.length) return;\n    return ln(Zt.create(t, \"and\" /* CompositeOperator.AND */));\n  }(e.filters);\n  s && (n.structuredQuery.where = s);\n  const i = function (t) {\n    if (0 === t.length) return;\n    return t.map(t =>\n    // visible for testing\n    function (t) {\n      return {\n        field: hn(t.field),\n        direction: un(t.dir)\n      };\n    }\n    // visible for testing\n    (t));\n  }(e.orderBy);\n  i && (n.structuredQuery.orderBy = i);\n  const o = function (t, e) {\n    return t.useProto3Json || dt(e) ? e : {\n      value: e\n    };\n  }(t, e.limit);\n  var u;\n  return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n    before: (u = e.startAt).inclusive,\n    values: u.position\n  }), e.endAt && (n.structuredQuery.endAt = function (t) {\n    return {\n      before: !t.inclusive,\n      values: t.position\n    };\n  }\n  // visible for testing\n  (e.endAt)), n;\n}\nfunction un(t) {\n  return Be[t];\n}\n\n// visible for testing\nfunction cn(t) {\n  return Qe[t];\n}\nfunction an(t) {\n  return ze[t];\n}\nfunction hn(t) {\n  return {\n    fieldPath: t.canonicalString()\n  };\n}\nfunction ln(t) {\n  return t instanceof Xt ? function (t) {\n    if (\"==\" /* Operator.EQUAL */ === t.op) {\n      if (Wt(t.value)) return {\n        unaryFilter: {\n          field: hn(t.field),\n          op: \"IS_NAN\"\n        }\n      };\n      if (zt(t.value)) return {\n        unaryFilter: {\n          field: hn(t.field),\n          op: \"IS_NULL\"\n        }\n      };\n    } else if (\"!=\" /* Operator.NOT_EQUAL */ === t.op) {\n      if (Wt(t.value)) return {\n        unaryFilter: {\n          field: hn(t.field),\n          op: \"IS_NOT_NAN\"\n        }\n      };\n      if (zt(t.value)) return {\n        unaryFilter: {\n          field: hn(t.field),\n          op: \"IS_NOT_NULL\"\n        }\n      };\n    }\n    return {\n      fieldFilter: {\n        field: hn(t.field),\n        op: cn(t.op),\n        value: t.value\n      }\n    };\n  }(t) : t instanceof Zt ? function (t) {\n    const e = t.getFilters().map(t => ln(t));\n    if (1 === e.length) return e[0];\n    return {\n      compositeFilter: {\n        op: an(t.op),\n        filters: e\n      }\n    };\n  }(t) : b();\n}\nfunction fn(t) {\n  const e = [];\n  return t.fields.forEach(t => e.push(t.canonicalString())), {\n    fieldPaths: e\n  };\n}\nfunction dn(t) {\n  // Resource names have at least 4 components (project ID, database ID)\n  return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction wn(t) {\n  return new We(t, /* useProto3Json= */!0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass mn {\n  constructor(\n  /**\n   * The AsyncQueue to run backoff operations on.\n   */\n  t,\n  /**\n   * The ID to use when scheduling backoff operations on the AsyncQueue.\n   */\n  e) {\n    let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1e3;\n    let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1.5;\n    let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 6e4;\n    this.C = t, this.timerId = e, this.M = n, this.L = r, this.U = s, this.j = 0, this.B = null, /** The last backoff attempt, as epoch milliseconds. */\n    this.W = Date.now(), this.reset();\n  }\n  /**\n   * Resets the backoff delay.\n   *\n   * The very next backoffAndWait() will have no delay. If it is called again\n   * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n   * subsequent ones will increase according to the backoffFactor.\n   */\n  reset() {\n    this.j = 0;\n  }\n  /**\n   * Resets the backoff delay to the maximum delay (e.g. for use after a\n   * RESOURCE_EXHAUSTED error).\n   */\n  G() {\n    this.j = this.U;\n  }\n  /**\n   * Returns a promise that resolves after currentDelayMs, and increases the\n   * delay for any subsequent attempts. If there was a pending backoff operation\n   * already, it will be canceled.\n   */\n  K(t) {\n    // Cancel any pending backoff operation.\n    this.cancel();\n    // First schedule using the current base (which may be 0 and should be\n    // honored as such).\n    const e = Math.floor(this.j + this.Y()),\n      n = Math.max(0, Date.now() - this.W),\n      r = Math.max(0, e - n);\n    // Guard against lastAttemptTime being in the future due to a clock change.\n    r > 0 && y(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.j} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), this.B = this.C.enqueueAfterDelay(this.timerId, r, () => (this.W = Date.now(), t())),\n    // Apply backoff factor to determine next delay and ensure it is within\n    // bounds.\n    this.j *= this.L, this.j < this.M && (this.j = this.M), this.j > this.U && (this.j = this.U);\n  }\n  H() {\n    null !== this.B && (this.B.skipDelay(), this.B = null);\n  }\n  cancel() {\n    null !== this.B && (this.B.cancel(), this.B = null);\n  }\n  /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */\n  Y() {\n    return (Math.random() - .5) * this.j;\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass pn extends class {} {\n  constructor(t, e, n, r) {\n    super(), this.authCredentials = t, this.appCheckCredentials = e, this.connection = n, this.serializer = r, this.J = !1;\n  }\n  X() {\n    if (this.J) throw new U(S, \"The client has already been terminated.\");\n  }\n  /** Invokes the provided RPC with auth and AppCheck tokens. */\n  v(t, e, n) {\n    return this.X(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(_ref => {\n      let [r, s] = _ref;\n      return this.connection.v(t, e, n, r, s);\n    }).catch(t => {\n      throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n    });\n  }\n  /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */\n  R(t, e, n, r) {\n    return this.X(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(_ref2 => {\n      let [s, i] = _ref2;\n      return this.connection.R(t, e, n, s, i, r);\n    }).catch(t => {\n      throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n    });\n  }\n  terminate() {\n    this.J = !0;\n  }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function yn(t, e) {\n  const n = I(t),\n    r = en(n.serializer) + \"/documents\",\n    s = {\n      writes: e.map(t => sn(n.serializer, t))\n    };\n  await n.v(\"Commit\", r, s);\n}\nasync function gn(t, e) {\n  const n = I(t),\n    r = en(n.serializer) + \"/documents\",\n    s = {\n      documents: e.map(t => Xe(n.serializer, t))\n    },\n    i = await n.R(\"BatchGetDocuments\", r, s, e.length),\n    o = new Map();\n  i.forEach(t => {\n    const e = rn(n.serializer, t);\n    o.set(e.key.toString(), e);\n  });\n  const u = [];\n  return e.forEach(t => {\n    const e = o.get(t.toString());\n    E(!!e), u.push(e);\n  }), u;\n}\nasync function _n(t, e) {\n  const n = I(t),\n    r = on(n.serializer, Pe(e));\n  return (await n.R(\"RunQuery\", r.parent, {\n    structuredQuery: r.structuredQuery\n  })).filter(t => !!t.document).map(t => function (t, e, n) {\n    const r = Ze(t, e.name),\n      s = He(e.updateTime),\n      i = e.createTime ? He(e.createTime) : le.min(),\n      o = new ge({\n        mapValue: {\n          fields: e.fields\n        }\n      }),\n      u = _e.newFoundDocument(r, s, i, o);\n    return n && u.setHasCommittedMutations(), n ? u.setHasCommittedMutations() : u;\n  }(n.serializer, t.document, void 0));\n}\nasync function vn(t, e, n) {\n  var r;\n  const s = I(t),\n    {\n      request: i,\n      Z: o\n    } = function (t, e, n) {\n      const r = on(t, e),\n        s = {},\n        i = [];\n      let o = 0;\n      return n.forEach(t => {\n        // Map all client-side aliases to a unique short-form\n        // alias. This avoids issues with client-side aliases that\n        // exceed the 1500-byte string size limit.\n        const e = \"aggregate_\" + o++;\n        s[e] = t.alias, \"count\" === t.$ ? i.push({\n          alias: e,\n          count: {}\n        }) : \"avg\" === t.$ ? i.push({\n          alias: e,\n          avg: {\n            field: hn(t.fieldPath)\n          }\n        }) : \"sum\" === t.$ && i.push({\n          alias: e,\n          sum: {\n            field: hn(t.fieldPath)\n          }\n        });\n      }), {\n        request: {\n          structuredAggregationQuery: {\n            aggregations: i,\n            structuredQuery: r.structuredQuery\n          },\n          parent: r.parent\n        },\n        Z: s\n      };\n    }(s.serializer, Pe(e), n),\n    u = i.parent;\n  s.connection.g || delete i.parent;\n  const c = (await s.R(\"RunAggregationQuery\", u, i, /*expectedResponseCount=*/1)).filter(t => !!t.result);\n  // Omit RunAggregationQueryResponse that only contain readTimes.\n  E(1 === c.length);\n  // Remap the short-form aliases that were sent to the server\n  // to the client-side aliases. Users will access the results\n  // using the client-side alias.\n  const a = null === (r = c[0].result) || void 0 === r ? void 0 : r.aggregateFields;\n  return Object.keys(a).reduce((t, e) => (t[o[e]] = a[e], t), {});\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst bn = new Map();\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction En(t) {\n  if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n  if (!bn.has(t)) {\n    y(\"ComponentProvider\", \"Initializing Datastore\");\n    const i = function (t) {\n        return new _t(t, fetch.bind(null));\n      }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), new J(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, ht(s.experimentalLongPollingOptions), s.useFetchStreams))),\n      o = wn(t._databaseId),\n      u = function (t, e, n, r) {\n        return new pn(t, e, n, r);\n      }(t._authCredentials, t._appCheckCredentials, i, o);\n    bn.set(t, u);\n  }\n  var e, n, r, s;\n  /**\n  * @license\n  * Copyright 2018 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n  return bn.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass In {\n  constructor(t) {\n    var e, n;\n    if (void 0 === t.host) {\n      if (void 0 !== t.ssl) throw new U(P, \"Can't provide ssl option if host option is not set\");\n      this.host = \"firestore.googleapis.com\", this.ssl = true;\n    } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n    if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, this.cache = t.localCache, void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040;else {\n      if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(P, \"cacheSizeBytes must be at least 1048576\");\n      this.cacheSizeBytes = t.cacheSizeBytes;\n    }\n    !function (t, e, n, r) {\n      if (!0 === e && !0 === r) throw new U(P, `${t} and ${n} cannot be used together.`);\n    }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling), this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalForceLongPolling ? this.experimentalAutoDetectLongPolling = !1 : void 0 === t.experimentalAutoDetectLongPolling ? this.experimentalAutoDetectLongPolling = true :\n    // For backwards compatibility, coerce the value to boolean even though\n    // the TypeScript compiler has narrowed the type to boolean already.\n    // noinspection PointlessBooleanExpressionJS\n    this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, this.experimentalLongPollingOptions = ht(null !== (n = t.experimentalLongPollingOptions) && void 0 !== n ? n : {}), function (t) {\n      if (void 0 !== t.timeoutSeconds) {\n        if (isNaN(t.timeoutSeconds)) throw new U(P, `invalid long polling timeout: ${t.timeoutSeconds} (must not be NaN)`);\n        if (t.timeoutSeconds < 5) throw new U(P, `invalid long polling timeout: ${t.timeoutSeconds} (minimum allowed value is 5)`);\n        if (t.timeoutSeconds > 30) throw new U(P, `invalid long polling timeout: ${t.timeoutSeconds} (maximum allowed value is 30)`);\n      }\n    }\n    /**\n    * @license\n    * Copyright 2020 Google LLC\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *   http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    /**\n    * The Cloud Firestore service interface.\n    *\n    * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n    */(this.experimentalLongPollingOptions), this.useFetchStreams = !!t.useFetchStreams;\n  }\n  isEqual(t) {\n    return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && (e = this.experimentalLongPollingOptions, n = t.experimentalLongPollingOptions, e.timeoutSeconds === n.timeoutSeconds) && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    var e, n;\n  }\n}\nclass Tn {\n  /** @hideconstructor */\n  constructor(t, e, n, r) {\n    this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, this._app = r,\n    /**\n     * Whether it's a Firestore or Firestore Lite instance.\n     */\n    this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new In({}), this._settingsFrozen = !1;\n  }\n  /**\n   * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n   * instance.\n   */\n  get app() {\n    if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n    return this._app;\n  }\n  get _initialized() {\n    return this._settingsFrozen;\n  }\n  get _terminated() {\n    return void 0 !== this._terminateTask;\n  }\n  _setSettings(t) {\n    if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n    this._settings = new In(t), void 0 !== t.credentials && (this._authCredentials = function (t) {\n      if (!t) return new Q();\n      switch (t.type) {\n        case \"firstParty\":\n          return new K(t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n        case \"provider\":\n          return t.client;\n        default:\n          throw new U(P, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n      }\n    }(t.credentials));\n  }\n  _getSettings() {\n    return this._settings;\n  }\n  _freezeSettings() {\n    return this._settingsFrozen = !0, this._settings;\n  }\n  _delete() {\n    return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n  }\n  /** Returns a JSON-serializable representation of this `Firestore` instance. */\n  toJSON() {\n    return {\n      app: this._app,\n      databaseId: this._databaseId,\n      settings: this._settings\n    };\n  }\n  /**\n   * Terminates all components used by this client. Subclasses can override\n   * this method to clean up their own dependencies, but must also call this\n   * method.\n   *\n   * Only ever called once.\n   */\n  _terminate() {\n    return function (t) {\n      const e = bn.get(t);\n      e && (y(\"ComponentProvider\", \"Removing Datastore\"), bn.delete(t), e.terminate());\n    }(this), Promise.resolve();\n  }\n}\nfunction An(t, e, n) {\n  n || (n = \"(default)\");\n  const r = _getProvider(t, \"firestore/lite\");\n  if (r.isInitialized(n)) throw new U(S, \"Firestore can only be initialized once per app.\");\n  return r.initialize({\n    options: e,\n    instanceIdentifier: n\n  });\n}\nfunction Rn(e, n) {\n  const r = \"object\" == typeof e ? e : getApp(),\n    s = \"string\" == typeof e ? e : n || \"(default)\",\n    i = _getProvider(r, \"firestore/lite\").getImmediate({\n      identifier: s\n    });\n  if (!i._initialized) {\n    const t = getDefaultEmulatorHostnameAndPort(\"firestore\");\n    t && Pn(i, ...t);\n  }\n  return i;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */\nfunction Pn(t, e, n) {\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var s;\n  const i = (t = ct(t, Tn))._getSettings();\n  if (\"firestore.googleapis.com\" !== i.host && i.host !== e && _(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), t._setSettings(Object.assign(Object.assign({}, i), {\n    host: `${e}:${n}`,\n    ssl: !1\n  })), r.mockUserToken) {\n    let e, n;\n    if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = d.MOCK_USER;else {\n      // Let createMockUserToken validate first (catches common mistakes like\n      // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n      e = createMockUserToken(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n      const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n      if (!i) throw new U(P, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n      n = new d(i);\n    }\n    t._authCredentials = new z(new B(e, n));\n  }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */\nfunction Vn(t) {\n  return t = ct(t, Tn), _removeServiceInstance(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass $n {\n  /**\n   * Create a new AggregateField<T>\n   * @param _aggregateType Specifies the type of aggregation operation to perform.\n   * @param _internalFieldPath Optionally specifies the field that is aggregated.\n   * @internal\n   */\n  constructor() {\n    let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"count\";\n    let e = arguments.length > 1 ? arguments[1] : undefined;\n    this._aggregateType = t, this._internalFieldPath = e, /** A type string to uniquely identify instances of this class. */\n    this.type = \"AggregateField\";\n  }\n}\n\n/**\n * The results of executing an aggregation query.\n */\nclass Nn {\n  /** @hideconstructor */\n  constructor(t, e, n) {\n    this._userDataWriter = e, this._data = n, /** A type string to uniquely identify instances of this class. */\n    this.type = \"AggregateQuerySnapshot\", this.query = t;\n  }\n  /**\n   * Returns the results of the aggregations performed over the underlying\n   * query.\n   *\n   * The keys of the returned object will be the same as those of the\n   * `AggregateSpec` object specified to the aggregation method, and the values\n   * will be the corresponding aggregation result.\n   *\n   * @returns The results of the aggregations performed over the underlying\n   * query.\n   */\n  data() {\n    return this._userDataWriter.convertObjectMap(this._data);\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */\nclass Dn {\n  /** @hideconstructor */\n  constructor(t,\n  /**\n   * If provided, the `FirestoreDataConverter` associated with this instance.\n   */\n  e, n) {\n    this.converter = e, this._key = n, /** The type of this Firestore reference. */\n    this.type = \"document\", this.firestore = t;\n  }\n  get _path() {\n    return this._key.path;\n  }\n  /**\n   * The document's identifier within its collection.\n   */\n  get id() {\n    return this._key.path.lastSegment();\n  }\n  /**\n   * A string representing the path of the referenced document (relative\n   * to the root of the database).\n   */\n  get path() {\n    return this._key.path.canonicalString();\n  }\n  /**\n   * The collection this `DocumentReference` belongs to.\n   */\n  get parent() {\n    return new xn(this.firestore, this.converter, this._key.path.popLast());\n  }\n  withConverter(t) {\n    return new Dn(this.firestore, t, this._key);\n  }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */\nclass Fn {\n  // This is the lite version of the Query class in the main SDK.\n  /** @hideconstructor protected */\n  constructor(t,\n  /**\n   * If provided, the `FirestoreDataConverter` associated with this instance.\n   */\n  e, n) {\n    this.converter = e, this._query = n, /** The type of this Firestore reference. */\n    this.type = \"query\", this.firestore = t;\n  }\n  withConverter(t) {\n    return new Fn(this.firestore, t, this._query);\n  }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link (query:1)}).\n */\nclass xn extends Fn {\n  /** @hideconstructor */\n  constructor(t, e, n) {\n    super(t, e, new Ee(n)), this._path = n, /** The type of this Firestore reference. */\n    this.type = \"collection\";\n  }\n  /** The collection's identifier. */\n  get id() {\n    return this._query.path.lastSegment();\n  }\n  /**\n   * A string representing the path of the referenced collection (relative\n   * to the root of the database).\n   */\n  get path() {\n    return this._query.path.canonicalString();\n  }\n  /**\n   * A reference to the containing `DocumentReference` if this is a\n   * subcollection. If this isn't a subcollection, the reference is null.\n   */\n  get parent() {\n    const t = this._path.popLast();\n    return t.isEmpty() ? null : new Dn(this.firestore, /* converter= */null, new rt(t));\n  }\n  withConverter(t) {\n    return new xn(this.firestore, t, this._path);\n  }\n}\nfunction Sn(t, e) {\n  for (var _len5 = arguments.length, n = new Array(_len5 > 2 ? _len5 - 2 : 0), _key5 = 2; _key5 < _len5; _key5++) {\n    n[_key5 - 2] = arguments[_key5];\n  }\n  if (t = getModularInstance(t), st(\"collection\", \"path\", e), t instanceof Tn) {\n    const r = tt.fromString(e, ...n);\n    return ot(r), new xn(t, /* converter= */null, r);\n  }\n  {\n    if (!(t instanceof Dn || t instanceof xn)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n    const r = t._path.child(tt.fromString(e, ...n));\n    return ot(r), new xn(t.firestore, /* converter= */null, r);\n  }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */\nfunction qn(t, e) {\n  if (t = ct(t, Tn), st(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(P, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n  return new Fn(t, /* converter= */null, function (t) {\n    return new Ee(tt.emptyPath(), t);\n  }(e));\n}\nfunction On(t, e) {\n  for (var _len6 = arguments.length, n = new Array(_len6 > 2 ? _len6 - 2 : 0), _key6 = 2; _key6 < _len6; _key6++) {\n    n[_key6 - 2] = arguments[_key6];\n  }\n  if (t = getModularInstance(t),\n  // We allow omission of 'pathString' but explicitly prohibit passing in both\n  // 'undefined' and 'null'.\n  1 === arguments.length && (e = Et.N()), st(\"doc\", \"path\", e), t instanceof Tn) {\n    const r = tt.fromString(e, ...n);\n    return it(r), new Dn(t, /* converter= */null, new rt(r));\n  }\n  {\n    if (!(t instanceof Dn || t instanceof xn)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n    const r = t._path.child(tt.fromString(e, ...n));\n    return it(r), new Dn(t.firestore, t instanceof xn ? t.converter : null, new rt(r));\n  }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\nfunction kn(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), (t instanceof Dn || t instanceof xn) && (e instanceof Dn || e instanceof xn) && t.firestore === e.firestore && t.path === e.path && t.converter === e.converter;\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\nfunction Cn(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), t instanceof Fn && e instanceof Fn && t.firestore === e.firestore && $e(t._query, e._query) && t.converter === e.converter;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */\nclass Mn {\n  /** @hideconstructor */\n  constructor(t) {\n    this._byteString = t;\n  }\n  /**\n   * Creates a new `Bytes` object from the given Base64 string, converting it to\n   * bytes.\n   *\n   * @param base64 - The Base64 string used to create the `Bytes` object.\n   */\n  static fromBase64String(t) {\n    try {\n      return new Mn(Vt.fromBase64String(t));\n    } catch (t) {\n      throw new U(P, \"Failed to construct data from Base64 string: \" + t);\n    }\n  }\n  /**\n   * Creates a new `Bytes` object from the given Uint8Array.\n   *\n   * @param array - The Uint8Array used to create the `Bytes` object.\n   */\n  static fromUint8Array(t) {\n    return new Mn(Vt.fromUint8Array(t));\n  }\n  /**\n   * Returns the underlying bytes as a Base64-encoded string.\n   *\n   * @returns The Base64-encoded string created from the `Bytes` object.\n   */\n  toBase64() {\n    return this._byteString.toBase64();\n  }\n  /**\n   * Returns the underlying bytes in a new `Uint8Array`.\n   *\n   * @returns The Uint8Array created from the `Bytes` object.\n   */\n  toUint8Array() {\n    return this._byteString.toUint8Array();\n  }\n  /**\n   * Returns a string representation of the `Bytes` object.\n   *\n   * @returns A string representation of the `Bytes` object.\n   */\n  toString() {\n    return \"Bytes(base64: \" + this.toBase64() + \")\";\n  }\n  /**\n   * Returns true if this `Bytes` object is equal to the provided one.\n   *\n   * @param other - The `Bytes` object to compare against.\n   * @returns true if this `Bytes` object is equal to the provided one.\n   */\n  isEqual(t) {\n    return this._byteString.isEqual(t._byteString);\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */\nclass Ln {\n  /**\n   * Creates a `FieldPath` from the provided field names. If more than one field\n   * name is provided, the path will point to a nested field in a document.\n   *\n   * @param fieldNames - A list of field names.\n   */\n  constructor() {\n    for (var _len7 = arguments.length, t = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      t[_key7] = arguments[_key7];\n    }\n    for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(P, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n    this._internalPath = new nt(t);\n  }\n  /**\n   * Returns true if this `FieldPath` is equal to the provided one.\n   *\n   * @param other - The `FieldPath` to compare against.\n   * @returns true if this `FieldPath` is equal to the provided one.\n   */\n  isEqual(t) {\n    return this._internalPath.isEqual(t._internalPath);\n  }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */\nfunction Un() {\n  return new Ln(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */\nclass jn {\n  /**\n   * @param _methodName - The public API endpoint that returns this class.\n   * @hideconstructor\n   */\n  constructor(t) {\n    this._methodName = t;\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */\nclass Bn {\n  /**\n   * Creates a new immutable `GeoPoint` object with the provided latitude and\n   * longitude values.\n   * @param latitude - The latitude as number between -90 and 90.\n   * @param longitude - The longitude as number between -180 and 180.\n   */\n  constructor(t, e) {\n    if (!isFinite(t) || t < -90 || t > 90) throw new U(P, \"Latitude must be a number between -90 and 90, but was: \" + t);\n    if (!isFinite(e) || e < -180 || e > 180) throw new U(P, \"Longitude must be a number between -180 and 180, but was: \" + e);\n    this._lat = t, this._long = e;\n  }\n  /**\n   * The latitude of this `GeoPoint` instance.\n   */\n  get latitude() {\n    return this._lat;\n  }\n  /**\n   * The longitude of this `GeoPoint` instance.\n   */\n  get longitude() {\n    return this._long;\n  }\n  /**\n   * Returns true if this `GeoPoint` is equal to the provided one.\n   *\n   * @param other - The `GeoPoint` to compare against.\n   * @returns true if this `GeoPoint` is equal to the provided one.\n   */\n  isEqual(t) {\n    return this._lat === t._lat && this._long === t._long;\n  }\n  /** Returns a JSON-serializable representation of this GeoPoint. */\n  toJSON() {\n    return {\n      latitude: this._lat,\n      longitude: this._long\n    };\n  }\n  /**\n   * Actually private to JS consumers of our API, so this function is prefixed\n   * with an underscore.\n   */\n  _compareTo(t) {\n    return It(this._lat, t._lat) || It(this._long, t._long);\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst Qn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */\nclass zn {\n  constructor(t, e, n) {\n    this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n  }\n  toMutation(t, e) {\n    return null !== this.fieldMask ? new Le(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Me(t, this.data, e, this.fieldTransforms);\n  }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */\nclass Wn {\n  constructor(t,\n  // The fieldMask does not include document transforms.\n  e, n) {\n    this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n  }\n  toMutation(t, e) {\n    return new Le(t, this.data, this.fieldMask, e, this.fieldTransforms);\n  }\n}\nfunction Gn(t) {\n  switch (t) {\n    case 0 /* UserDataSource.Set */:\n    // fall through\n    case 2 /* UserDataSource.MergeSet */:\n    // fall through\n    case 1 /* UserDataSource.Update */:\n      return !0;\n    case 3 /* UserDataSource.Argument */:\n    case 4 /* UserDataSource.ArrayArgument */:\n      return !1;\n    default:\n      throw b();\n  }\n}\n\n/** A \"context\" object passed around while parsing user data. */\nclass Kn {\n  /**\n   * Initializes a ParseContext with the given source and path.\n   *\n   * @param settings - The settings for the parser.\n   * @param databaseId - The database ID of the Firestore instance.\n   * @param serializer - The serializer to use to generate the Value proto.\n   * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n   * rather than throw.\n   * @param fieldTransforms - A mutable list of field transforms encountered\n   * while parsing the data.\n   * @param fieldMask - A mutable list of field paths encountered while parsing\n   * the data.\n   *\n   * TODO(b/34871131): We don't support array paths right now, so path can be\n   * null to indicate the context represents any location within an array (in\n   * which case certain features will not work and errors will be somewhat\n   * compromised).\n   */\n  constructor(t, e, n, r, s, i) {\n    this.settings = t, this.databaseId = e, this.serializer = n, this.ignoreUndefinedProperties = r,\n    // Minor hack: If fieldTransforms is undefined, we assume this is an\n    // external call and we need to validate the entire path.\n    void 0 === s && this.tt(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n  }\n  get path() {\n    return this.settings.path;\n  }\n  get et() {\n    return this.settings.et;\n  }\n  /** Returns a new context with the specified settings overwritten. */\n  nt(t) {\n    return new Kn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.serializer, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n  }\n  rt(t) {\n    var e;\n    const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),\n      r = this.nt({\n        path: n,\n        st: !1\n      });\n    return r.it(t), r;\n  }\n  ot(t) {\n    var e;\n    const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),\n      r = this.nt({\n        path: n,\n        st: !1\n      });\n    return r.tt(), r;\n  }\n  ut(t) {\n    // TODO(b/34871131): We don't support array paths right now; so make path\n    // undefined.\n    return this.nt({\n      path: void 0,\n      st: !0\n    });\n  }\n  ct(t) {\n    return wr(t, this.settings.methodName, this.settings.ht || !1, this.path, this.settings.lt);\n  }\n  /** Returns 'true' if 'fieldPath' was traversed when creating this context. */\n  contains(t) {\n    return void 0 !== this.fieldMask.find(e => t.isPrefixOf(e)) || void 0 !== this.fieldTransforms.find(e => t.isPrefixOf(e.field));\n  }\n  tt() {\n    // TODO(b/34871131): Remove null check once we have proper paths for fields\n    // within arrays.\n    if (this.path) for (let t = 0; t < this.path.length; t++) this.it(this.path.get(t));\n  }\n  it(t) {\n    if (0 === t.length) throw this.ct(\"Document fields must not be empty\");\n    if (Gn(this.et) && Qn.test(t)) throw this.ct('Document fields cannot begin and end with \"__\"');\n  }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */\nclass Yn {\n  constructor(t, e, n) {\n    this.databaseId = t, this.ignoreUndefinedProperties = e, this.serializer = n || wn(t);\n  }\n  /** Creates a new top-level parse context. */\n  ft(t, e, n) {\n    let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n    return new Kn({\n      et: t,\n      methodName: e,\n      lt: n,\n      path: nt.emptyPath(),\n      st: !1,\n      ht: r\n    }, this.databaseId, this.serializer, this.ignoreUndefinedProperties);\n  }\n}\nfunction Hn(t) {\n  const e = t._freezeSettings(),\n    n = wn(t._databaseId);\n  return new Yn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */\nfunction Jn(t, e, n, r, s) {\n  let i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  const o = t.ft(i.merge || i.mergeFields ? 2 /* UserDataSource.MergeSet */ : 0 /* UserDataSource.Set */, e, n, s);\n  hr(\"Data must be an object, but it was:\", o, r);\n  const u = cr(r, o);\n  let c, a;\n  if (i.merge) c = new ye(o.fieldMask), a = o.fieldTransforms;else if (i.mergeFields) {\n    const t = [];\n    for (const r of i.mergeFields) {\n      const s = lr(e, r, n);\n      if (!o.contains(s)) throw new U(P, `Field '${s}' is specified in your field mask but missing from your input data.`);\n      mr(t, s) || t.push(s);\n    }\n    c = new ye(t), a = o.fieldTransforms.filter(t => c.covers(t.field));\n  } else c = null, a = o.fieldTransforms;\n  return new zn(new ge(u), c, a);\n}\nclass Xn extends jn {\n  _toFieldTransform(t) {\n    if (2 /* UserDataSource.MergeSet */ !== t.et) throw 1 /* UserDataSource.Update */ === t.et ? t.ct(`${this._methodName}() can only appear at the top level of your update data`) : t.ct(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n    // No transform to add for a delete, but we need to add it to our\n    // fieldMask so it gets deleted.\n    return t.fieldMask.push(t.path), null;\n  }\n  isEqual(t) {\n    return t instanceof Xn;\n  }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */\nfunction Zn(t, e, n) {\n  return new Kn({\n    et: 3 /* UserDataSource.Argument */,\n    lt: e.settings.lt,\n    methodName: t._methodName,\n    st: n\n  }, e.databaseId, e.serializer, e.ignoreUndefinedProperties);\n}\nclass tr extends jn {\n  _toFieldTransform(t) {\n    return new Oe(t.path, new Fe());\n  }\n  isEqual(t) {\n    return t instanceof tr;\n  }\n}\nclass er extends jn {\n  constructor(t, e) {\n    super(t), this.dt = e;\n  }\n  _toFieldTransform(t) {\n    const e = Zn(this, t, /*array=*/!0),\n      n = this.dt.map(t => ur(t, e)),\n      r = new xe(n);\n    return new Oe(t.path, r);\n  }\n  isEqual(t) {\n    // TODO(mrschmidt): Implement isEquals\n    return this === t;\n  }\n}\nclass nr extends jn {\n  constructor(t, e) {\n    super(t), this.dt = e;\n  }\n  _toFieldTransform(t) {\n    const e = Zn(this, t, /*array=*/!0),\n      n = this.dt.map(t => ur(t, e)),\n      r = new Se(n);\n    return new Oe(t.path, r);\n  }\n  isEqual(t) {\n    // TODO(mrschmidt): Implement isEquals\n    return this === t;\n  }\n}\nclass rr extends jn {\n  constructor(t, e) {\n    super(t), this.wt = e;\n  }\n  _toFieldTransform(t) {\n    const e = new qe(t.serializer, Ne(t.serializer, this.wt));\n    return new Oe(t.path, e);\n  }\n  isEqual(t) {\n    // TODO(mrschmidt): Implement isEquals\n    return this === t;\n  }\n}\n\n/** Parse update data from an update() call. */\nfunction sr(t, e, n, r) {\n  const s = t.ft(1 /* UserDataSource.Update */, e, n);\n  hr(\"Data must be an object, but it was:\", s, r);\n  const i = [],\n    o = ge.empty();\n  Rt(r, (t, r) => {\n    const u = dr(e, t, n);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n    r = getModularInstance(r);\n    const c = s.ot(u);\n    if (r instanceof Xn)\n      // Add it to the field mask, but don't add anything to updateData.\n      i.push(u);else {\n      const t = ur(r, c);\n      null != t && (i.push(u), o.set(u, t));\n    }\n  });\n  const u = new ye(i);\n  return new Wn(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */\nfunction ir(t, e, n, r, s, i) {\n  const o = t.ft(1 /* UserDataSource.Update */, e, n),\n    u = [lr(e, r, n)],\n    c = [s];\n  if (i.length % 2 != 0) throw new U(P, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n  for (let t = 0; t < i.length; t += 2) u.push(lr(e, i[t])), c.push(i[t + 1]);\n  const a = [],\n    h = ge.empty();\n  // We iterate in reverse order to pick the last value for a field if the\n  // user specified the field multiple times.\n  for (let t = u.length - 1; t >= 0; --t) if (!mr(a, u[t])) {\n    const e = u[t];\n    let n = c[t];\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n    n = getModularInstance(n);\n    const r = o.ot(e);\n    if (n instanceof Xn)\n      // Add it to the field mask, but don't add anything to updateData.\n      a.push(e);else {\n      const t = ur(n, r);\n      null != t && (a.push(e), h.set(e, t));\n    }\n  }\n  const f = new ye(a);\n  return new Wn(h, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */\nfunction or(t, e, n) {\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n  return ur(n, t.ft(r ? 4 /* UserDataSource.ArrayArgument */ : 3 /* UserDataSource.Argument */, e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */\nfunction ur(t, e) {\n  if (ar(\n  // Unwrap the API type from the Compat SDK. This will return the API type\n  // from firestore-exp.\n  t = getModularInstance(t))) return hr(\"Unsupported field value:\", e, t), cr(t, e);\n  if (t instanceof jn)\n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n    * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n    * context.fieldTransforms.\n    */\n    return function (t, e) {\n      // Sentinels are only supported with writes, and not within arrays.\n      if (!Gn(e.et)) throw e.ct(`${t._methodName}() can only be used with update() and set()`);\n      if (!e.path) throw e.ct(`${t._methodName}() is not currently supported inside arrays`);\n      const n = t._toFieldTransform(e);\n      n && e.fieldTransforms.push(n);\n    }\n    /**\n    * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n    *\n    * @returns The parsed value\n    */(t, e), null;\n  if (void 0 === t && e.ignoreUndefinedProperties)\n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n  if (\n  // If context.path is null we are inside an array and we don't support\n  // field mask paths more granular than the top-level array.\n  e.path && e.fieldMask.push(e.path), t instanceof Array) {\n    // TODO(b/34871131): Include the path containing the array in the error\n    // message.\n    // In the case of IN queries, the parsed data is an array (representing\n    // the set of values to be included for the IN query) that may directly\n    // contain additional arrays (each representing an individual field\n    // value), so we disable this validation.\n    if (e.settings.st && 4 /* UserDataSource.ArrayArgument */ !== e.et) throw e.ct(\"Nested arrays are not supported\");\n    return function (t, e) {\n      const n = [];\n      let r = 0;\n      for (const s of t) {\n        let t = ur(s, e.ut(r));\n        null == t && (\n        // Just include nulls in the array for fields being replaced with a\n        // sentinel.\n        t = {\n          nullValue: \"NULL_VALUE\"\n        }), n.push(t), r++;\n      }\n      return {\n        arrayValue: {\n          values: n\n        }\n      };\n    }(t, e);\n  }\n  return function (t, e) {\n    if (null === (t = getModularInstance(t))) return {\n      nullValue: \"NULL_VALUE\"\n    };\n    if (\"number\" == typeof t) return Ne(e.serializer, t);\n    if (\"boolean\" == typeof t) return {\n      booleanValue: t\n    };\n    if (\"string\" == typeof t) return {\n      stringValue: t\n    };\n    if (t instanceof Date) {\n      const n = xt.fromDate(t);\n      return {\n        timestampValue: Ge(e.serializer, n)\n      };\n    }\n    if (t instanceof xt) {\n      // Firestore backend truncates precision down to microseconds. To ensure\n      // offline mode works the same with regards to truncation, perform the\n      // truncation immediately without waiting for the backend to do that.\n      const n = new xt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n      return {\n        timestampValue: Ge(e.serializer, n)\n      };\n    }\n    if (t instanceof Bn) return {\n      geoPointValue: {\n        latitude: t.latitude,\n        longitude: t.longitude\n      }\n    };\n    if (t instanceof Mn) return {\n      bytesValue: Ke(e.serializer, t._byteString)\n    };\n    if (t instanceof Dn) {\n      const n = e.databaseId,\n        r = t.firestore._databaseId;\n      if (!r.isEqual(n)) throw e.ct(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n      return {\n        referenceValue: Je(t.firestore._databaseId || e.databaseId, t._key.path)\n      };\n    }\n    throw e.ct(`Unsupported field value: ${ut(t)}`);\n  }\n  /**\n  * Checks whether an object looks like a JSON object that should be converted\n  * into a struct. Normal class/prototype instances are considered to look like\n  * JSON objects since they should be converted to a struct value. Arrays, Dates,\n  * GeoPoints, etc. are not considered to look like JSON objects since they map\n  * to specific FieldValue types other than ObjectValue.\n  */(t, e);\n}\nfunction cr(t, e) {\n  const n = {};\n  return !function (t) {\n    for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n    return !0;\n  }(t) ? Rt(t, (t, r) => {\n    const s = ur(r, e.rt(t));\n    null != s && (n[t] = s);\n  }) :\n  // If we encounter an empty object, we explicitly add it to the update\n  // mask to ensure that the server creates a map entry.\n  e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n    mapValue: {\n      fields: n\n    }\n  };\n}\nfunction ar(t) {\n  return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof xt || t instanceof Bn || t instanceof Mn || t instanceof Dn || t instanceof jn);\n}\nfunction hr(t, e, n) {\n  if (!ar(n) || !function (t) {\n    return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n  }(n)) {\n    const r = ut(n);\n    throw \"an object\" === r ? e.ct(t + \" a custom object\") : e.ct(t + \" \" + r);\n  }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */\nfunction lr(t, e, n) {\n  if ((\n  // If required, replace the FieldPath Compat class with with the firestore-exp\n  // FieldPath.\n  e = getModularInstance(e)) instanceof Ln) return e._internalPath;\n  if (\"string\" == typeof e) return dr(t, e);\n  throw wr(\"Field path arguments must be of type string or \", t, /* hasConverter= */!1, /* path= */void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */\nconst fr = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */\nfunction dr(t, e, n) {\n  if (e.search(fr) >= 0) throw wr(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, /* hasConverter= */!1, /* path= */void 0, n);\n  try {\n    return new Ln(...e.split(\".\"))._internalPath;\n  } catch (r) {\n    throw wr(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, /* hasConverter= */!1, /* path= */void 0, n);\n  }\n}\nfunction wr(t, e, n, r, s) {\n  const i = r && !r.isEmpty(),\n    o = void 0 !== s;\n  let u = `Function ${e}() called with invalid data`;\n  n && (u += \" (via `toFirestore()`)\"), u += \". \";\n  let c = \"\";\n  return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), c += \")\"), new U(P, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */\nfunction mr(t, e) {\n  return t.some(t => t.isEqual(e));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */\nclass pr {\n  // Note: This class is stripped down version of the DocumentSnapshot in\n  // the legacy SDK. The changes are:\n  // - No support for SnapshotMetadata.\n  // - No support for SnapshotOptions.\n  /** @hideconstructor protected */\n  constructor(t, e, n, r, s) {\n    this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, this._converter = s;\n  }\n  /** Property of the `DocumentSnapshot` that provides the document's ID. */\n  get id() {\n    return this._key.path.lastSegment();\n  }\n  /**\n   * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n   */\n  get ref() {\n    return new Dn(this._firestore, this._converter, this._key);\n  }\n  /**\n   * Signals whether or not the document at the snapshot's location exists.\n   *\n   * @returns true if the document exists.\n   */\n  exists() {\n    return null !== this._document;\n  }\n  /**\n   * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n   * the document doesn't exist.\n   *\n   * @returns An `Object` containing all fields in the document or `undefined`\n   * if the document doesn't exist.\n   */\n  data() {\n    if (this._document) {\n      if (this._converter) {\n        // We only want to use the converter and create a new DocumentSnapshot\n        // if a converter has been provided.\n        const t = new yr(this._firestore, this._userDataWriter, this._key, this._document, /* converter= */null);\n        return this._converter.fromFirestore(t);\n      }\n      return this._userDataWriter.convertValue(this._document.data.value);\n    }\n  }\n  /**\n   * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n   * document or field doesn't exist.\n   *\n   * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n   * field.\n   * @returns The data at the specified field location or undefined if no such\n   * field exists in the document.\n   */\n  // We are using `any` here to avoid an explicit cast by our users.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get(t) {\n    if (this._document) {\n      const e = this._document.data.field(vr(\"DocumentSnapshot.get\", t));\n      if (null !== e) return this._userDataWriter.convertValue(e);\n    }\n  }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */\nclass yr extends pr {\n  /**\n   * Retrieves all fields in the document as an `Object`.\n   *\n   * @override\n   * @returns An `Object` containing all fields in the document.\n   */\n  data() {\n    return super.data();\n  }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */\nclass gr {\n  /** @hideconstructor */\n  constructor(t, e) {\n    this._docs = e, this.query = t;\n  }\n  /** An array of all the documents in the `QuerySnapshot`. */\n  get docs() {\n    return [...this._docs];\n  }\n  /** The number of documents in the `QuerySnapshot`. */\n  get size() {\n    return this.docs.length;\n  }\n  /** True if there are no documents in the `QuerySnapshot`. */\n  get empty() {\n    return 0 === this.docs.length;\n  }\n  /**\n   * Enumerates all of the documents in the `QuerySnapshot`.\n   *\n   * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n   * each document in the snapshot.\n   * @param thisArg - The `this` binding for the callback.\n   */\n  forEach(t, e) {\n    this._docs.forEach(t, e);\n  }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */\nfunction _r(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), t instanceof pr && e instanceof pr ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof gr && e instanceof gr && Cn(t.query, e.query) && Tt(t.docs, e.docs, _r);\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */\nfunction vr(t, e) {\n  return \"string\" == typeof e ? dr(t, e) : e instanceof Ln ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An `AppliableConstraint` is an abstraction of a constraint that can be applied\n * to a Firestore query.\n */\nclass br {}\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * (endBefore:1)}, {@link (endAt:1)}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link (query:1)} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nclass Er extends br {}\nfunction Ir(t, e) {\n  let r = [];\n  for (var _len8 = arguments.length, n = new Array(_len8 > 2 ? _len8 - 2 : 0), _key8 = 2; _key8 < _len8; _key8++) {\n    n[_key8 - 2] = arguments[_key8];\n  }\n  e instanceof br && r.push(e), r = r.concat(n), function (t) {\n    const e = t.filter(t => t instanceof Rr).length,\n      n = t.filter(t => t instanceof Tr).length;\n    if (e > 1 || e > 0 && n > 0) throw new U(P, \"InvalidQuery. When using composite filters, you cannot use more than one filter at the top level. Consider nesting the multiple filters within an `and(...)` statement. For example: change `query(query, where(...), or(...))` to `query(query, and(where(...), or(...)))`.\");\n  }\n  /**\n  * @license\n  * Copyright 2020 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n  /**\n  * Converts Firestore's internal types to the JavaScript types that we expose\n  * to the user.\n  *\n  * @internal\n  */(r);\n  for (const e of r) t = e._apply(t);\n  return t;\n}\n\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link (query:1)} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */\nclass Tr extends Er {\n  /**\n   * @internal\n   */\n  constructor(t, e, n) {\n    super(), this._field = t, this._op = e, this._value = n, /** The type of this query constraint */\n    this.type = \"where\";\n  }\n  static _create(t, e, n) {\n    return new Tr(t, e, n);\n  }\n  _apply(t) {\n    const e = this._parse(t);\n    return Br(t._query, e), new Fn(t.firestore, t.converter, Ve(t._query, e));\n  }\n  _parse(t) {\n    const e = Hn(t.firestore),\n      n = function (t, e, n, r, s, i, o) {\n        let u;\n        if (s.isKeyField()) {\n          if (\"array-contains\" /* Operator.ARRAY_CONTAINS */ === i || \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === i) throw new U(P, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n          if (\"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i) {\n            jr(o, i);\n            const e = [];\n            for (const n of o) e.push(Ur(r, t, n));\n            u = {\n              arrayValue: {\n                values: e\n              }\n            };\n          } else u = Ur(r, t, o);\n        } else \"in\" /* Operator.IN */ !== i && \"not-in\" /* Operator.NOT_IN */ !== i && \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ !== i || jr(o, i), u = or(n, e, o, /* allowArrays= */\"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i);\n        return Xt.create(s, i, u);\n      }(t._query, \"where\", e, t.firestore._databaseId, this._field, this._op, this._value);\n    return n;\n  }\n}\n\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */\nfunction Ar(t, e, n) {\n  const r = e,\n    s = vr(\"where\", t);\n  return Tr._create(s, r, n);\n}\n\n/**\n * A `QueryCompositeFilterConstraint` is used to narrow the set of documents\n * returned by a Firestore query by performing the logical OR or AND of multiple\n * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.\n * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or\n * {@link and} and can then be passed to {@link (query:1)} to create a new query\n * instance that also contains the `QueryCompositeFilterConstraint`.\n */\nclass Rr extends br {\n  /**\n   * @internal\n   */\n  constructor( /** The type of this query constraint */\n  t, e) {\n    super(), this.type = t, this._queryConstraints = e;\n  }\n  static _create(t, e) {\n    return new Rr(t, e);\n  }\n  _parse(t) {\n    const e = this._queryConstraints.map(e => e._parse(t)).filter(t => t.getFilters().length > 0);\n    return 1 === e.length ? e[0] : Zt.create(e, this._getOperator());\n  }\n  _apply(t) {\n    const e = this._parse(t);\n    return 0 === e.getFilters().length ? t : (function (t, e) {\n      let n = t;\n      const r = e.getFlattenedFilters();\n      for (const t of r) Br(n, t), n = Ve(n, t);\n    }\n    // Checks if any of the provided filter operators are included in the given list of filters and\n    // returns the first one that is, or null if none are.\n    (t._query, e), new Fn(t.firestore, t.converter, Ve(t._query, e)));\n  }\n  _getQueryConstraints() {\n    return this._queryConstraints;\n  }\n  _getOperator() {\n    return \"and\" === this.type ? \"and\" /* CompositeOperator.AND */ : \"or\" /* CompositeOperator.OR */;\n  }\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a disjunction of\n * the given filter constraints. A disjunction filter includes a document if it\n * satisfies any of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a disjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n */\nfunction Pr() {\n  for (var _len9 = arguments.length, t = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n    t[_key9] = arguments[_key9];\n  }\n  // Only support QueryFilterConstraints\n  return t.forEach(t => zr(\"or\", t)), Rr._create(\"or\" /* CompositeOperator.OR */, t);\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a conjunction of\n * the given filter constraints. A conjunction filter includes a document if it\n * satisfies all of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a conjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n */\nfunction Vr() {\n  for (var _len10 = arguments.length, t = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n    t[_key10] = arguments[_key10];\n  }\n  // Only support QueryFilterConstraints\n  return t.forEach(t => zr(\"and\", t)), Rr._create(\"and\" /* CompositeOperator.AND */, t);\n}\n\n/**\n * A `QueryOrderByConstraint` is used to sort the set of documents returned by a\n * Firestore query. `QueryOrderByConstraint`s are created by invoking\n * {@link orderBy} and can then be passed to {@link (query:1)} to create a new query\n * instance that also contains this `QueryOrderByConstraint`.\n *\n * Note: Documents that do not contain the orderBy field will not be present in\n * the query result.\n */\nclass $r extends Er {\n  /**\n   * @internal\n   */\n  constructor(t, e) {\n    super(), this._field = t, this._direction = e, /** The type of this query constraint */\n    this.type = \"orderBy\";\n  }\n  static _create(t, e) {\n    return new $r(t, e);\n  }\n  _apply(t) {\n    const e = function (t, e, n) {\n      if (null !== t.startAt) throw new U(P, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n      if (null !== t.endAt) throw new U(P, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n      const r = new ae(e, n);\n      return function (t, e) {\n        if (null === Ie(t)) {\n          // This is the first order by. It must match any inequality.\n          const n = Te(t);\n          null !== n && Qr(t, n, e.field);\n        }\n      }(t, r), r;\n    }\n    /**\n    * Create a `Bound` from a query and a document.\n    *\n    * Note that the `Bound` will always include the key of the document\n    * and so only the provided document will compare equal to the returned\n    * position.\n    *\n    * Will throw if the document does not contain all fields of the order by\n    * of the query or if any of the fields in the order by are an uncommitted\n    * server timestamp.\n    */(t._query, this._field, this._direction);\n    return new Fn(t.firestore, t.converter, function (t, e) {\n      // TODO(dimond): validate that orderBy does not list the same key twice.\n      const n = t.explicitOrderBy.concat([e]);\n      return new Ee(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n    }(t._query, e));\n  }\n}\n\n/**\n * Creates a {@link QueryOrderByConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * Note: Documents that do not contain the specified field will not be present\n * in the query result.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link QueryOrderByConstraint}.\n */\nfunction Nr(t) {\n  let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"asc\";\n  const n = e,\n    r = vr(\"orderBy\", t);\n  return $r._create(r, n);\n}\n\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link (query:1)} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */\nclass Dr extends Er {\n  /**\n   * @internal\n   */\n  constructor( /** The type of this query constraint */\n  t, e, n) {\n    super(), this.type = t, this._limit = e, this._limitType = n;\n  }\n  static _create(t, e, n) {\n    return new Dr(t, e, n);\n  }\n  _apply(t) {\n    return new Fn(t.firestore, t.converter, function (t, e, n) {\n      return new Ee(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n    }(t._query, this._limit, this._limitType));\n  }\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */\nfunction Fr(t) {\n  return at(\"limit\", t), Dr._create(\"limit\", t, \"F\" /* LimitType.First */);\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the last matching\n * documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */\nfunction xr(t) {\n  return at(\"limitToLast\", t), Dr._create(\"limitToLast\", t, \"L\" /* LimitType.Last */);\n}\n\n/**\n * A `QueryStartAtConstraint` is used to exclude documents from the start of a\n * result set returned by a Firestore query.\n * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or\n * {@link (startAfter:1)} and can then be passed to {@link (query:1)} to create a\n * new query instance that also contains this `QueryStartAtConstraint`.\n */\nclass Sr extends Er {\n  /**\n   * @internal\n   */\n  constructor( /** The type of this query constraint */\n  t, e, n) {\n    super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n  }\n  static _create(t, e, n) {\n    return new Sr(t, e, n);\n  }\n  _apply(t) {\n    const e = Lr(t, this.type, this._docOrFields, this._inclusive);\n    return new Fn(t.firestore, t.converter, function (t, e) {\n      return new Ee(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n    }(t._query, e));\n  }\n}\nfunction qr() {\n  for (var _len11 = arguments.length, t = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n    t[_key11] = arguments[_key11];\n  }\n  return Sr._create(\"startAt\", t, /*inclusive=*/!0);\n}\nfunction Or() {\n  for (var _len12 = arguments.length, t = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n    t[_key12] = arguments[_key12];\n  }\n  return Sr._create(\"startAfter\", t, /*inclusive=*/!1);\n}\n\n/**\n * A `QueryEndAtConstraint` is used to exclude documents from the end of a\n * result set returned by a Firestore query.\n * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or\n * {@link (endBefore:1)} and can then be passed to {@link (query:1)} to create a new\n * query instance that also contains this `QueryEndAtConstraint`.\n */\nclass kr extends Er {\n  /**\n   * @internal\n   */\n  constructor( /** The type of this query constraint */\n  t, e, n) {\n    super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n  }\n  static _create(t, e, n) {\n    return new kr(t, e, n);\n  }\n  _apply(t) {\n    const e = Lr(t, this.type, this._docOrFields, this._inclusive);\n    return new Fn(t.firestore, t.converter, function (t, e) {\n      return new Ee(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n    }(t._query, e));\n  }\n}\nfunction Cr() {\n  for (var _len13 = arguments.length, t = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {\n    t[_key13] = arguments[_key13];\n  }\n  return kr._create(\"endBefore\", t, /*inclusive=*/!1);\n}\nfunction Mr() {\n  for (var _len14 = arguments.length, t = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {\n    t[_key14] = arguments[_key14];\n  }\n  return kr._create(\"endAt\", t, /*inclusive=*/!0);\n}\n\n/** Helper function to create a bound from a document or fields */\nfunction Lr(t, e, n, r) {\n  if (n[0] = getModularInstance(n[0]), n[0] instanceof pr) return function (t, e, n, r, s) {\n    if (!r) throw new U($, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n    const i = [];\n    // Because people expect to continue/end a query at the exact document\n    // provided, we need to use the implicit sort order rather than the explicit\n    // sort order, because it's guaranteed to contain the document key. That way\n    // the position becomes unambiguous and the query continues/ends exactly at\n    // the provided document. Without the key (by using the explicit sort\n    // orders), multiple documents could match the position, yielding duplicate\n    // results.\n    for (const n of Re(t)) if (n.field.isKeyField()) i.push(Bt(e, r.key));else {\n      const t = r.data.field(n.field);\n      if (St(t)) throw new U(P, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n      if (null === t) {\n        const t = n.field.canonicalString();\n        throw new U(P, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n      }\n      i.push(t);\n    }\n    return new Yt(i, s);\n  }\n  /**\n  * Converts a list of field values to a `Bound` for the given query.\n  */(t._query, t.firestore._databaseId, e, n[0]._document, r);\n  {\n    const s = Hn(t.firestore);\n    return function (t, e, n, r, s, i) {\n      // Use explicit order by's because it has to match the query the user made\n      const o = t.explicitOrderBy;\n      if (s.length > o.length) throw new U(P, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n      const u = [];\n      for (let i = 0; i < s.length; i++) {\n        const c = s[i];\n        if (o[i].field.isKeyField()) {\n          if (\"string\" != typeof c) throw new U(P, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n          if (!Ae(t) && -1 !== c.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n          const n = t.path.child(tt.fromString(c));\n          if (!rt.isDocumentKey(n)) throw new U(P, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n          const s = new rt(n);\n          u.push(Bt(e, s));\n        } else {\n          const t = or(n, r, c);\n          u.push(t);\n        }\n      }\n      return new Yt(u, i);\n    }\n    /**\n    * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n    * appropriate errors if the value is anything other than a `DocumentReference`\n    * or `string`, or if the string is malformed.\n    */(t._query, t.firestore._databaseId, s, e, n, r);\n  }\n}\nfunction Ur(t, e, n) {\n  if (\"string\" == typeof (n = getModularInstance(n))) {\n    if (\"\" === n) throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n    if (!Ae(e) && -1 !== n.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n    const r = e.path.child(tt.fromString(n));\n    if (!rt.isDocumentKey(r)) throw new U(P, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n    return Bt(t, new rt(r));\n  }\n  if (n instanceof Dn) return Bt(t, n._key);\n  throw new U(P, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${ut(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */\nfunction jr(t, e) {\n  if (!Array.isArray(t) || 0 === t.length) throw new U(P, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n}\n\n/**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * This is not a comprehensive check, and this function should be removed in the\n * long term. Validations should occur in the Firestore backend.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one inequality per query.\n * 2. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n */\nfunction Br(t, e) {\n  if (e.isInequality()) {\n    const n = Te(t),\n      r = e.field;\n    if (null !== n && !n.isEqual(r)) throw new U(P, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${r.toString()}'`);\n    const s = Ie(t);\n    null !== s && Qr(t, r, s);\n  }\n  const n = function (t, e) {\n    for (const n of t) for (const t of n.getFlattenedFilters()) if (e.indexOf(t.op) >= 0) return t.op;\n    return null;\n  }(t.filters, function (t) {\n    switch (t) {\n      case \"!=\" /* Operator.NOT_EQUAL */:\n        return [\"!=\" /* Operator.NOT_EQUAL */, \"not-in\" /* Operator.NOT_IN */];\n\n      case \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */:\n      case \"in\" /* Operator.IN */:\n        return [\"not-in\" /* Operator.NOT_IN */];\n\n      case \"not-in\" /* Operator.NOT_IN */:\n        return [\"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */, \"in\" /* Operator.IN */, \"not-in\" /* Operator.NOT_IN */, \"!=\" /* Operator.NOT_EQUAL */];\n\n      default:\n        return [];\n    }\n  }(e.op));\n  if (null !== n)\n    // Special case when it's a duplicate op to give a slightly clearer error message.\n    throw n === e.op ? new U(P, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new U(P, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n}\nfunction Qr(t, e, n) {\n  if (!n.isEqual(e)) throw new U(P, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\nfunction zr(t, e) {\n  if (!(e instanceof Tr || e instanceof Rr)) throw new U(P, `Function ${t}() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction Wr(t, e, n) {\n  let r;\n  // Cast to `any` in order to satisfy the union type constraint on\n  // toFirestore().\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, r;\n}\nclass Gr extends class {\n  convertValue(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"none\";\n    switch (Ct(t)) {\n      case 0 /* TypeOrder.NullValue */:\n        return null;\n      case 1 /* TypeOrder.BooleanValue */:\n        return t.booleanValue;\n      case 2 /* TypeOrder.NumberValue */:\n        return Dt(t.integerValue || t.doubleValue);\n      case 3 /* TypeOrder.TimestampValue */:\n        return this.convertTimestamp(t.timestampValue);\n      case 4 /* TypeOrder.ServerTimestampValue */:\n        return this.convertServerTimestamp(t, e);\n      case 5 /* TypeOrder.StringValue */:\n        return t.stringValue;\n      case 6 /* TypeOrder.BlobValue */:\n        return this.convertBytes(Ft(t.bytesValue));\n      case 7 /* TypeOrder.RefValue */:\n        return this.convertReference(t.referenceValue);\n      case 8 /* TypeOrder.GeoPointValue */:\n        return this.convertGeoPoint(t.geoPointValue);\n      case 9 /* TypeOrder.ArrayValue */:\n        return this.convertArray(t.arrayValue, e);\n      case 10 /* TypeOrder.ObjectValue */:\n        return this.convertObject(t.mapValue, e);\n      default:\n        throw b();\n    }\n  }\n  convertObject(t, e) {\n    return this.convertObjectMap(t.fields, e);\n  }\n  /**\n   * @internal\n   */\n  convertObjectMap(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"none\";\n    const n = {};\n    return Rt(t, (t, r) => {\n      n[t] = this.convertValue(r, e);\n    }), n;\n  }\n  convertGeoPoint(t) {\n    return new Bn(Dt(t.latitude), Dt(t.longitude));\n  }\n  convertArray(t, e) {\n    return (t.values || []).map(t => this.convertValue(t, e));\n  }\n  convertServerTimestamp(t, e) {\n    switch (e) {\n      case \"previous\":\n        const n = qt(t);\n        return null == n ? null : this.convertValue(n, e);\n      case \"estimate\":\n        return this.convertTimestamp(Ot(t));\n      default:\n        return null;\n    }\n  }\n  convertTimestamp(t) {\n    const e = Nt(t);\n    return new xt(e.seconds, e.nanos);\n  }\n  convertDocumentKey(t, e) {\n    const n = tt.fromString(t);\n    E(dn(n));\n    const r = new X(n.get(1), n.get(3)),\n      s = new rt(n.popFirst(5));\n    return r.isEqual(e) ||\n    // TODO(b/64130202): Somehow support foreign references.\n    g(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), s;\n  }\n} {\n  constructor(t) {\n    super(), this.firestore = t;\n  }\n  convertBytes(t) {\n    return new Mn(t);\n  }\n  convertReference(t) {\n    const e = this.convertDocumentKey(t, this.firestore._databaseId);\n    return new Dn(this.firestore, /* converter= */null, e);\n  }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */\nfunction Kr(t) {\n  const e = En((t = ct(t, Dn)).firestore),\n    n = new Gr(t.firestore);\n  return gn(e, [t._key]).then(e => {\n    E(1 === e.length);\n    const r = e[0];\n    return new pr(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n  });\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */\nfunction Yr(t) {\n  !function (t) {\n    if (\"L\" /* LimitType.Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new U(k, \"limitToLast() queries require specifying at least one orderBy() clause\");\n  }((t = ct(t, Fn))._query);\n  const e = En(t.firestore),\n    n = new Gr(t.firestore);\n  return _n(e, t._query).then(e => {\n    const r = e.map(e => new yr(t.firestore, n, e.key, e, t.converter));\n    return \"L\" /* LimitType.Last */ === t._query.limitType &&\n    // Limit to last queries reverse the orderBy constraint that was\n    // specified by the user. As such, we need to reverse the order of the\n    // results to return the documents in the expected order.\n    r.reverse(), new gr(t, r);\n  });\n}\nfunction Hr(t, e, n) {\n  const r = Wr((t = ct(t, Dn)).converter, e, n),\n    s = Jn(Hn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n  return yn(En(t.firestore), [s.toMutation(t._key, ke.none())]);\n}\nfunction Jr(t, e, n) {\n  const s = Hn((t = ct(t, Dn)).firestore);\n  // For Compat types, we have to \"extract\" the underlying types before\n  // performing validation.\n  let i;\n  for (var _len15 = arguments.length, r = new Array(_len15 > 3 ? _len15 - 3 : 0), _key15 = 3; _key15 < _len15; _key15++) {\n    r[_key15 - 3] = arguments[_key15];\n  }\n  i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof Ln ? ir(s, \"updateDoc\", t._key, e, n, r) : sr(s, \"updateDoc\", t._key, e);\n  return yn(En(t.firestore), [i.toMutation(t._key, ke.exists(!0))]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */\nfunction Xr(t) {\n  return yn(En((t = ct(t, Dn)).firestore), [new Ue(t._key, ke.none())]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */\nfunction Zr(t, e) {\n  const n = On(t = ct(t, xn)),\n    r = Wr(t.converter, e),\n    s = Jn(Hn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n  return yn(En(t.firestore), [s.toMutation(n._key, ke.exists(!1))]).then(() => n);\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */\nfunction ts(t) {\n  return es(t, {\n    count: ss()\n  });\n}\n\n/**\n * Calculates the specified aggregations over the documents in the result\n * set of the given query, without actually downloading the documents.\n *\n * Using this function to perform aggregations is efficient because only the\n * final aggregation values, not the documents' data, is downloaded. This\n * function can even perform aggregations of the documents if the result set\n * would be prohibitively large to download entirely (e.g. thousands of documents).\n *\n * @param query The query whose result set to aggregate over.\n * @param aggregateSpec An `AggregateSpec` object that specifies the aggregates\n * to perform over the result set. The AggregateSpec specifies aliases for each\n * aggregate, which can be used to retrieve the aggregate result.\n * @example\n * ```typescript\n * const aggregateSnapshot = await getAggregate(query, {\n *   countOfDocs: count(),\n *   totalHours: sum('hours'),\n *   averageScore: average('score')\n * });\n *\n * const countOfDocs: number = aggregateSnapshot.data().countOfDocs;\n * const totalHours: number = aggregateSnapshot.data().totalHours;\n * const averageScore: number | null = aggregateSnapshot.data().averageScore;\n * ```\n * @internal TODO (sum/avg) remove when public\n */\nfunction es(t, e) {\n  const n = ct(t.firestore, Tn),\n    r = En(n),\n    s = function (t, e) {\n      const n = [];\n      for (const r in t) Object.prototype.hasOwnProperty.call(t, r) && n.push(e(t[r], r, t));\n      return n;\n    }(e, (t, e) => new vt(e, t._aggregateType, t._internalFieldPath));\n  // Run the aggregation and convert the results\n  return vn(r, t._query, s).then(e => function (t, e, n) {\n    const r = new Gr(t);\n    return new Nn(e, r, n);\n  }\n  /**\n  * Create an AggregateField object that can be used to compute the sum of\n  * a specified field over a range of documents in the result set of a query.\n  * @param field Specifies the field to sum across the result set.\n  * @internal TODO (sum/avg) remove when public\n  */(n, t, e));\n}\nfunction ns(t) {\n  return new $n(\"sum\", lr(\"sum\", t));\n}\n\n/**\n * Create an AggregateField object that can be used to compute the average of\n * a specified field over a range of documents in the result set of a query.\n * @param field Specifies the field to average across the result set.\n * @internal TODO (sum/avg) remove when public\n */\nfunction rs(t) {\n  return new $n(\"avg\", lr(\"average\", t));\n}\n\n/**\n * Create an AggregateField object that can be used to compute the count of\n * documents in the result set of a query.\n * @internal TODO (sum/avg) remove when public\n */\nfunction ss() {\n  return new $n(\"count\");\n}\n\n/**\n * Compares two 'AggregateField` instances for equality.\n *\n * @param left Compare this AggregateField to the `right`.\n * @param right Compare this AggregateField to the `left`.\n * @internal TODO (sum/avg) remove when public\n */\nfunction is(t, e) {\n  var n, r;\n  return t instanceof $n && e instanceof $n && t._aggregateType === e._aggregateType && (null === (n = t._internalFieldPath) || void 0 === n ? void 0 : n.canonicalString()) === (null === (r = e._internalFieldPath) || void 0 === r ? void 0 : r.canonicalString());\n}\n\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */\nfunction os(t, e) {\n  return Cn(t.query, e.query) && deepEqual(t.data(), e.data());\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */\nfunction us() {\n  return new Xn(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */\nfunction cs() {\n  return new tr(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */\nfunction as() {\n  for (var _len16 = arguments.length, t = new Array(_len16), _key16 = 0; _key16 < _len16; _key16++) {\n    t[_key16] = arguments[_key16];\n  }\n  // NOTE: We don't actually parse the data until it's used in set() or\n  // update() since we'd need the Firestore instance to do this.\n  return new er(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\nfunction hs() {\n  for (var _len17 = arguments.length, t = new Array(_len17), _key17 = 0; _key17 < _len17; _key17++) {\n    t[_key17] = arguments[_key17];\n  }\n  // NOTE: We don't actually parse the data until it's used in set() or\n  // update() since we'd need the Firestore instance to do this.\n  return new nr(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\nfunction ls(t) {\n  return new rr(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */\nclass fs {\n  /** @hideconstructor */\n  constructor(t, e) {\n    this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, this._dataReader = Hn(t);\n  }\n  set(t, e, n) {\n    this._verifyNotCommitted();\n    const r = ds(t, this._firestore),\n      s = Wr(r.converter, e, n),\n      i = Jn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n    return this._mutations.push(i.toMutation(r._key, ke.none())), this;\n  }\n  update(t, e, n) {\n    this._verifyNotCommitted();\n    const s = ds(t, this._firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n    let i;\n    for (var _len18 = arguments.length, r = new Array(_len18 > 3 ? _len18 - 3 : 0), _key18 = 3; _key18 < _len18; _key18++) {\n      r[_key18 - 3] = arguments[_key18];\n    }\n    return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof Ln ? ir(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : sr(this._dataReader, \"WriteBatch.update\", s._key, e), this._mutations.push(i.toMutation(s._key, ke.exists(!0))), this;\n  }\n  /**\n   * Deletes the document referred to by the provided {@link DocumentReference}.\n   *\n   * @param documentRef - A reference to the document to be deleted.\n   * @returns This `WriteBatch` instance. Used for chaining method calls.\n   */\n  delete(t) {\n    this._verifyNotCommitted();\n    const e = ds(t, this._firestore);\n    return this._mutations = this._mutations.concat(new Ue(e._key, ke.none())), this;\n  }\n  /**\n   * Commits all of the writes in this write batch as a single atomic unit.\n   *\n   * The result of these writes will only be reflected in document reads that\n   * occur after the returned promise resolves. If the client is offline, the\n   * write fails. If you would like to see local modifications or buffer writes\n   * until the client is online, use the full Firestore SDK.\n   *\n   * @returns A `Promise` resolved once all of the writes in the batch have been\n   * successfully written to the backend as an atomic unit (note that it won't\n   * resolve while you're offline).\n   */\n  commit() {\n    return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n  }\n  _verifyNotCommitted() {\n    if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n  }\n}\nfunction ds(t, e) {\n  if ((t = getModularInstance(t)).firestore !== e) throw new U(P, \"Provided document reference is from a different Firestore instance.\");\n  return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */\nfunction ws(t) {\n  const e = En(t = ct(t, Tn));\n  return new fs(t, t => yn(e, t));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */\nclass ms {\n  constructor(t) {\n    this.datastore = t,\n    // The version of each document that was read during this transaction.\n    this.readVersions = new Map(), this.mutations = [], this.committed = !1,\n    /**\n     * A deferred usage error that occurred previously in this transaction that\n     * will cause the transaction to fail once it actually commits.\n     */\n    this.lastWriteError = null,\n    /**\n     * Set of documents that have been written in the transaction.\n     *\n     * When there's more than one write to the same key in a transaction, any\n     * writes after the first are handled differently.\n     */\n    this.writtenDocs = new Set();\n  }\n  async lookup(t) {\n    if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(P, \"Firestore transactions require all reads to be executed before all writes.\");\n    const e = await gn(this.datastore, t);\n    return e.forEach(t => this.recordVersion(t)), e;\n  }\n  set(t, e) {\n    this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n  }\n  update(t, e) {\n    try {\n      this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n    } catch (t) {\n      this.lastWriteError = t;\n    }\n    this.writtenDocs.add(t.toString());\n  }\n  delete(t) {\n    this.write(new Ue(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n  }\n  async commit() {\n    if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n    const t = this.readVersions;\n    // For each mutation, note that the doc was written.\n    this.mutations.forEach(e => {\n      t.delete(e.key.toString());\n    }),\n    // For each document that was read but not written to, we want to perform\n    // a `verify` operation.\n    t.forEach((t, e) => {\n      const n = rt.fromPath(e);\n      this.mutations.push(new je(n, this.precondition(n)));\n    }), await yn(this.datastore, this.mutations), this.committed = !0;\n  }\n  recordVersion(t) {\n    let e;\n    if (t.isFoundDocument()) e = t.version;else {\n      if (!t.isNoDocument()) throw b();\n      // Represent a deleted doc using SnapshotVersion.min().\n      e = le.min();\n    }\n    const n = this.readVersions.get(t.key.toString());\n    if (n) {\n      if (!e.isEqual(n))\n        // This transaction will fail no matter what.\n        throw new U(q, \"Document version changed between two reads.\");\n    } else this.readVersions.set(t.key.toString(), e);\n  }\n  /**\n   * Returns the version of this document when it was read in this transaction,\n   * as a precondition, or no precondition if it was not read.\n   */\n  precondition(t) {\n    const e = this.readVersions.get(t.toString());\n    return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(le.min()) ? ke.exists(!1) : ke.updateTime(e) : ke.none();\n  }\n  /**\n   * Returns the precondition for a document if the operation is an update.\n   */\n  preconditionForUpdate(t) {\n    const e = this.readVersions.get(t.toString());\n    // The first time a document is written, we want to take into account the\n    // read time and existence\n    if (!this.writtenDocs.has(t.toString()) && e) {\n      if (e.isEqual(le.min()))\n        // The document doesn't exist, so fail the transaction.\n        // This has to be validated locally because you can't send a\n        // precondition that a document does not exist without changing the\n        // semantics of the backend write to be an insert. This is the reverse\n        // of what we want, since we want to assert that the document doesn't\n        // exist but then send the update and have it fail. Since we can't\n        // express that to the backend, we have to validate locally.\n        // Note: this can change once we can send separate verify writes in the\n        // transaction.\n        throw new U(P, \"Can't update a document that doesn't exist.\");\n      // Document exists, base precondition on document update time.\n      return ke.updateTime(e);\n    }\n    // Document was not read, so we just use the preconditions for a blind\n    // update.\n    return ke.exists(!0);\n  }\n  write(t) {\n    this.ensureCommitNotCalled(), this.mutations.push(t);\n  }\n  ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ps = {\n  maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass ys {\n  constructor(t, e, n, r, s) {\n    this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, this.deferred = s, this.yt = n.maxAttempts, this.gt = new mn(this.asyncQueue, \"transaction_retry\" /* TimerId.TransactionRetry */);\n  }\n  /** Runs the transaction and sets the result on deferred. */\n  run() {\n    this.yt -= 1, this._t();\n  }\n  _t() {\n    this.gt.K(async () => {\n      const t = new ms(this.datastore),\n        e = this.vt(t);\n      e && e.then(e => {\n        this.asyncQueue.enqueueAndForget(() => t.commit().then(() => {\n          this.deferred.resolve(e);\n        }).catch(t => {\n          this.bt(t);\n        }));\n      }).catch(t => {\n        this.bt(t);\n      });\n    });\n  }\n  vt(t) {\n    try {\n      const e = this.updateFunction(t);\n      return !dt(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), null);\n    } catch (t) {\n      // Do not retry errors thrown by user provided updateFunction.\n      return this.deferred.reject(t), null;\n    }\n  }\n  bt(t) {\n    this.yt > 0 && this.Et(t) ? (this.yt -= 1, this.asyncQueue.enqueueAndForget(() => (this._t(), Promise.resolve()))) : this.deferred.reject(t);\n  }\n  Et(t) {\n    if (\"FirebaseError\" === t.name) {\n      // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n      // non-matching document versions with ABORTED. These errors should be retried.\n      const e = t.code;\n      return \"aborted\" === e || \"failed-precondition\" === e || \"already-exists\" === e || !\n      /**\n      * Determines whether an error code represents a permanent error when received\n      * in response to a non-write operation.\n      *\n      * See isPermanentWriteError for classifying write errors.\n      */\n      function (t) {\n        switch (t) {\n          default:\n            return b();\n          case A:\n          case R:\n          case V:\n          case x:\n          case C:\n          case M:\n          // Unauthenticated means something went wrong with our token and we need\n          // to retry with new credentials which will happen automatically.\n          case F:\n            return !1;\n          case P:\n          case $:\n          case N:\n          case D:\n          case S:\n          // Aborted might be retried in some scenarios, but that is dependant on\n          // the context and should handled individually by the calling code.\n          // See https://cloud.google.com/apis/design/errors.\n          case q:\n          case O:\n          case k:\n          case L:\n            return !0;\n        }\n      }(e);\n    }\n    return !1;\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */\nfunction gs() {\n  // `document` is not always available, e.g. in ReactNative and WebWorkers.\n  // eslint-disable-next-line no-restricted-globals\n  return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */\nclass _s {\n  constructor(t, e, n, r, s) {\n    this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, this.deferred = new j(), this.then = this.deferred.promise.then.bind(this.deferred.promise),\n    // It's normal for the deferred promise to be canceled (due to cancellation)\n    // and so we attach a dummy catch callback to avoid\n    // 'UnhandledPromiseRejectionWarning' log spam.\n    this.deferred.promise.catch(t => {});\n  }\n  /**\n   * Creates and returns a DelayedOperation that has been scheduled to be\n   * executed on the provided asyncQueue after the provided delayMs.\n   *\n   * @param asyncQueue - The queue to schedule the operation on.\n   * @param id - A Timer ID identifying the type of operation this is.\n   * @param delayMs - The delay (ms) before the operation should be scheduled.\n   * @param op - The operation to run.\n   * @param removalCallback - A callback to be called synchronously once the\n   *   operation is executed or canceled, notifying the AsyncQueue to remove it\n   *   from its delayedOperations list.\n   *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n   *   the DelayedOperation class public.\n   */\n  static createAndSchedule(t, e, n, r, s) {\n    const i = Date.now() + n,\n      o = new _s(t, e, i, r, s);\n    return o.start(n), o;\n  }\n  /**\n   * Starts the timer. This is called immediately after construction by\n   * createAndSchedule().\n   */\n  start(t) {\n    this.timerHandle = setTimeout(() => this.handleDelayElapsed(), t);\n  }\n  /**\n   * Queues the operation to run immediately (if it hasn't already been run or\n   * canceled).\n   */\n  skipDelay() {\n    return this.handleDelayElapsed();\n  }\n  /**\n   * Cancels the operation if it hasn't already been executed or canceled. The\n   * promise will be rejected.\n   *\n   * As long as the operation has not yet been run, calling cancel() provides a\n   * guarantee that the operation will not be run.\n   */\n  cancel(t) {\n    null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(A, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n  }\n  handleDelayElapsed() {\n    this.asyncQueue.enqueueAndForget(() => null !== this.timerHandle ? (this.clearTimeout(), this.op().then(t => this.deferred.resolve(t))) : Promise.resolve());\n  }\n  clearTimeout() {\n    null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), this.timerHandle = null);\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass vs {\n  constructor() {\n    // The last promise in the queue.\n    this.It = Promise.resolve(),\n    // A list of retryable operations. Retryable operations are run in order and\n    // retried with backoff.\n    this.Tt = [],\n    // Is this AsyncQueue being shut down? Once it is set to true, it will not\n    // be changed again.\n    this.At = !1,\n    // Operations scheduled to be queued in the future. Operations are\n    // automatically removed after they are run or canceled.\n    this.Rt = [],\n    // visible for testing\n    this.Pt = null,\n    // Flag set while there's an outstanding AsyncQueue operation, used for\n    // assertion sanity-checks.\n    this.Vt = !1,\n    // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n    this.$t = !1,\n    // List of TimerIds to fast-forward delays for.\n    this.Nt = [],\n    // Backoff timer used to schedule retries for retryable operations\n    this.gt = new mn(this, \"async_queue_retry\" /* TimerId.AsyncQueueRetry */),\n    // Visibility handler that triggers an immediate retry of all retryable\n    // operations. Meant to speed up recovery when we regain file system access\n    // after page comes into foreground.\n    this.Dt = () => {\n      const t = gs();\n      t && y(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.gt.H();\n    };\n    const t = gs();\n    t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Dt);\n  }\n  get isShuttingDown() {\n    return this.At;\n  }\n  /**\n   * Adds a new operation to the queue without waiting for it to complete (i.e.\n   * we ignore the Promise result).\n   */\n  enqueueAndForget(t) {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.enqueue(t);\n  }\n  enqueueAndForgetEvenWhileRestricted(t) {\n    this.Ft(),\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.xt(t);\n  }\n  enterRestrictedMode(t) {\n    if (!this.At) {\n      this.At = !0, this.$t = t || !1;\n      const e = gs();\n      e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Dt);\n    }\n  }\n  enqueue(t) {\n    if (this.Ft(), this.At)\n      // Return a Promise which never resolves.\n      return new Promise(() => {});\n    // Create a deferred Promise that we can return to the callee. This\n    // allows us to return a \"hanging Promise\" only to the callee and still\n    // advance the queue even when the operation is not run.\n    const e = new j();\n    return this.xt(() => this.At && this.$t ? Promise.resolve() : (t().then(e.resolve, e.reject), e.promise)).then(() => e.promise);\n  }\n  enqueueRetryable(t) {\n    this.enqueueAndForget(() => (this.Tt.push(t), this.St()));\n  }\n  /**\n   * Runs the next operation from the retryable queue. If the operation fails,\n   * reschedules with backoff.\n   */\n  async St() {\n    if (0 !== this.Tt.length) {\n      try {\n        await this.Tt[0](), this.Tt.shift(), this.gt.reset();\n      } catch (t) {\n        if (!\n        /**\n        * @license\n        * Copyright 2017 Google LLC\n        *\n        * Licensed under the Apache License, Version 2.0 (the \"License\");\n        * you may not use this file except in compliance with the License.\n        * You may obtain a copy of the License at\n        *\n        *   http://www.apache.org/licenses/LICENSE-2.0\n        *\n        * Unless required by applicable law or agreed to in writing, software\n        * distributed under the License is distributed on an \"AS IS\" BASIS,\n        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n        * See the License for the specific language governing permissions and\n        * limitations under the License.\n        */\n        /** Verifies whether `e` is an IndexedDbTransactionError. */\n        function (t) {\n          // Use name equality, as instanceof checks on errors don't work with errors\n          // that wrap other errors.\n          return \"IndexedDbTransactionError\" === t.name;\n        }\n        /**\n        * @license\n        * Copyright 2020 Google LLC\n        *\n        * Licensed under the Apache License, Version 2.0 (the \"License\");\n        * you may not use this file except in compliance with the License.\n        * You may obtain a copy of the License at\n        *\n        *   http://www.apache.org/licenses/LICENSE-2.0\n        *\n        * Unless required by applicable law or agreed to in writing, software\n        * distributed under the License is distributed on an \"AS IS\" BASIS,\n        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n        * See the License for the specific language governing permissions and\n        * limitations under the License.\n        */(t)) throw t;\n        // Failure will be handled by AsyncQueue\n        y(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n      }\n      this.Tt.length > 0 &&\n      // If there are additional operations, we re-schedule `retryNextOp()`.\n      // This is necessary to run retryable operations that failed during\n      // their initial attempt since we don't know whether they are already\n      // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n      // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n      // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n      // call scheduled here.\n      // Since `backoffAndRun()` cancels an existing backoff and schedules a\n      // new backoff on every call, there is only ever a single additional\n      // operation in the queue.\n      this.gt.K(() => this.St());\n    }\n  }\n  xt(t) {\n    const e = this.It.then(() => (this.Vt = !0, t().catch(t => {\n      this.Pt = t, this.Vt = !1;\n      const e =\n      /**\n      * Chrome includes Error.message in Error.stack. Other browsers do not.\n      * This returns expected output of message + stack when available.\n      * @param error - Error or FirestoreError\n      */\n      function (t) {\n        let e = t.message || \"\";\n        t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n        return e;\n      }\n      /**\n      * @license\n      * Copyright 2020 Google LLC\n      *\n      * Licensed under the Apache License, Version 2.0 (the \"License\");\n      * you may not use this file except in compliance with the License.\n      * You may obtain a copy of the License at\n      *\n      *   http://www.apache.org/licenses/LICENSE-2.0\n      *\n      * Unless required by applicable law or agreed to in writing, software\n      * distributed under the License is distributed on an \"AS IS\" BASIS,\n      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      * See the License for the specific language governing permissions and\n      * limitations under the License.\n      */\n      // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n      // legacy SDK.\n      /**\n      * A reference to a transaction.\n      *\n      * The `Transaction` object passed to a transaction's `updateFunction` provides\n      * the methods to read and write data within the transaction context. See\n      * {@link runTransaction}.\n      */(t);\n      // Re-throw the error so that this.tail becomes a rejected Promise and\n      // all further attempts to chain (via .then) will just short-circuit\n      // and return the rejected Promise.\n      throw g(\"INTERNAL UNHANDLED ERROR: \", e), t;\n    }).then(t => (this.Vt = !1, t))));\n    return this.It = e, e;\n  }\n  enqueueAfterDelay(t, e, n) {\n    this.Ft(),\n    // Fast-forward delays for timerIds that have been overriden.\n    this.Nt.indexOf(t) > -1 && (e = 0);\n    const r = _s.createAndSchedule(this, t, e, n, t => this.qt(t));\n    return this.Rt.push(r), r;\n  }\n  Ft() {\n    this.Pt && b();\n  }\n  verifyOperationInProgress() {}\n  /**\n   * Waits until all currently queued tasks are finished executing. Delayed\n   * operations are not run.\n   */\n  async Ot() {\n    // Operations in the queue prior to draining may have enqueued additional\n    // operations. Keep draining the queue until the tail is no longer advanced,\n    // which indicates that no more new operations were enqueued and that all\n    // operations were executed.\n    let t;\n    do {\n      t = this.It, await t;\n    } while (t !== this.It);\n  }\n  /**\n   * For Tests: Determine if a delayed operation with a particular TimerId\n   * exists.\n   */\n  kt(t) {\n    for (const e of this.Rt) if (e.timerId === t) return !0;\n    return !1;\n  }\n  /**\n   * For Tests: Runs some or all delayed operations early.\n   *\n   * @param lastTimerId - Delayed operations up to and including this TimerId\n   * will be drained. Pass TimerId.All to run all delayed operations.\n   * @returns a Promise that resolves once all operations have been run.\n   */\n  Ct(t) {\n    // Note that draining may generate more delayed ops, so we do that first.\n    return this.Ot().then(() => {\n      // Run ops in the same order they'd run if they ran naturally.\n      this.Rt.sort((t, e) => t.targetTimeMs - e.targetTimeMs);\n      for (const e of this.Rt) if (e.skipDelay(), \"all\" /* TimerId.All */ !== t && e.timerId === t) break;\n      return this.Ot();\n    });\n  }\n  /**\n   * For Tests: Skip all subsequent delays for a timer id.\n   */\n  Mt(t) {\n    this.Nt.push(t);\n  }\n  /** Called once a DelayedOperation is run or canceled. */\n  qt(t) {\n    // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n    const e = this.Rt.indexOf(t);\n    this.Rt.splice(e, 1);\n  }\n}\nclass bs {\n  /** @hideconstructor */\n  constructor(t, e) {\n    this._firestore = t, this._transaction = e, this._dataReader = Hn(t);\n  }\n  /**\n   * Reads the document referenced by the provided {@link DocumentReference}.\n   *\n   * @param documentRef - A reference to the document to be read.\n   * @returns A `DocumentSnapshot` with the read data.\n   */\n  get(t) {\n    const e = ds(t, this._firestore),\n      n = new Gr(this._firestore);\n    return this._transaction.lookup([e._key]).then(t => {\n      if (!t || 1 !== t.length) return b();\n      const r = t[0];\n      if (r.isFoundDocument()) return new pr(this._firestore, n, r.key, r, e.converter);\n      if (r.isNoDocument()) return new pr(this._firestore, n, e._key, null, e.converter);\n      throw b();\n    });\n  }\n  set(t, e, n) {\n    const r = ds(t, this._firestore),\n      s = Wr(r.converter, e, n),\n      i = Jn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n    return this._transaction.set(r._key, i), this;\n  }\n  update(t, e, n) {\n    const s = ds(t, this._firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n    let i;\n    for (var _len19 = arguments.length, r = new Array(_len19 > 3 ? _len19 - 3 : 0), _key19 = 3; _key19 < _len19; _key19++) {\n      r[_key19 - 3] = arguments[_key19];\n    }\n    return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof Ln ? ir(this._dataReader, \"Transaction.update\", s._key, e, n, r) : sr(this._dataReader, \"Transaction.update\", s._key, e), this._transaction.update(s._key, i), this;\n  }\n  /**\n   * Deletes the document referred to by the provided {@link DocumentReference}.\n   *\n   * @param documentRef - A reference to the document to be deleted.\n   * @returns This `Transaction` instance. Used for chaining method calls.\n   */\n  delete(t) {\n    const e = ds(t, this._firestore);\n    return this._transaction.delete(e._key), this;\n  }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */\nfunction Es(t, e, n) {\n  const r = En(t = ct(t, Tn)),\n    s = Object.assign(Object.assign({}, ps), n);\n  !function (t) {\n    if (t.maxAttempts < 1) throw new U(P, \"Max attempts must be at least 1\");\n  }(s);\n  const i = new j();\n  return new ys(new vs(), r, s, n => e(new bs(t, n)), i).run(), i.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */\n!function (t) {\n  w = t;\n}(`${SDK_VERSION}_lite`), _registerComponent(new Component(\"firestore/lite\", (t, _ref3) => {\n  let {\n    instanceIdentifier: e,\n    options: n\n  } = _ref3;\n  const r = t.getProvider(\"app\").getImmediate(),\n    s = new Tn(new W(t.getProvider(\"auth-internal\")), new H(t.getProvider(\"app-check-internal\")), function (t, e) {\n      if (!Object.prototype.hasOwnProperty.apply(t.options, [\"projectId\"])) throw new U(P, '\"projectId\" not provided in firebase.initializeApp.');\n      return new X(t.options.projectId, e);\n    }\n    /**\n    * @license\n    * Copyright 2017 Google LLC\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *   http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */(r, e), r);\n  return n && s._setSettings(n), s;\n}, \"PUBLIC\").setMultipleInstances(!0)),\n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nregisterVersion(\"firestore-lite\", \"3.12.1\", \"\"), registerVersion(\"firestore-lite\", \"3.12.1\", \"esm2017\");\nexport { $n as AggregateField, Nn as AggregateQuerySnapshot, Mn as Bytes, xn as CollectionReference, Dn as DocumentReference, pr as DocumentSnapshot, Ln as FieldPath, jn as FieldValue, Tn as Firestore, U as FirestoreError, Bn as GeoPoint, Fn as Query, Rr as QueryCompositeFilterConstraint, Er as QueryConstraint, yr as QueryDocumentSnapshot, kr as QueryEndAtConstraint, Tr as QueryFieldFilterConstraint, Dr as QueryLimitConstraint, $r as QueryOrderByConstraint, gr as QuerySnapshot, Sr as QueryStartAtConstraint, xt as Timestamp, bs as Transaction, fs as WriteBatch, Zr as addDoc, is as aggregateFieldEqual, os as aggregateQuerySnapshotEqual, Vr as and, hs as arrayRemove, as as arrayUnion, rs as average, Sn as collection, qn as collectionGroup, Pn as connectFirestoreEmulator, ss as count, Xr as deleteDoc, us as deleteField, On as doc, Un as documentId, Mr as endAt, Cr as endBefore, es as getAggregate, ts as getCount, Kr as getDoc, Yr as getDocs, Rn as getFirestore, ls as increment, An as initializeFirestore, Fr as limit, xr as limitToLast, Pr as or, Nr as orderBy, Ir as query, Cn as queryEqual, kn as refEqual, Es as runTransaction, cs as serverTimestamp, Hr as setDoc, p as setLogLevel, _r as snapshotEqual, Or as startAfter, qr as startAt, ns as sum, Vn as terminate, Jr as updateDoc, Ar as where, ws as writeBatch };","map":{"version":3,"names":["d","constructor","t","uid","isAuthenticated","toKey","isEqual","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","w","m","Logger","p","setLogLevel","y","logLevel","LogLevel","DEBUG","_len","arguments","length","e","Array","_key","n","map","v","debug","g","ERROR","_len2","_key2","error","_","WARN","_len3","_key3","warn","JSON","stringify","b","undefined","Error","E","I","T","A","R","P","V","$","N","D","F","x","S","q","O","k","C","M","L","U","FirebaseError","code","message","toString","name","j","promise","Promise","resolve","reject","B","user","type","headers","Map","set","Q","getToken","invalidateToken","start","enqueueRetryable","shutdown","z","token","changeListener","W","auth","onInit","then","accessToken","getUid","G","i","o","u","h","K","Y","value","H","l","appCheck","J","r","s","c","databaseId","appId","persistenceKey","host","ssl","forceLongPolling","autoDetectLongPolling","longPollingOptions","useFetchStreams","X","projectId","database","empty","isDefaultDatabase","Z","segments","offset","len","comparator","child","slice","limit","forEach","push","construct","popFirst","popLast","firstSegment","lastSegment","get","isEmpty","isPrefixOf","isImmediateParentOf","toArray","Math","min","tt","canonicalString","join","fromString","_len4","_key4","indexOf","split","filter","emptyPath","et","nt","isValidIdentifier","test","replace","isKeyField","keyField","fromServerFormat","rt","path","fromPath","fromName","collectionGroup","hasCollectionId","getCollectionGroup","getCollectionPath","isDocumentKey","fromSegments","st","it","ot","ut","substring","ct","_delegate","at","ht","timeoutSeconds","lt","ft","round","random","dt","wt","mt","BatchGetDocuments","Commit","RunQuery","RunAggregationQuery","pt","yt","gt","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","_t","databaseInfo","method","body","status","statusText","ok","json","isArray","vt","alias","fieldPath","bt","self","crypto","msCrypto","Uint8Array","getRandomValues","floor","Et","charAt","It","Tt","every","At","Object","prototype","hasOwnProperty","call","Rt","Pt","Vt","binaryString","fromBase64String","atob","DOMException","fromUint8Array","String","fromCharCode","Symbol","iterator","next","charCodeAt","done","toBase64","btoa","toUint8Array","approximateByteSize","compareTo","EMPTY_BYTE_STRING","$t","RegExp","Nt","exec","substr","Number","Date","seconds","getTime","nanos","Dt","Ft","xt","nanoseconds","now","fromMillis","fromDate","toDate","toMillis","_compareTo","toJSON","valueOf","padStart","St","mapValue","fields","__type__","stringValue","qt","__previous_value__","Ot","__local_write_time__","timestampValue","kt","Ct","Mt","booleanValue","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","isNaN","arrayValue","values","Lt","find","Ut","jt","keys","sort","Bt","Qt","zt","Wt","Gt","Kt","assign","Yt","position","inclusive","Ht","Jt","Xt","field","op","create","createKeyFieldInFilter","ee","ie","oe","ue","ce","ne","re","matches","data","matchesComparison","isInequality","getFlattenedFilters","getFilters","getFirstInequalityField","Zt","filters","reduce","concat","te","key","se","some","nullValue","ae","dir","he","le","timestamp","fromTimestamp","max","toMicroseconds","toTimestamp","fe","root","we","EMPTY","insert","copy","BLACK","remove","left","right","size","minKey","maxKey","inorderTraversal","reverseTraversal","getIterator","de","getIteratorFrom","getReverseIterator","getReverseIteratorFrom","isReverse","nodeStack","getNext","pop","hasNext","peek","color","RED","fixUp","removeMin","isRed","moveRedLeft","rotateRight","moveRedRight","rotateLeft","colorFlip","checkMaxDepth","check","pow","me","has","first","last","forEachInRange","forEachWhile","firstAfterOrEqual","pe","add","delete","unionWith","iter","ye","covers","ge","getFieldsMap","setAll","applyChanges","clone","_e","documentType","version","readTime","createTime","documentState","newInvalidDocument","newFoundDocument","newNoDocument","newUnknownDocument","convertToFoundDocument","convertToNoDocument","convertToUnknownDocument","setHasCommittedMutations","setHasLocalMutations","setReadTime","hasLocalMutations","hasCommittedMutations","hasPendingWrites","isValidDocument","isFoundDocument","isNoDocument","isUnknownDocument","mutableCopy","ve","orderBy","startAt","endAt","be","Ee","explicitOrderBy","limitType","Ie","Te","Ae","Re","Pe","Ve","$e","Ne","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","useProto3Json","De","Fe","xe","elements","Se","qe","serializer","Oe","transform","ke","updateTime","exists","none","isNone","Ce","Me","precondition","fieldTransforms","getFieldMask","Le","fieldMask","Ue","je","Be","asc","desc","Qe","in","ze","and","or","We","Ge","toISOString","Ke","Ye","He","Je","Xe","Ze","dn","tn","en","nn","rn","found","missing","sn","update","updateMask","fn","verify","updateTransforms","setToServerValue","appendMissingElements","removeAllFromArray","increment","currentDocument","on","structuredQuery","parent","from","collectionId","allDescendants","ln","where","hn","direction","un","before","cn","an","unaryFilter","fieldFilter","compositeFilter","fieldPaths","wn","mn","timerId","reset","cancel","enqueueAfterDelay","skipDelay","pn","authCredentials","appCheckCredentials","connection","all","_ref","catch","_ref2","terminate","yn","writes","gn","documents","_n","document","vn","request","count","avg","sum","structuredAggregationQuery","aggregations","result","a","aggregateFields","bn","En","_terminated","fetch","bind","_databaseId","app","options","_persistenceKey","_freezeSettings","experimentalForceLongPolling","experimentalAutoDetectLongPolling","experimentalLongPollingOptions","_authCredentials","_appCheckCredentials","In","credentials","ignoreUndefinedProperties","cache","localCache","cacheSizeBytes","Tn","_app","_settings","_settingsFrozen","_initialized","_terminateTask","_setSettings","sessionIndex","iamToken","authTokenFactory","client","_getSettings","_delete","_terminate","settings","An","_getProvider","isInitialized","initialize","instanceIdentifier","Rn","getApp","getImmediate","identifier","getDefaultEmulatorHostnameAndPort","Pn","mockUserToken","createMockUserToken","sub","user_id","Vn","_removeServiceInstance","$n","_aggregateType","_internalFieldPath","Nn","_userDataWriter","_data","query","convertObjectMap","Dn","converter","firestore","_path","id","xn","withConverter","Fn","_query","Sn","_len5","_key5","getModularInstance","qn","On","_len6","_key6","kn","Cn","Mn","_byteString","Ln","_len7","_key7","_internalPath","Un","jn","_methodName","Bn","isFinite","_lat","_long","Qn","zn","toMutation","Wn","Gn","Kn","wr","methodName","contains","Yn","Hn","Jn","merge","mergeFields","hr","cr","lr","mr","Xn","_toFieldTransform","Zn","tr","er","ur","nr","rr","sr","dr","ir","f","ar","getPrototypeOf","fr","search","pr","_firestore","_document","_converter","ref","yr","fromFirestore","convertValue","vr","gr","_docs","docs","_r","br","Er","Ir","_len8","_key8","Rr","Tr","_apply","_field","_op","_value","_create","_parse","Br","jr","Ur","Ar","_queryConstraints","_getOperator","_getQueryConstraints","Pr","_len9","_key9","zr","Vr","_len10","_key10","$r","_direction","Qr","Nr","Dr","_limit","_limitType","Fr","xr","Sr","_docOrFields","_inclusive","Lr","qr","_len11","_key11","Or","_len12","_key12","kr","Cr","_len13","_key13","Mr","_len14","_key14","Wr","toFirestore","Gr","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","convertDocumentKey","Kr","Yr","reverse","Hr","Jr","_len15","_key15","Xr","Zr","ts","es","ss","ns","rs","is","os","deepEqual","us","cs","as","_len16","_key16","hs","_len17","_key17","ls","fs","_commitHandler","_mutations","_committed","_dataReader","_verifyNotCommitted","ds","_len18","_key18","commit","ws","ms","datastore","readVersions","mutations","committed","lastWriteError","writtenDocs","Set","lookup","ensureCommitNotCalled","recordVersion","write","preconditionForUpdate","ps","maxAttempts","ys","asyncQueue","updateFunction","deferred","run","enqueueAndForget","gs","_s","targetTimeMs","removalCallback","createAndSchedule","timerHandle","setTimeout","handleDelayElapsed","clearTimeout","vs","visibilityState","addEventListener","isShuttingDown","enqueue","enqueueAndForgetEvenWhileRestricted","enterRestrictedMode","removeEventListener","shift","stack","includes","verifyOperationInProgress","splice","bs","_transaction","_len19","_key19","Es","SDK_VERSION","_registerComponent","Component","_ref3","getProvider","apply","setMultipleInstances","registerVersion"],"sources":["/Users/vefaozlu/Projects/NodeJS/instagram_clone/node_modules/@firebase/firestore/dist/lite/index.browser.esm2017.js"],"sourcesContent":["import { _getProvider, getApp as t, _removeServiceInstance as e, _registerComponent as n, registerVersion as r, SDK_VERSION as s } from \"@firebase/app\";\n\nimport { Component as i } from \"@firebase/component\";\n\nimport { Logger as o, LogLevel as u } from \"@firebase/logger\";\n\nimport { FirebaseError as c, getDefaultEmulatorHostnameAndPort as a, createMockUserToken as h, getModularInstance as l, deepEqual as f } from \"@firebase/util\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass d {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ d.UNAUTHENTICATED = new d(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nd.GOOGLE_CREDENTIALS = new d(\"google-credentials-uid\"), d.FIRST_PARTY = new d(\"first-party-uid\"), \nd.MOCK_USER = new d(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet w = \"9.22.1\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst m = new o(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function p(t) {\n    m.setLogLevel(t);\n}\n\nfunction y(t, ...e) {\n    if (m.logLevel <= u.DEBUG) {\n        const n = e.map(v);\n        m.debug(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\nfunction g(t, ...e) {\n    if (m.logLevel <= u.ERROR) {\n        const n = e.map(v);\n        m.error(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function _(t, ...e) {\n    if (m.logLevel <= u.WARN) {\n        const n = e.map(v);\n        m.warn(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function v(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function b(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${w}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw g(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function E(t, e) {\n    t || b();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function I(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const T = \"ok\", A = \"cancelled\", R = \"unknown\", P = \"invalid-argument\", V = \"deadline-exceeded\", $ = \"not-found\", N = \"already-exists\", D = \"permission-denied\", F = \"unauthenticated\", x = \"resource-exhausted\", S = \"failed-precondition\", q = \"aborted\", O = \"out-of-range\", k = \"unimplemented\", C = \"internal\", M = \"unavailable\", L = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class U extends c {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class j {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class B {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class Q {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(d.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class z {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class W {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (E(\"string\" == typeof t.accessToken), \n        new B(t.accessToken, new d(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class G {\n    constructor(t, e, n) {\n        this.t = t, this.i = e, this.o = n, this.type = \"FirstParty\", this.user = d.FIRST_PARTY, \n        this.u = new Map;\n    }\n    /**\n     * Gets an authorization token, using a provided factory function, or return\n     * null.\n     */    h() {\n        return this.o ? this.o() : null;\n    }\n    get headers() {\n        this.u.set(\"X-Goog-AuthUser\", this.t);\n        // Use array notation to prevent minification\n        const t = this.h();\n        return t && this.u.set(\"Authorization\", t), this.i && this.u.set(\"X-Goog-Iam-Authorization-Token\", this.i), \n        this.u;\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class K {\n    constructor(t, e, n) {\n        this.t = t, this.i = e, this.o = n;\n    }\n    getToken() {\n        return Promise.resolve(new G(this.t, this.i, this.o));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(d.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass Y {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\n/** AppCheck token provider for the Lite SDK. */ class H {\n    constructor(t) {\n        this.l = t, this.appCheck = null, t.onInit((t => {\n            this.appCheck = t;\n        }));\n    }\n    getToken() {\n        return this.appCheck ? this.appCheck.getToken().then((t => t ? (E(\"string\" == typeof t.token), \n        new Y(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass J {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param longPollingOptions Options that configure long-polling.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, r, s, i, o, u, c) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.longPollingOptions = u, \n        this.useFetchStreams = c;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass X {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new X(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof X && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass Z {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && b(), void 0 === n ? n = t.length - e : n > t.length - e && b(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === Z.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof Z ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let r = 0; r < n; r++) {\n            const n = t.get(r), s = e.get(r);\n            if (n < s) return -1;\n            if (n > s) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class tt extends Z {\n    construct(t, e, n) {\n        return new tt(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new U(P, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new tt(e);\n    }\n    static emptyPath() {\n        return new tt([]);\n    }\n}\n\nconst et = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class nt extends Z {\n    construct(t, e, n) {\n        return new nt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return et.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        nt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new nt([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", r = 0;\n        const s = () => {\n            if (0 === n.length) throw new U(P, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const e = t[r];\n            if (\"\\\\\" === e) {\n                if (r + 1 === t.length) throw new U(P, \"Path has trailing escape character: \" + t);\n                const e = t[r + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new U(P, \"Path has invalid escape sequence: \" + t);\n                n += e, r += 2;\n            } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n        }\n        if (s(), i) throw new U(P, \"Unterminated ` in path: \" + t);\n        return new nt(e);\n    }\n    static emptyPath() {\n        return new nt([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class rt {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new rt(tt.fromString(t));\n    }\n    static fromName(t) {\n        return new rt(tt.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new rt(tt.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === tt.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return tt.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new rt(new tt(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function st(t, e, n) {\n    if (!n) throw new U(P, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction it(t) {\n    if (!rt.isDocumentKey(t)) throw new U(P, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function ot(t) {\n    if (rt.isDocumentKey(t)) throw new U(P, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction ut(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : b();\n}\n\nfunction ct(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new U(P, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = ut(t);\n            throw new U(P, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction at(t, e) {\n    if (e <= 0) throw new U(P, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Compares two `ExperimentalLongPollingOptions` objects for equality.\n */\n/**\n * Creates and returns a new `ExperimentalLongPollingOptions` with the same\n * option values as the given instance.\n */\nfunction ht(t) {\n    const e = {};\n    return void 0 !== t.timeoutSeconds && (e.timeoutSeconds = t.timeoutSeconds), e;\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The value returned from the most recent invocation of\n * `generateUniqueDebugId()`, or null if it has never been invoked.\n */ let lt = null;\n\n/**\n * Generates and returns an initial value for `lastUniqueDebugId`.\n *\n * The returned value is randomly selected from a range of integers that are\n * represented as 8 hexadecimal digits. This means that (within reason) any\n * numbers generated by incrementing the returned number by 1 will also be\n * represented by 8 hexadecimal digits. This leads to all \"IDs\" having the same\n * length when converted to a hexadecimal string, making reading logs containing\n * these IDs easier to follow. And since the return value is randomly selected\n * it will help to differentiate between logs from different executions.\n */\n/**\n * Generates and returns a unique ID as a hexadecimal string.\n *\n * The returned ID is intended to be used in debug logging messages to help\n * correlate log messages that may be spatially separated in the logs, but\n * logically related. For example, a network connection could include the same\n * \"debug ID\" string in all of its log messages to help trace a specific\n * connection over time.\n *\n * @return the 10-character generated ID (e.g. \"0xa1b2c3d4\").\n */\nfunction ft() {\n    return null === lt ? lt = 268435456 + Math.round(2147483648 * Math.random()) : lt++, \n    \"0x\" + lt.toString(16);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function dt(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function wt(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst mt = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\",\n    RunAggregationQuery: \"runAggregationQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar pt, yt;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction gt(t) {\n    if (void 0 === t) return g(\"RPC_ERROR\", \"HTTP error has no status\"), R;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return T;\n\n      case 400:\n        // Bad Request\n        return S;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return F;\n\n      case 403:\n        // Forbidden\n        return D;\n\n      case 404:\n        // Not Found\n        return $;\n\n      case 409:\n        // Conflict\n        return q;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return O;\n\n      case 429:\n        // Too Many Requests\n        return x;\n\n      case 499:\n        // Client Closed Request\n        return A;\n\n      case 500:\n        // Internal Server Error\n        return R;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return k;\n\n      case 503:\n        // Service Unavailable\n        return M;\n\n      case 504:\n        // Gateway Timeout\n        return V;\n\n      default:\n        return t >= 200 && t < 300 ? T : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? C : R;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (yt = pt || (pt = {}))[yt.OK = 0] = \"OK\", yt[yt.CANCELLED = 1] = \"CANCELLED\", \nyt[yt.UNKNOWN = 2] = \"UNKNOWN\", yt[yt.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nyt[yt.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", yt[yt.NOT_FOUND = 5] = \"NOT_FOUND\", \nyt[yt.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", yt[yt.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nyt[yt.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", yt[yt.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nyt[yt.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", yt[yt.ABORTED = 10] = \"ABORTED\", \nyt[yt.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", yt[yt.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nyt[yt.INTERNAL = 13] = \"INTERNAL\", yt[yt.UNAVAILABLE = 14] = \"UNAVAILABLE\", yt[yt.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass _t extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.m = e + \"://\" + t.host, this.p = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    get g() {\n        // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n        // where to run the query, and expect the `request` to NOT specify the \"path\".\n        return !1;\n    }\n    v(t, e, n, r, s) {\n        const i = ft(), o = this.I(t, e);\n        y(\"RestConnection\", `Sending RPC '${t}' ${i}:`, o, n);\n        const u = {};\n        return this.T(u, r, s), this.A(t, o, u, n).then((e => (y(\"RestConnection\", `Received RPC '${t}' ${i}: `, e), \n        e)), (e => {\n            throw _(\"RestConnection\", `RPC '${t}' ${i} failed with error: `, e, \"url: \", o, \"request:\", n), \n            e;\n        }));\n    }\n    R(t, e, n, r, s, i) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.v(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    T(t, e, n) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + w, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, n) => t[n] = e)), n && n.headers.forEach(((e, n) => t[n] = e));\n    }\n    I(t, e) {\n        const n = mt[t];\n        return `${this.m}/v1/${e}:${n}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, e) {\n        super(t), this.P = e;\n    }\n    V(t, e) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async A(t, e, n, r) {\n        var s;\n        const i = JSON.stringify(r);\n        let o;\n        try {\n            o = await this.P(e, {\n                method: \"POST\",\n                headers: n,\n                body: i\n            });\n        } catch (t) {\n            const e = t;\n            throw new U(gt(e.status), \"Request failed with error: \" + e.statusText);\n        }\n        if (!o.ok) {\n            let t = await o.json();\n            Array.isArray(t) && (t = t[0]);\n            const e = null === (s = null == t ? void 0 : t.error) || void 0 === s ? void 0 : s.message;\n            throw new U(gt(o.status), `Request failed with error: ${null != e ? e : o.statusText}`);\n        }\n        return o.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Concrete implementation of the Aggregate type.\n */\nclass vt {\n    constructor(t, e, n) {\n        this.alias = t, this.$ = e, this.fieldPath = n;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */ function bt(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Et {\n    static N() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const r = bt(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction It(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function Tt(t, e, n) {\n    return t.length === e.length && t.every(((t, r) => n(t, e[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function At(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction Rt(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An error encountered while decoding base64 string.\n */\nclass Pt extends Error {\n    constructor() {\n        super(...arguments), this.name = \"Base64DecodeError\";\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass Vt {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = function(t) {\n            try {\n                return atob(t);\n            } catch (t) {\n                // Check that `DOMException` is defined before using it to avoid\n                // \"ReferenceError: Property 'DOMException' doesn't exist\" in react-native.\n                // (https://github.com/firebase/firebase-js-sdk/issues/7115)\n                throw \"undefined\" != typeof DOMException && t instanceof DOMException ? new Pt(\"Invalid base64 string: \" + t) : t;\n            }\n        }\n        /** Converts a binary string to a Base64 encoded string. */ (t);\n        return new Vt(e);\n    }\n    static fromUint8Array(t) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new Vt(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return It(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\nVt.EMPTY_BYTE_STRING = new Vt(\"\");\n\nconst $t = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function Nt(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (E(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = $t.exec(t);\n        if (E(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: Dt(t.seconds),\n        nanos: Dt(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function Dt(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function Ft(t) {\n    return \"string\" == typeof t ? Vt.fromBase64String(t) : Vt.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass xt {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return xt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return xt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new xt(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? It(this.nanoseconds, t.nanoseconds) : It(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function St(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function qt(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return St(e) ? qt(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function Ot(t) {\n    const e = Nt(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new xt(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const kt = {\n    fields: {\n        __type__: {\n            stringValue: \"__max__\"\n        }\n    }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction Ct(t) {\n    return \"nullValue\" in t ? 0 /* TypeOrder.NullValue */ : \"booleanValue\" in t ? 1 /* TypeOrder.BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* TypeOrder.NumberValue */ : \"timestampValue\" in t ? 3 /* TypeOrder.TimestampValue */ : \"stringValue\" in t ? 5 /* TypeOrder.StringValue */ : \"bytesValue\" in t ? 6 /* TypeOrder.BlobValue */ : \"referenceValue\" in t ? 7 /* TypeOrder.RefValue */ : \"geoPointValue\" in t ? 8 /* TypeOrder.GeoPointValue */ : \"arrayValue\" in t ? 9 /* TypeOrder.ArrayValue */ : \"mapValue\" in t ? St(t) ? 4 /* TypeOrder.ServerTimestampValue */ : \n    /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n    function(t) {\n        return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n    }\n    /**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ (t) ? 9007199254740991 /* TypeOrder.MaxValue */ : 10 /* TypeOrder.ObjectValue */ : b();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function Mt(t, e) {\n    if (t === e) return !0;\n    const n = Ct(t);\n    if (n !== Ct(e)) return !1;\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return !0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return Ot(t).isEqual(Ot(e));\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = Nt(t.timestampValue), r = Nt(e.timestampValue);\n            return n.seconds === r.seconds && n.nanos === r.nanos;\n        }(t, e);\n\n      case 5 /* TypeOrder.StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            return Ft(t.bytesValue).isEqual(Ft(e.bytesValue));\n        }(t, e);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            return Dt(t.geoPointValue.latitude) === Dt(e.geoPointValue.latitude) && Dt(t.geoPointValue.longitude) === Dt(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return Dt(t.integerValue) === Dt(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = Dt(t.doubleValue), r = Dt(e.doubleValue);\n                return n === r ? wt(n) === wt(r) : isNaN(n) && isNaN(r);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return Tt(t.arrayValue.values || [], e.arrayValue.values || [], Mt);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, r = e.mapValue.fields || {};\n            if (At(n) !== At(r)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !Mt(n[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return b();\n    }\n}\n\nfunction Lt(t, e) {\n    return void 0 !== (t.values || []).find((t => Mt(t, e)));\n}\n\nfunction Ut(t, e) {\n    if (t === e) return 0;\n    const n = Ct(t), r = Ct(e);\n    if (n !== r) return It(n, r);\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return 0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return It(t.booleanValue, e.booleanValue);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            const n = Dt(t.integerValue || t.doubleValue), r = Dt(e.integerValue || e.doubleValue);\n            return n < r ? -1 : n > r ? 1 : n === r ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return jt(t.timestampValue, e.timestampValue);\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return jt(Ot(t), Ot(e));\n\n      case 5 /* TypeOrder.StringValue */ :\n        return It(t.stringValue, e.stringValue);\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            const n = Ft(t), r = Ft(e);\n            return n.compareTo(r);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), r = e.split(\"/\");\n            for (let t = 0; t < n.length && t < r.length; t++) {\n                const e = It(n[t], r[t]);\n                if (0 !== e) return e;\n            }\n            return It(n.length, r.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            const n = It(Dt(t.latitude), Dt(e.latitude));\n            if (0 !== n) return n;\n            return It(Dt(t.longitude), Dt(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], r = e.values || [];\n            for (let t = 0; t < n.length && t < r.length; ++t) {\n                const e = Ut(n[t], r[t]);\n                if (e) return e;\n            }\n            return It(n.length, r.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            if (t === kt && e === kt) return 0;\n            if (t === kt) return 1;\n            if (e === kt) return -1;\n            const n = t.fields || {}, r = Object.keys(n), s = e.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const e = It(r[t], i[t]);\n                if (0 !== e) return e;\n                const o = Ut(n[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return It(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, e.mapValue);\n\n      default:\n        throw b();\n    }\n}\n\nfunction jt(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return It(t, e);\n    const n = Nt(t), r = Nt(e), s = It(n.seconds, r.seconds);\n    return 0 !== s ? s : It(n.nanos, r.nanos);\n}\n\nfunction Bt(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function Qt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function zt(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function Wt(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function Gt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Kt(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return Rt(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = Kt(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Kt(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\nclass Yt {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\nfunction Ht(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!Mt(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Jt {}\n\nclass Xt extends Jt {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* Operator.IN */ === e || \"not-in\" /* Operator.NOT_IN */ === e ? this.createKeyFieldInFilter(t, e, n) : new ee(t, e, n) : \"array-contains\" /* Operator.ARRAY_CONTAINS */ === e ? new ie(t, n) : \"in\" /* Operator.IN */ === e ? new oe(t, n) : \"not-in\" /* Operator.NOT_IN */ === e ? new ue(t, n) : \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === e ? new ce(t, n) : new Xt(t, e, n);\n    }\n    static createKeyFieldInFilter(t, e, n) {\n        return \"in\" /* Operator.IN */ === e ? new ne(t, n) : new re(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* Operator.NOT_EQUAL */ === this.op ? null !== e && this.matchesComparison(Ut(e, this.value)) : null !== e && Ct(this.value) === Ct(e) && this.matchesComparison(Ut(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    matchesComparison(t) {\n        switch (this.op) {\n          case \"<\" /* Operator.LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* Operator.EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* Operator.GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return b();\n        }\n    }\n    isInequality() {\n        return [ \"<\" /* Operator.LESS_THAN */ , \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ , \">\" /* Operator.GREATER_THAN */ , \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ , \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n    getFlattenedFilters() {\n        return [ this ];\n    }\n    getFilters() {\n        return [ this ];\n    }\n    getFirstInequalityField() {\n        return this.isInequality() ? this.field : null;\n    }\n}\n\nclass Zt extends Jt {\n    constructor(t, e) {\n        super(), this.filters = t, this.op = e, this.D = null;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e) {\n        return new Zt(t, e);\n    }\n    matches(t) {\n        return \"and\" /* CompositeOperator.AND */ === this.op ? void 0 === this.filters.find((e => !e.matches(t))) : void 0 !== this.filters.find((e => e.matches(t)));\n    }\n    getFlattenedFilters() {\n        return null !== this.D || (this.D = this.filters.reduce(((t, e) => t.concat(e.getFlattenedFilters())), [])), \n        this.D;\n    }\n    // Returns a mutable copy of `this.filters`\n    getFilters() {\n        return Object.assign([], this.filters);\n    }\n    getFirstInequalityField() {\n        const t = this.F((t => t.isInequality()));\n        return null !== t ? t.field : null;\n    }\n    // Performs a depth-first search to find and return the first FieldFilter in the composite filter\n    // that satisfies the predicate. Returns `null` if none of the FieldFilters satisfy the\n    // predicate.\n    F(t) {\n        for (const e of this.getFlattenedFilters()) if (t(e)) return e;\n        return null;\n    }\n}\n\nfunction te(t, e) {\n    return t instanceof Xt ? function(t, e) {\n        return e instanceof Xt && t.op === e.op && t.field.isEqual(e.field) && Mt(t.value, e.value);\n    }(t, e) : t instanceof Zt ? function(t, e) {\n        if (e instanceof Zt && t.op === e.op && t.filters.length === e.filters.length) {\n            return t.filters.reduce(((t, n, r) => t && te(n, e.filters[r])), !0);\n        }\n        return !1;\n    }\n    /** Filter that matches on key fields (i.e. '__name__'). */ (t, e) : void b();\n}\n\nclass ee extends Xt {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = rt.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = rt.comparator(t.key, this.key);\n        return this.matchesComparison(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class ne extends Xt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e), this.keys = se(\"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class re extends Xt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e), this.keys = se(\"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction se(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => rt.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class ie extends Xt {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* Operator.ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return Qt(e) && Lt(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class oe extends Xt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && Lt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class ue extends Xt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        if (Lt(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !Lt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class ce extends Xt {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!Qt(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => Lt(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class ae {\n    constructor(t, e = \"asc\" /* Direction.ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction he(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class le {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new le(t);\n    }\n    static min() {\n        return new le(new xt(0, 0));\n    }\n    static max() {\n        return new le(new xt(253402300799, 999999999));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass fe {\n    constructor(t, e) {\n        this.comparator = t, this.root = e || we.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(t, e) {\n        return new fe(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, we.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(t) {\n        return new fe(this.comparator, this.root.remove(t, this.comparator).copy(null, null, we.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(t) {\n        let e = this.root;\n        for (;!e.isEmpty(); ) {\n            const n = this.comparator(t, e.key);\n            if (0 === n) return e.value;\n            n < 0 ? e = e.left : n > 0 && (e = e.right);\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(t) {\n        // Number of nodes that were pruned when descending right\n        let e = 0, n = this.root;\n        for (;!n.isEmpty(); ) {\n            const r = this.comparator(t, n.key);\n            if (0 === r) return e + n.left.size;\n            r < 0 ? n = n.left : (\n            // Count all nodes left of the node plus the node itself\n            e += n.left.size + 1, n = n.right);\n        }\n        // Node not found\n                return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.root.inorderTraversal(t);\n    }\n    forEach(t) {\n        this.inorderTraversal(((e, n) => (t(e, n), !1)));\n    }\n    toString() {\n        const t = [];\n        return this.inorderTraversal(((e, n) => (t.push(`${e}:${n}`), !1))), `{${t.join(\", \")}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new de(this.root, null, this.comparator, !1);\n    }\n    getIteratorFrom(t) {\n        return new de(this.root, t, this.comparator, !1);\n    }\n    getReverseIterator() {\n        return new de(this.root, null, this.comparator, !0);\n    }\n    getReverseIteratorFrom(t) {\n        return new de(this.root, t, this.comparator, !0);\n    }\n}\n\n // end SortedMap\n// An iterator over an LLRBNode.\nclass de {\n    constructor(t, e, n, r) {\n        this.isReverse = r, this.nodeStack = [];\n        let s = 1;\n        for (;!t.isEmpty(); ) if (s = e ? n(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        e && r && (s *= -1), s < 0) \n        // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right; else {\n            if (0 === s) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n        }\n    }\n    getNext() {\n        let t = this.nodeStack.pop();\n        const e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), \n        t = t.left;\n        return e;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (0 === this.nodeStack.length) return null;\n        const t = this.nodeStack[this.nodeStack.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }\n}\n\n // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass we {\n    constructor(t, e, n, r, s) {\n        this.key = t, this.value = e, this.color = null != n ? n : we.RED, this.left = null != r ? r : we.EMPTY, \n        this.right = null != s ? s : we.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(t, e, n, r, s) {\n        return new we(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n    }\n    isEmpty() {\n        return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n    insert(t, e, n) {\n        let r = this;\n        const s = n(t, r.key);\n        return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), \n        r.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) return we.EMPTY;\n        let t = this;\n        return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), \n        t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(t, e) {\n        let n, r = this;\n        if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), \n        r = r.copy(null, null, null, r.left.remove(t, e), null); else {\n            if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), \n            0 === e(t, r.key)) {\n                if (r.right.isEmpty()) return we.EMPTY;\n                n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n            }\n            r = r.copy(null, null, null, null, r.right.remove(t, e));\n        }\n        return r.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let t = this;\n        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), \n        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n    moveRedLeft() {\n        let t = this.colorFlip();\n        return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), \n        t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n    moveRedRight() {\n        let t = this.colorFlip();\n        return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n    rotateLeft() {\n        const t = this.copy(null, null, we.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, t, null);\n    }\n    rotateRight() {\n        const t = this.copy(null, null, we.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, t);\n    }\n    colorFlip() {\n        const t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const t = this.check();\n        return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) throw b();\n        if (this.right.isRed()) throw b();\n        const t = this.left.check();\n        if (t !== this.right.check()) throw b();\n        return t + (this.isRed() ? 0 : 1);\n    }\n}\n\n // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nwe.EMPTY = null, we.RED = !0, we.BLACK = !1;\n\n// end LLRBEmptyNode\nwe.EMPTY = new \n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw b();\n    }\n    get value() {\n        throw b();\n    }\n    get color() {\n        throw b();\n    }\n    get left() {\n        throw b();\n    }\n    get right() {\n        throw b();\n    }\n    // Returns a copy of the current node.\n    copy(t, e, n, r, s) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(t, e, n) {\n        return new we(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(t, e) {\n        return this;\n    }\n    isEmpty() {\n        return !0;\n    }\n    inorderTraversal(t) {\n        return !1;\n    }\n    reverseTraversal(t) {\n        return !1;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return !1;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return !0;\n    }\n    check() {\n        return 0;\n    }\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass me {\n    constructor(t) {\n        this.comparator = t, this.data = new fe(this.comparator);\n    }\n    has(t) {\n        return null !== this.data.get(t);\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(t) {\n        return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */    forEach(t) {\n        this.data.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */    forEachInRange(t, e) {\n        const n = this.data.getIteratorFrom(t[0]);\n        for (;n.hasNext(); ) {\n            const r = n.getNext();\n            if (this.comparator(r.key, t[1]) >= 0) return;\n            e(r.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */    forEachWhile(t, e) {\n        let n;\n        for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext(); ) {\n            if (!t(n.getNext().key)) return;\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */    firstAfterOrEqual(t) {\n        const e = this.data.getIteratorFrom(t);\n        return e.hasNext() ? e.getNext().key : null;\n    }\n    getIterator() {\n        return new pe(this.data.getIterator());\n    }\n    getIteratorFrom(t) {\n        return new pe(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */    add(t) {\n        return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */    delete(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(t) {\n        let e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((t => {\n            e = e.add(t);\n        })), e;\n    }\n    isEqual(t) {\n        if (!(t instanceof me)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.data.getIterator(), n = t.data.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, r = n.getNext().key;\n            if (0 !== this.comparator(t, r)) return !1;\n        }\n        return !0;\n    }\n    toArray() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e);\n        })), t;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => t.push(e))), \"SortedSet(\" + t.toString() + \")\";\n    }\n    copy(t) {\n        const e = new me(this.comparator);\n        return e.data = t, e;\n    }\n}\n\nclass pe {\n    constructor(t) {\n        this.iter = t;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ class ye {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(nt.comparator);\n    }\n    static empty() {\n        return new ye([]);\n    }\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */    unionWith(t) {\n        let e = new me(nt.comparator);\n        for (const t of this.fields) e = e.add(t);\n        for (const n of t) e = e.add(n);\n        return new ye(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return Tt(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ class ge {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new ge({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !Gt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Kt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = nt.emptyPath(), n = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!e.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n            }\n            t ? n[s.lastSegment()] = Kt(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(e);\n        this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        Gt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return Mt(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let r = e.mapValue.fields[t.get(n)];\n            Gt(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = r), e = r;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        Rt(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new ge(Kt(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class _e {\n    constructor(t, e, n, r, s, i, o) {\n        this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.createTime = s, \n        this.data = i, this.documentState = o;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new _e(t, 0 /* DocumentType.INVALID */ , \n        /* version */ le.min(), \n        /* readTime */ le.min(), \n        /* createTime */ le.min(), ge.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n, r) {\n        return new _e(t, 1 /* DocumentType.FOUND_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ le.min(), \n        /* createTime */ n, r, 0 /* DocumentState.SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new _e(t, 2 /* DocumentType.NO_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ le.min(), \n        /* createTime */ le.min(), ge.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new _e(t, 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ le.min(), \n        /* createTime */ le.min(), ge.empty(), 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        // If a document is switching state from being an invalid or deleted\n        // document to a valid (FOUND_DOCUMENT) document, either due to receiving an\n        // update from Watch or due to applying a local set mutation on top\n        // of a deleted document, our best guess about its createTime would be the\n        // version at which the document transitioned to a FOUND_DOCUMENT.\n        return !this.createTime.isEqual(le.min()) || 2 /* DocumentType.NO_DOCUMENT */ !== this.documentType && 0 /* DocumentType.INVALID */ !== this.documentType || (this.createTime = t), \n        this.version = t, this.documentType = 1 /* DocumentType.FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* DocumentType.NO_DOCUMENT */ , \n        this.data = ge.empty(), this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        this.data = ge.empty(), this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , \n        this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ , this.version = le.min(), \n        this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* DocumentType.INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* DocumentType.FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* DocumentType.NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* DocumentType.UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof _e && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new _e(this.key, this.documentType, this.version, this.readTime, this.createTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {createTime: ${this.createTime}}), {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass ve {\n    constructor(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.S = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function be(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n    return new ve(t, e, n, r, s, i, o);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\nclass Ee {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], r = [], s = null, i = \"F\" /* LimitType.First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.q = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.O = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function Ie(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction Te(t) {\n    for (const e of t.filters) {\n        const t = e.getFirstInequalityField();\n        if (null !== t) return t;\n    }\n    return null;\n}\n\n/**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction Ae(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function Re(t) {\n    const e = I(t);\n    if (null === e.q) {\n        e.q = [];\n        const t = Te(e), n = Ie(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.q.push(new ae(t)), e.q.push(new ae(nt.keyField(), \"asc\" /* Direction.ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.q.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* Direction.ASCENDING */;\n                e.q.push(new ae(nt.keyField(), t));\n            }\n        }\n    }\n    return e.q;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function Pe(t) {\n    const e = I(t);\n    if (!e.O) if (\"F\" /* LimitType.First */ === e.limitType) e.O = be(e.path, e.collectionGroup, Re(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of Re(e)) {\n            const e = \"desc\" /* Direction.DESCENDING */ === n.dir ? \"asc\" /* Direction.ASCENDING */ : \"desc\" /* Direction.DESCENDING */;\n            t.push(new ae(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new Yt(e.endAt.position, e.endAt.inclusive) : null, r = e.startAt ? new Yt(e.startAt.position, e.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        e.O = be(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n    }\n    return e.O;\n}\n\nfunction Ve(t, e) {\n    e.getFirstInequalityField(), Te(t);\n    const n = t.filters.concat([ e ]);\n    return new Ee(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n}\n\nfunction $e(t, e) {\n    return function(t, e) {\n        if (t.limit !== e.limit) return !1;\n        if (t.orderBy.length !== e.orderBy.length) return !1;\n        for (let n = 0; n < t.orderBy.length; n++) if (!he(t.orderBy[n], e.orderBy[n])) return !1;\n        if (t.filters.length !== e.filters.length) return !1;\n        for (let n = 0; n < t.filters.length; n++) if (!te(t.filters[n], e.filters[n])) return !1;\n        return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!Ht(t.startAt, e.startAt) && Ht(t.endAt, e.endAt);\n    }(Pe(t), Pe(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction Ne(t, e) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !wt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(e) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(e) : function(t, e) {\n        if (t.useProto3Json) {\n            if (isNaN(e)) return {\n                doubleValue: \"NaN\"\n            };\n            if (e === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (e === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: wt(e) ? \"-0\" : e\n        };\n    }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class De {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class Fe extends De {}\n\n/** Transforms an array value via a union operation. */ class xe extends De {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class Se extends De {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class qe extends De {\n    constructor(t, e) {\n        super(), this.serializer = t, this.k = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class Oe {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class ke {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new ke;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new ke(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new ke(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class Ce {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class Me extends Ce {\n    constructor(t, e, n, r = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, \n        this.type = 0 /* MutationType.Set */;\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class Le extends Ce {\n    constructor(t, e, n, r, s = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* MutationType.Patch */;\n    }\n    getFieldMask() {\n        return this.fieldMask;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class Ue extends Ce {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* MutationType.Delete */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class je extends Ce {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* MutationType.Verify */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Be = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), Qe = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})(), ze = (() => {\n    const t = {\n        and: \"AND\",\n        or: \"OR\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass We {\n    constructor(t, e) {\n        this.databaseId = t, this.useProto3Json = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction Ge(t, e) {\n    if (t.useProto3Json) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Ke(t, e) {\n    return t.useProto3Json ? e.toBase64() : e.toUint8Array();\n}\n\nfunction Ye(t, e) {\n    return Ge(t, e.toTimestamp());\n}\n\nfunction He(t) {\n    return E(!!t), le.fromTimestamp(function(t) {\n        const e = Nt(t);\n        return new xt(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction Je(t, e) {\n    return function(t) {\n        return new tt([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Xe(t, e) {\n    return Je(t.databaseId, e.path);\n}\n\nfunction Ze(t, e) {\n    const n = function(t) {\n        const e = tt.fromString(t);\n        return E(dn(e)), e;\n    }(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new U(P, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new U(P, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new rt((E((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction tn(t, e) {\n    return Je(t.databaseId, e);\n}\n\nfunction en(t) {\n    return new tt([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction nn(t, e, n) {\n    return {\n        name: Xe(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction rn(t, e) {\n    return \"found\" in e ? function(t, e) {\n        E(!!e.found), e.found.name, e.found.updateTime;\n        const n = Ze(t, e.found.name), r = He(e.found.updateTime), s = e.found.createTime ? He(e.found.createTime) : le.min(), i = new ge({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return _e.newFoundDocument(n, r, s, i);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        E(!!e.missing), E(!!e.readTime);\n        const n = Ze(t, e.missing), r = He(e.readTime);\n        return _e.newNoDocument(n, r);\n    }(t, e) : b();\n}\n\nfunction sn(t, e) {\n    let n;\n    if (e instanceof Me) n = {\n        update: nn(t, e.key, e.value)\n    }; else if (e instanceof Ue) n = {\n        delete: Xe(t, e.key)\n    }; else if (e instanceof Le) n = {\n        update: nn(t, e.key, e.data),\n        updateMask: fn(e.fieldMask)\n    }; else {\n        if (!(e instanceof je)) return b();\n        n = {\n            verify: Xe(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof Fe) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof xe) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Se) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof qe) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.k\n        };\n        throw b();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: Ye(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : b();\n    }(t, e.precondition)), n;\n}\n\nfunction on(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, r = e.path;\n    null !== e.collectionGroup ? (n.parent = tn(t, r), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = tn(t, r.popLast()), n.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        return ln(Zt.create(t, \"and\" /* CompositeOperator.AND */));\n    }(e.filters);\n    s && (n.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: hn(t.field),\n                direction: un(t.dir)\n            };\n        }\n        // visible for testing\n        (t)));\n    }(e.orderBy);\n    i && (n.structuredQuery.orderBy = i);\n    const o = function(t, e) {\n        return t.useProto3Json || dt(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    var u;\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n        before: (u = e.startAt).inclusive,\n        values: u.position\n    }), e.endAt && (n.structuredQuery.endAt = function(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }\n    // visible for testing\n    (e.endAt)), n;\n}\n\nfunction un(t) {\n    return Be[t];\n}\n\n// visible for testing\nfunction cn(t) {\n    return Qe[t];\n}\n\nfunction an(t) {\n    return ze[t];\n}\n\nfunction hn(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction ln(t) {\n    return t instanceof Xt ? function(t) {\n        if (\"==\" /* Operator.EQUAL */ === t.op) {\n            if (Wt(t.value)) return {\n                unaryFilter: {\n                    field: hn(t.field),\n                    op: \"IS_NAN\"\n                }\n            };\n            if (zt(t.value)) return {\n                unaryFilter: {\n                    field: hn(t.field),\n                    op: \"IS_NULL\"\n                }\n            };\n        } else if (\"!=\" /* Operator.NOT_EQUAL */ === t.op) {\n            if (Wt(t.value)) return {\n                unaryFilter: {\n                    field: hn(t.field),\n                    op: \"IS_NOT_NAN\"\n                }\n            };\n            if (zt(t.value)) return {\n                unaryFilter: {\n                    field: hn(t.field),\n                    op: \"IS_NOT_NULL\"\n                }\n            };\n        }\n        return {\n            fieldFilter: {\n                field: hn(t.field),\n                op: cn(t.op),\n                value: t.value\n            }\n        };\n    }(t) : t instanceof Zt ? function(t) {\n        const e = t.getFilters().map((t => ln(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: an(t.op),\n                filters: e\n            }\n        };\n    }(t) : b();\n}\n\nfunction fn(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction dn(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function wn(t) {\n    return new We(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass mn {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.C = t, this.timerId = e, this.M = n, this.L = r, this.U = s, this.j = 0, this.B = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.W = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.j = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    G() {\n        this.j = this.U;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    K(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.j + this.Y()), n = Math.max(0, Date.now() - this.W), r = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && y(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.j} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.B = this.C.enqueueAfterDelay(this.timerId, r, (() => (this.W = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.j *= this.L, this.j < this.M && (this.j = this.M), this.j > this.U && (this.j = this.U);\n    }\n    H() {\n        null !== this.B && (this.B.skipDelay(), this.B = null);\n    }\n    cancel() {\n        null !== this.B && (this.B.cancel(), this.B = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    Y() {\n        return (Math.random() - .5) * this.j;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass pn extends class {} {\n    constructor(t, e, n, r) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.connection = n, \n        this.serializer = r, this.J = !1;\n    }\n    X() {\n        if (this.J) throw new U(S, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    v(t, e, n) {\n        return this.X(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.connection.v(t, e, n, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    R(t, e, n, r) {\n        return this.X(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([s, i]) => this.connection.R(t, e, n, s, i, r))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    terminate() {\n        this.J = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function yn(t, e) {\n    const n = I(t), r = en(n.serializer) + \"/documents\", s = {\n        writes: e.map((t => sn(n.serializer, t)))\n    };\n    await n.v(\"Commit\", r, s);\n}\n\nasync function gn(t, e) {\n    const n = I(t), r = en(n.serializer) + \"/documents\", s = {\n        documents: e.map((t => Xe(n.serializer, t)))\n    }, i = await n.R(\"BatchGetDocuments\", r, s, e.length), o = new Map;\n    i.forEach((t => {\n        const e = rn(n.serializer, t);\n        o.set(e.key.toString(), e);\n    }));\n    const u = [];\n    return e.forEach((t => {\n        const e = o.get(t.toString());\n        E(!!e), u.push(e);\n    })), u;\n}\n\nasync function _n(t, e) {\n    const n = I(t), r = on(n.serializer, Pe(e));\n    return (await n.R(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, e, n) {\n        const r = Ze(t, e.name), s = He(e.updateTime), i = e.createTime ? He(e.createTime) : le.min(), o = new ge({\n            mapValue: {\n                fields: e.fields\n            }\n        }), u = _e.newFoundDocument(r, s, i, o);\n        return n && u.setHasCommittedMutations(), n ? u.setHasCommittedMutations() : u;\n    }(n.serializer, t.document, void 0)));\n}\n\nasync function vn(t, e, n) {\n    var r;\n    const s = I(t), {request: i, Z: o} = function(t, e, n) {\n        const r = on(t, e), s = {}, i = [];\n        let o = 0;\n        return n.forEach((t => {\n            // Map all client-side aliases to a unique short-form\n            // alias. This avoids issues with client-side aliases that\n            // exceed the 1500-byte string size limit.\n            const e = \"aggregate_\" + o++;\n            s[e] = t.alias, \"count\" === t.$ ? i.push({\n                alias: e,\n                count: {}\n            }) : \"avg\" === t.$ ? i.push({\n                alias: e,\n                avg: {\n                    field: hn(t.fieldPath)\n                }\n            }) : \"sum\" === t.$ && i.push({\n                alias: e,\n                sum: {\n                    field: hn(t.fieldPath)\n                }\n            });\n        })), {\n            request: {\n                structuredAggregationQuery: {\n                    aggregations: i,\n                    structuredQuery: r.structuredQuery\n                },\n                parent: r.parent\n            },\n            Z: s\n        };\n    }(s.serializer, Pe(e), n), u = i.parent;\n    s.connection.g || delete i.parent;\n    const c = (await s.R(\"RunAggregationQuery\", u, i, /*expectedResponseCount=*/ 1)).filter((t => !!t.result));\n    // Omit RunAggregationQueryResponse that only contain readTimes.\n        E(1 === c.length);\n    // Remap the short-form aliases that were sent to the server\n    // to the client-side aliases. Users will access the results\n    // using the client-side alias.\n    const a = null === (r = c[0].result) || void 0 === r ? void 0 : r.aggregateFields;\n    return Object.keys(a).reduce(((t, e) => (t[o[e]] = a[e], t)), {});\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const bn = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction En(t) {\n    if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n    if (!bn.has(t)) {\n        y(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new _t(t, fetch.bind(null));\n        }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new J(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, ht(s.experimentalLongPollingOptions), s.useFetchStreams))), o = wn(t._databaseId), u = function(t, e, n, r) {\n            return new pn(t, e, n, r);\n        }(t._authCredentials, t._appCheckCredentials, i, o);\n        bn.set(t, u);\n    }\n    var e, n, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return bn.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass In {\n    constructor(t) {\n        var e, n;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new U(P, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        this.cache = t.localCache, void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(P, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        !function(t, e, n, r) {\n            if (!0 === e && !0 === r) throw new U(P, `${t} and ${n} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling), \n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalForceLongPolling ? this.experimentalAutoDetectLongPolling = !1 : void 0 === t.experimentalAutoDetectLongPolling ? this.experimentalAutoDetectLongPolling = true : \n        // For backwards compatibility, coerce the value to boolean even though\n        // the TypeScript compiler has narrowed the type to boolean already.\n        // noinspection PointlessBooleanExpressionJS\n        this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.experimentalLongPollingOptions = ht(null !== (n = t.experimentalLongPollingOptions) && void 0 !== n ? n : {}), \n        function(t) {\n            if (void 0 !== t.timeoutSeconds) {\n                if (isNaN(t.timeoutSeconds)) throw new U(P, `invalid long polling timeout: ${t.timeoutSeconds} (must not be NaN)`);\n                if (t.timeoutSeconds < 5) throw new U(P, `invalid long polling timeout: ${t.timeoutSeconds} (minimum allowed value is 5)`);\n                if (t.timeoutSeconds > 30) throw new U(P, `invalid long polling timeout: ${t.timeoutSeconds} (maximum allowed value is 30)`);\n            }\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        /**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */ (this.experimentalLongPollingOptions), this.useFetchStreams = !!t.useFetchStreams;\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && (e = this.experimentalLongPollingOptions, \n        n = t.experimentalLongPollingOptions, e.timeoutSeconds === n.timeoutSeconds) && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n        var e, n;\n    }\n}\n\nclass Tn {\n    /** @hideconstructor */\n    constructor(t, e, n, r) {\n        this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, \n        this._app = r, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new In({}), \n        this._settingsFrozen = !1;\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new In(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new Q;\n            switch (t.type) {\n              case \"firstParty\":\n                return new K(t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new U(P, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const e = bn.get(t);\n            e && (y(\"ComponentProvider\", \"Removing Datastore\"), bn.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction An(t, e, n) {\n    n || (n = \"(default)\");\n    const r = _getProvider(t, \"firestore/lite\");\n    if (r.isInitialized(n)) throw new U(S, \"Firestore can only be initialized once per app.\");\n    return r.initialize({\n        options: e,\n        instanceIdentifier: n\n    });\n}\n\nfunction Rn(e, n) {\n    const r = \"object\" == typeof e ? e : t(), s = \"string\" == typeof e ? e : n || \"(default)\", i = _getProvider(r, \"firestore/lite\").getImmediate({\n        identifier: s\n    });\n    if (!i._initialized) {\n        const t = a(\"firestore\");\n        t && Pn(i, ...t);\n    }\n    return i;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function Pn(t, e, n, r = {}) {\n    var s;\n    const i = (t = ct(t, Tn))._getSettings();\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== e && _(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: `${e}:${n}`,\n        ssl: !1\n    })), r.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = d.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = h(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new U(P, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new d(i);\n        }\n        t._authCredentials = new z(new B(e, n));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function Vn(t) {\n    return t = ct(t, Tn), e(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass $n {\n    /**\n     * Create a new AggregateField<T>\n     * @param _aggregateType Specifies the type of aggregation operation to perform.\n     * @param _internalFieldPath Optionally specifies the field that is aggregated.\n     * @internal\n     */\n    constructor(\n    // TODO (sum/avg) make aggregateType public when the feature is supported\n    t = \"count\", e) {\n        this._aggregateType = t, this._internalFieldPath = e, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateField\";\n    }\n}\n\n/**\n * The results of executing an aggregation query.\n */ class Nn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        this._userDataWriter = e, this._data = n, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateQuerySnapshot\", this.query = t;\n    }\n    /**\n     * Returns the results of the aggregations performed over the underlying\n     * query.\n     *\n     * The keys of the returned object will be the same as those of the\n     * `AggregateSpec` object specified to the aggregation method, and the values\n     * will be the corresponding aggregation result.\n     *\n     * @returns The results of the aggregations performed over the underlying\n     * query.\n     */    data() {\n        return this._userDataWriter.convertObjectMap(this._data);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */ class Dn {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new xn(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new Dn(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class Fn {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new Fn(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link (query:1)}).\n */ class xn extends Fn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, new Ee(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new Dn(this.firestore, \n        /* converter= */ null, new rt(t));\n    }\n    withConverter(t) {\n        return new xn(this.firestore, t, this._path);\n    }\n}\n\nfunction Sn(t, e, ...n) {\n    if (t = l(t), st(\"collection\", \"path\", e), t instanceof Tn) {\n        const r = tt.fromString(e, ...n);\n        return ot(r), new xn(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof Dn || t instanceof xn)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return ot(r), new xn(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function qn(t, e) {\n    if (t = ct(t, Tn), st(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(P, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new Fn(t, \n    /* converter= */ null, function(t) {\n        return new Ee(tt.emptyPath(), t);\n    }(e));\n}\n\nfunction On(t, e, ...n) {\n    if (t = l(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = Et.N()), st(\"doc\", \"path\", e), t instanceof Tn) {\n        const r = tt.fromString(e, ...n);\n        return it(r), new Dn(t, \n        /* converter= */ null, new rt(r));\n    }\n    {\n        if (!(t instanceof Dn || t instanceof xn)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return it(r), new Dn(t.firestore, t instanceof xn ? t.converter : null, new rt(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function kn(t, e) {\n    return t = l(t), e = l(e), (t instanceof Dn || t instanceof xn) && (e instanceof Dn || e instanceof xn) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function Cn(t, e) {\n    return t = l(t), e = l(e), t instanceof Fn && e instanceof Fn && (t.firestore === e.firestore && $e(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class Mn {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new Mn(Vt.fromBase64String(t));\n        } catch (t) {\n            throw new U(P, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new Mn(Vt.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class Ln {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(P, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new nt(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function Un() {\n    return new Ln(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class jn {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class Bn {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new U(P, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new U(P, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return It(this._lat, t._lat) || It(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Qn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class zn {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new Le(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Me(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class Wn {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new Le(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction Gn(t) {\n    switch (t) {\n      case 0 /* UserDataSource.Set */ :\n // fall through\n              case 2 /* UserDataSource.MergeSet */ :\n // fall through\n              case 1 /* UserDataSource.Update */ :\n        return !0;\n\n      case 3 /* UserDataSource.Argument */ :\n      case 4 /* UserDataSource.ArrayArgument */ :\n        return !1;\n\n      default:\n        throw b();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class Kn {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, r, s, i) {\n        this.settings = t, this.databaseId = e, this.serializer = n, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.tt(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get et() {\n        return this.settings.et;\n    }\n    /** Returns a new context with the specified settings overwritten. */    nt(t) {\n        return new Kn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.serializer, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    rt(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.nt({\n            path: n,\n            st: !1\n        });\n        return r.it(t), r;\n    }\n    ot(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.nt({\n            path: n,\n            st: !1\n        });\n        return r.tt(), r;\n    }\n    ut(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.nt({\n            path: void 0,\n            st: !0\n        });\n    }\n    ct(t) {\n        return wr(t, this.settings.methodName, this.settings.ht || !1, this.path, this.settings.lt);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    tt() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.it(this.path.get(t));\n    }\n    it(t) {\n        if (0 === t.length) throw this.ct(\"Document fields must not be empty\");\n        if (Gn(this.et) && Qn.test(t)) throw this.ct('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class Yn {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.serializer = n || wn(t);\n    }\n    /** Creates a new top-level parse context. */    ft(t, e, n, r = !1) {\n        return new Kn({\n            et: t,\n            methodName: e,\n            lt: n,\n            path: nt.emptyPath(),\n            st: !1,\n            ht: r\n        }, this.databaseId, this.serializer, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Hn(t) {\n    const e = t._freezeSettings(), n = wn(t._databaseId);\n    return new Yn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function Jn(t, e, n, r, s, i = {}) {\n    const o = t.ft(i.merge || i.mergeFields ? 2 /* UserDataSource.MergeSet */ : 0 /* UserDataSource.Set */ , e, n, s);\n    hr(\"Data must be an object, but it was:\", o, r);\n    const u = cr(r, o);\n    let c, a;\n    if (i.merge) c = new ye(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = lr(e, r, n);\n            if (!o.contains(s)) throw new U(P, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            mr(t, s) || t.push(s);\n        }\n        c = new ye(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new zn(new ge(u), c, a);\n}\n\nclass Xn extends jn {\n    _toFieldTransform(t) {\n        if (2 /* UserDataSource.MergeSet */ !== t.et) throw 1 /* UserDataSource.Update */ === t.et ? t.ct(`${this._methodName}() can only appear at the top level of your update data`) : t.ct(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof Xn;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function Zn(t, e, n) {\n    return new Kn({\n        et: 3 /* UserDataSource.Argument */ ,\n        lt: e.settings.lt,\n        methodName: t._methodName,\n        st: n\n    }, e.databaseId, e.serializer, e.ignoreUndefinedProperties);\n}\n\nclass tr extends jn {\n    _toFieldTransform(t) {\n        return new Oe(t.path, new Fe);\n    }\n    isEqual(t) {\n        return t instanceof tr;\n    }\n}\n\nclass er extends jn {\n    constructor(t, e) {\n        super(t), this.dt = e;\n    }\n    _toFieldTransform(t) {\n        const e = Zn(this, t, \n        /*array=*/ !0), n = this.dt.map((t => ur(t, e))), r = new xe(n);\n        return new Oe(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass nr extends jn {\n    constructor(t, e) {\n        super(t), this.dt = e;\n    }\n    _toFieldTransform(t) {\n        const e = Zn(this, t, \n        /*array=*/ !0), n = this.dt.map((t => ur(t, e))), r = new Se(n);\n        return new Oe(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass rr extends jn {\n    constructor(t, e) {\n        super(t), this.wt = e;\n    }\n    _toFieldTransform(t) {\n        const e = new qe(t.serializer, Ne(t.serializer, this.wt));\n        return new Oe(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function sr(t, e, n, r) {\n    const s = t.ft(1 /* UserDataSource.Update */ , e, n);\n    hr(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = ge.empty();\n    Rt(r, ((t, r) => {\n        const u = dr(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = l(r);\n        const c = s.ot(u);\n        if (r instanceof Xn) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = ur(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new ye(i);\n    return new Wn(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function ir(t, e, n, r, s, i) {\n    const o = t.ft(1 /* UserDataSource.Update */ , e, n), u = [ lr(e, r, n) ], c = [ s ];\n    if (i.length % 2 != 0) throw new U(P, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(lr(e, i[t])), c.push(i[t + 1]);\n    const a = [], h = ge.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!mr(a, u[t])) {\n        const e = u[t];\n        let n = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = l(n);\n        const r = o.ot(e);\n        if (n instanceof Xn) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(e); else {\n            const t = ur(n, r);\n            null != t && (a.push(e), h.set(e, t));\n        }\n    }\n    const f = new ye(a);\n    return new Wn(h, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function or(t, e, n, r = !1) {\n    return ur(n, t.ft(r ? 4 /* UserDataSource.ArrayArgument */ : 3 /* UserDataSource.Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function ur(t, e) {\n    if (ar(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = l(t))) return hr(\"Unsupported field value:\", e, t), cr(t, e);\n    if (t instanceof jn) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!Gn(e.et)) throw e.ct(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.ct(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.st && 4 /* UserDataSource.ArrayArgument */ !== e.et) throw e.ct(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let r = 0;\n            for (const s of t) {\n                let t = ur(s, e.ut(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = l(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return Ne(e.serializer, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = xt.fromDate(t);\n            return {\n                timestampValue: Ge(e.serializer, n)\n            };\n        }\n        if (t instanceof xt) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new xt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: Ge(e.serializer, n)\n            };\n        }\n        if (t instanceof Bn) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof Mn) return {\n            bytesValue: Ke(e.serializer, t._byteString)\n        };\n        if (t instanceof Dn) {\n            const n = e.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(n)) throw e.ct(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: Je(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.ct(`Unsupported field value: ${ut(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction cr(t, e) {\n    const n = {};\n    return !function(t) {\n        for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n        return !0;\n    }(t) ? Rt(t, ((t, r) => {\n        const s = ur(r, e.rt(t));\n        null != s && (n[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction ar(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof xt || t instanceof Bn || t instanceof Mn || t instanceof Dn || t instanceof jn);\n}\n\nfunction hr(t, e, n) {\n    if (!ar(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const r = ut(n);\n        throw \"an object\" === r ? e.ct(t + \" a custom object\") : e.ct(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function lr(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = l(e)) instanceof Ln) return e._internalPath;\n    if (\"string\" == typeof e) return dr(t, e);\n    throw wr(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const fr = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function dr(t, e, n) {\n    if (e.search(fr) >= 0) throw wr(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new Ln(...e.split(\".\"))._internalPath;\n    } catch (r) {\n        throw wr(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction wr(t, e, n, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new U(P, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function mr(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class pr {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, r, s) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new Dn(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new yr(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(vr(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class yr extends pr {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class gr {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._docs = e, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._docs.forEach(t, e);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function _r(t, e) {\n    return t = l(t), e = l(e), t instanceof pr && e instanceof pr ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof gr && e instanceof gr && (Cn(t.query, e.query) && Tt(t.docs, e.docs, _r));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function vr(t, e) {\n    return \"string\" == typeof e ? dr(t, e) : e instanceof Ln ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An `AppliableConstraint` is an abstraction of a constraint that can be applied\n * to a Firestore query.\n */\nclass br {}\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * (endBefore:1)}, {@link (endAt:1)}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link (query:1)} to create a new query instance that\n * also contains this `QueryConstraint`.\n */ class Er extends br {}\n\nfunction Ir(t, e, ...n) {\n    let r = [];\n    e instanceof br && r.push(e), r = r.concat(n), function(t) {\n        const e = t.filter((t => t instanceof Rr)).length, n = t.filter((t => t instanceof Tr)).length;\n        if (e > 1 || e > 0 && n > 0) throw new U(P, \"InvalidQuery. When using composite filters, you cannot use more than one filter at the top level. Consider nesting the multiple filters within an `and(...)` statement. For example: change `query(query, where(...), or(...))` to `query(query, and(where(...), or(...)))`.\");\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */ (r);\n    for (const e of r) t = e._apply(t);\n    return t;\n}\n\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link (query:1)} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */ class Tr extends Er {\n    /**\n     * @internal\n     */\n    constructor(t, e, n) {\n        super(), this._field = t, this._op = e, this._value = n, \n        /** The type of this query constraint */\n        this.type = \"where\";\n    }\n    static _create(t, e, n) {\n        return new Tr(t, e, n);\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return Br(t._query, e), new Fn(t.firestore, t.converter, Ve(t._query, e));\n    }\n    _parse(t) {\n        const e = Hn(t.firestore), n = function(t, e, n, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* Operator.ARRAY_CONTAINS */ === i || \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === i) throw new U(P, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n                if (\"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i) {\n                    jr(o, i);\n                    const e = [];\n                    for (const n of o) e.push(Ur(r, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = Ur(r, t, o);\n            } else \"in\" /* Operator.IN */ !== i && \"not-in\" /* Operator.NOT_IN */ !== i && \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ !== i || jr(o, i), \n            u = or(n, e, o, \n            /* allowArrays= */ \"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i);\n            return Xt.create(s, i, u);\n        }(t._query, \"where\", e, t.firestore._databaseId, this._field, this._op, this._value);\n        return n;\n    }\n}\n\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */ function Ar(t, e, n) {\n    const r = e, s = vr(\"where\", t);\n    return Tr._create(s, r, n);\n}\n\n/**\n * A `QueryCompositeFilterConstraint` is used to narrow the set of documents\n * returned by a Firestore query by performing the logical OR or AND of multiple\n * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.\n * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or\n * {@link and} and can then be passed to {@link (query:1)} to create a new query\n * instance that also contains the `QueryCompositeFilterConstraint`.\n */ class Rr extends br {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e) {\n        super(), this.type = t, this._queryConstraints = e;\n    }\n    static _create(t, e) {\n        return new Rr(t, e);\n    }\n    _parse(t) {\n        const e = this._queryConstraints.map((e => e._parse(t))).filter((t => t.getFilters().length > 0));\n        return 1 === e.length ? e[0] : Zt.create(e, this._getOperator());\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return 0 === e.getFilters().length ? t : (function(t, e) {\n            let n = t;\n            const r = e.getFlattenedFilters();\n            for (const t of r) Br(n, t), n = Ve(n, t);\n        }\n        // Checks if any of the provided filter operators are included in the given list of filters and\n        // returns the first one that is, or null if none are.\n        (t._query, e), new Fn(t.firestore, t.converter, Ve(t._query, e)));\n    }\n    _getQueryConstraints() {\n        return this._queryConstraints;\n    }\n    _getOperator() {\n        return \"and\" === this.type ? \"and\" /* CompositeOperator.AND */ : \"or\" /* CompositeOperator.OR */;\n    }\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a disjunction of\n * the given filter constraints. A disjunction filter includes a document if it\n * satisfies any of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a disjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n */ function Pr(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => zr(\"or\", t))), Rr._create(\"or\" /* CompositeOperator.OR */ , t);\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a conjunction of\n * the given filter constraints. A conjunction filter includes a document if it\n * satisfies all of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a conjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n */ function Vr(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => zr(\"and\", t))), Rr._create(\"and\" /* CompositeOperator.AND */ , t);\n}\n\n/**\n * A `QueryOrderByConstraint` is used to sort the set of documents returned by a\n * Firestore query. `QueryOrderByConstraint`s are created by invoking\n * {@link orderBy} and can then be passed to {@link (query:1)} to create a new query\n * instance that also contains this `QueryOrderByConstraint`.\n *\n * Note: Documents that do not contain the orderBy field will not be present in\n * the query result.\n */ class $r extends Er {\n    /**\n     * @internal\n     */\n    constructor(t, e) {\n        super(), this._field = t, this._direction = e, \n        /** The type of this query constraint */\n        this.type = \"orderBy\";\n    }\n    static _create(t, e) {\n        return new $r(t, e);\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new U(P, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new U(P, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new ae(e, n);\n            return function(t, e) {\n                if (null === Ie(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = Te(t);\n                    null !== n && Qr(t, n, e.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this._field, this._direction);\n        return new Fn(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new Ee(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryOrderByConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * Note: Documents that do not contain the specified field will not be present\n * in the query result.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link QueryOrderByConstraint}.\n */ function Nr(t, e = \"asc\") {\n    const n = e, r = vr(\"orderBy\", t);\n    return $r._create(r, n);\n}\n\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link (query:1)} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */ class Dr extends Er {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._limit = e, this._limitType = n;\n    }\n    static _create(t, e, n) {\n        return new Dr(t, e, n);\n    }\n    _apply(t) {\n        return new Fn(t.firestore, t.converter, function(t, e, n) {\n            return new Ee(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n        }(t._query, this._limit, this._limitType));\n    }\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function Fr(t) {\n    return at(\"limit\", t), Dr._create(\"limit\", t, \"F\" /* LimitType.First */);\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the last matching\n * documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function xr(t) {\n    return at(\"limitToLast\", t), Dr._create(\"limitToLast\", t, \"L\" /* LimitType.Last */);\n}\n\n/**\n * A `QueryStartAtConstraint` is used to exclude documents from the start of a\n * result set returned by a Firestore query.\n * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or\n * {@link (startAfter:1)} and can then be passed to {@link (query:1)} to create a\n * new query instance that also contains this `QueryStartAtConstraint`.\n */ class Sr extends Er {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new Sr(t, e, n);\n    }\n    _apply(t) {\n        const e = Lr(t, this.type, this._docOrFields, this._inclusive);\n        return new Fn(t.firestore, t.converter, function(t, e) {\n            return new Ee(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction qr(...t) {\n    return Sr._create(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction Or(...t) {\n    return Sr._create(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\n/**\n * A `QueryEndAtConstraint` is used to exclude documents from the end of a\n * result set returned by a Firestore query.\n * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or\n * {@link (endBefore:1)} and can then be passed to {@link (query:1)} to create a new\n * query instance that also contains this `QueryEndAtConstraint`.\n */ class kr extends Er {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new kr(t, e, n);\n    }\n    _apply(t) {\n        const e = Lr(t, this.type, this._docOrFields, this._inclusive);\n        return new Fn(t.firestore, t.converter, function(t, e) {\n            return new Ee(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction Cr(...t) {\n    return kr._create(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction Mr(...t) {\n    return kr._create(\"endAt\", t, \n    /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function Lr(t, e, n, r) {\n    if (n[0] = l(n[0]), n[0] instanceof pr) return function(t, e, n, r, s) {\n        if (!r) throw new U($, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of Re(t)) if (n.field.isKeyField()) i.push(Bt(e, r.key)); else {\n            const t = r.data.field(n.field);\n            if (St(t)) throw new U(P, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new U(P, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new Yt(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, r);\n    {\n        const s = Hn(t.firestore);\n        return function(t, e, n, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new U(P, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new U(P, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!Ae(t) && -1 !== c.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const n = t.path.child(tt.fromString(c));\n                    if (!rt.isDocumentKey(n)) throw new U(P, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const s = new rt(n);\n                    u.push(Bt(e, s));\n                } else {\n                    const t = or(n, r, c);\n                    u.push(t);\n                }\n            }\n            return new Yt(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, e, n, r);\n    }\n}\n\nfunction Ur(t, e, n) {\n    if (\"string\" == typeof (n = l(n))) {\n        if (\"\" === n) throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!Ae(e) && -1 !== n.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const r = e.path.child(tt.fromString(n));\n        if (!rt.isDocumentKey(r)) throw new U(P, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return Bt(t, new rt(r));\n    }\n    if (n instanceof Dn) return Bt(t, n._key);\n    throw new U(P, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${ut(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function jr(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new U(P, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n}\n\n/**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * This is not a comprehensive check, and this function should be removed in the\n * long term. Validations should occur in the Firestore backend.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one inequality per query.\n * 2. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n */ function Br(t, e) {\n    if (e.isInequality()) {\n        const n = Te(t), r = e.field;\n        if (null !== n && !n.isEqual(r)) throw new U(P, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${r.toString()}'`);\n        const s = Ie(t);\n        null !== s && Qr(t, r, s);\n    }\n    const n = function(t, e) {\n        for (const n of t) for (const t of n.getFlattenedFilters()) if (e.indexOf(t.op) >= 0) return t.op;\n        return null;\n    }(t.filters, function(t) {\n        switch (t) {\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return [ \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ :\n          case \"in\" /* Operator.IN */ :\n            return [ \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"not-in\" /* Operator.NOT_IN */ :\n            return [ \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ , \"!=\" /* Operator.NOT_EQUAL */ ];\n\n          default:\n            return [];\n        }\n    }(e.op));\n    if (null !== n) \n    // Special case when it's a duplicate op to give a slightly clearer error message.\n    throw n === e.op ? new U(P, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new U(P, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n}\n\nfunction Qr(t, e, n) {\n    if (!n.isEqual(e)) throw new U(P, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\nfunction zr(t, e) {\n    if (!(e instanceof Tr || e instanceof Rr)) throw new U(P, `Function ${t}() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction Wr(t, e, n) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    r;\n}\n\nclass Gr extends class {\n    convertValue(t, e = \"none\") {\n        switch (Ct(t)) {\n          case 0 /* TypeOrder.NullValue */ :\n            return null;\n\n          case 1 /* TypeOrder.BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* TypeOrder.NumberValue */ :\n            return Dt(t.integerValue || t.doubleValue);\n\n          case 3 /* TypeOrder.TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* TypeOrder.ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* TypeOrder.StringValue */ :\n            return t.stringValue;\n\n          case 6 /* TypeOrder.BlobValue */ :\n            return this.convertBytes(Ft(t.bytesValue));\n\n          case 7 /* TypeOrder.RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* TypeOrder.GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* TypeOrder.ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* TypeOrder.ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw b();\n        }\n    }\n    convertObject(t, e) {\n        return this.convertObjectMap(t.fields, e);\n    }\n    /**\n     * @internal\n     */    convertObjectMap(t, e = \"none\") {\n        const n = {};\n        return Rt(t, ((t, r) => {\n            n[t] = this.convertValue(r, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new Bn(Dt(t.latitude), Dt(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = qt(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(Ot(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = Nt(t);\n        return new xt(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = tt.fromString(t);\n        E(dn(n));\n        const r = new X(n.get(1), n.get(3)), s = new rt(n.popFirst(5));\n        return r.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        g(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new Mn(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new Dn(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function Kr(t) {\n    const e = En((t = ct(t, Dn)).firestore), n = new Gr(t.firestore);\n    return gn(e, [ t._key ]).then((e => {\n        E(1 === e.length);\n        const r = e[0];\n        return new pr(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function Yr(t) {\n    !function(t) {\n        if (\"L\" /* LimitType.Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new U(k, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = ct(t, Fn))._query);\n    const e = En(t.firestore), n = new Gr(t.firestore);\n    return _n(e, t._query).then((e => {\n        const r = e.map((e => new yr(t.firestore, n, e.key, e, t.converter)));\n        return \"L\" /* LimitType.Last */ === t._query.limitType && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new gr(t, r);\n    }));\n}\n\nfunction Hr(t, e, n) {\n    const r = Wr((t = ct(t, Dn)).converter, e, n), s = Jn(Hn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n    return yn(En(t.firestore), [ s.toMutation(t._key, ke.none()) ]);\n}\n\nfunction Jr(t, e, n, ...r) {\n    const s = Hn((t = ct(t, Dn)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (e = l(e)) || e instanceof Ln ? ir(s, \"updateDoc\", t._key, e, n, r) : sr(s, \"updateDoc\", t._key, e);\n    return yn(En(t.firestore), [ i.toMutation(t._key, ke.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function Xr(t) {\n    return yn(En((t = ct(t, Dn)).firestore), [ new Ue(t._key, ke.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function Zr(t, e) {\n    const n = On(t = ct(t, xn)), r = Wr(t.converter, e), s = Jn(Hn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n    return yn(En(t.firestore), [ s.toMutation(n._key, ke.exists(!1)) ]).then((() => n));\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */ function ts(t) {\n    return es(t, {\n        count: ss()\n    });\n}\n\n/**\n * Calculates the specified aggregations over the documents in the result\n * set of the given query, without actually downloading the documents.\n *\n * Using this function to perform aggregations is efficient because only the\n * final aggregation values, not the documents' data, is downloaded. This\n * function can even perform aggregations of the documents if the result set\n * would be prohibitively large to download entirely (e.g. thousands of documents).\n *\n * @param query The query whose result set to aggregate over.\n * @param aggregateSpec An `AggregateSpec` object that specifies the aggregates\n * to perform over the result set. The AggregateSpec specifies aliases for each\n * aggregate, which can be used to retrieve the aggregate result.\n * @example\n * ```typescript\n * const aggregateSnapshot = await getAggregate(query, {\n *   countOfDocs: count(),\n *   totalHours: sum('hours'),\n *   averageScore: average('score')\n * });\n *\n * const countOfDocs: number = aggregateSnapshot.data().countOfDocs;\n * const totalHours: number = aggregateSnapshot.data().totalHours;\n * const averageScore: number | null = aggregateSnapshot.data().averageScore;\n * ```\n * @internal TODO (sum/avg) remove when public\n */ function es(t, e) {\n    const n = ct(t.firestore, Tn), r = En(n), s = function(t, e) {\n        const n = [];\n        for (const r in t) Object.prototype.hasOwnProperty.call(t, r) && n.push(e(t[r], r, t));\n        return n;\n    }(e, ((t, e) => new vt(e, t._aggregateType, t._internalFieldPath)));\n    // Run the aggregation and convert the results\n    return vn(r, t._query, s).then((e => function(t, e, n) {\n        const r = new Gr(t);\n        return new Nn(e, r, n);\n    }\n    /**\n * Create an AggregateField object that can be used to compute the sum of\n * a specified field over a range of documents in the result set of a query.\n * @param field Specifies the field to sum across the result set.\n * @internal TODO (sum/avg) remove when public\n */ (n, t, e)));\n}\n\nfunction ns(t) {\n    return new $n(\"sum\", lr(\"sum\", t));\n}\n\n/**\n * Create an AggregateField object that can be used to compute the average of\n * a specified field over a range of documents in the result set of a query.\n * @param field Specifies the field to average across the result set.\n * @internal TODO (sum/avg) remove when public\n */ function rs(t) {\n    return new $n(\"avg\", lr(\"average\", t));\n}\n\n/**\n * Create an AggregateField object that can be used to compute the count of\n * documents in the result set of a query.\n * @internal TODO (sum/avg) remove when public\n */ function ss() {\n    return new $n(\"count\");\n}\n\n/**\n * Compares two 'AggregateField` instances for equality.\n *\n * @param left Compare this AggregateField to the `right`.\n * @param right Compare this AggregateField to the `left`.\n * @internal TODO (sum/avg) remove when public\n */ function is(t, e) {\n    var n, r;\n    return t instanceof $n && e instanceof $n && t._aggregateType === e._aggregateType && (null === (n = t._internalFieldPath) || void 0 === n ? void 0 : n.canonicalString()) === (null === (r = e._internalFieldPath) || void 0 === r ? void 0 : r.canonicalString());\n}\n\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */ function os(t, e) {\n    return Cn(t.query, e.query) && f(t.data(), e.data());\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function us() {\n    return new Xn(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function cs() {\n    return new tr(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function as(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new er(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function hs(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new nr(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function ls(t) {\n    return new rr(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class fs {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = Hn(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const r = ds(t, this._firestore), s = Wr(r.converter, e, n), i = Jn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n        return this._mutations.push(i.toMutation(r._key, ke.none())), this;\n    }\n    update(t, e, n, ...r) {\n        this._verifyNotCommitted();\n        const s = ds(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof Ln ? ir(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : sr(this._dataReader, \"WriteBatch.update\", s._key, e), \n        this._mutations.push(i.toMutation(s._key, ke.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = ds(t, this._firestore);\n        return this._mutations = this._mutations.concat(new Ue(e._key, ke.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction ds(t, e) {\n    if ((t = l(t)).firestore !== e) throw new U(P, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function ws(t) {\n    const e = En(t = ct(t, Tn));\n    return new fs(t, (t => yn(e, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class ms {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(P, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await gn(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new Ue(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = rt.fromPath(e);\n            this.mutations.push(new je(n, this.precondition(n)));\n        })), await yn(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw b();\n            // Represent a deleted doc using SnapshotVersion.min().\n            e = le.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new U(q, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(le.min()) ? ke.exists(!1) : ke.updateTime(e) : ke.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(le.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new U(P, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return ke.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return ke.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const ps = {\n    maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass ys {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, \n        this.deferred = s, this.yt = n.maxAttempts, this.gt = new mn(this.asyncQueue, \"transaction_retry\" /* TimerId.TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.yt -= 1, this._t();\n    }\n    _t() {\n        this.gt.K((async () => {\n            const t = new ms(this.datastore), e = this.vt(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.bt(t);\n                }))));\n            })).catch((t => {\n                this.bt(t);\n            }));\n        }));\n    }\n    vt(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !dt(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    bt(t) {\n        this.yt > 0 && this.Et(t) ? (this.yt -= 1, this.asyncQueue.enqueueAndForget((() => (this._t(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    Et(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || \"already-exists\" === e || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  default:\n                    return b();\n\n                  case A:\n                  case R:\n                  case V:\n                  case x:\n                  case C:\n                  case M:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case F:\n                    return !1;\n\n                  case P:\n                  case $:\n                  case N:\n                  case D:\n                  case S:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case q:\n                  case O:\n                  case k:\n                  case L:\n                    return !0;\n                }\n            }(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function gs() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class _s {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, \n        this.deferred = new j, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, r, s) {\n        const i = Date.now() + n, o = new _s(t, e, i, r, s);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(A, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class vs {\n    constructor() {\n        // The last promise in the queue.\n        this.It = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Tt = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.At = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.Rt = [], \n        // visible for testing\n        this.Pt = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.Vt = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.$t = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Nt = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.gt = new mn(this, \"async_queue_retry\" /* TimerId.AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.Dt = () => {\n            const t = gs();\n            t && y(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.gt.H();\n        };\n        const t = gs();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Dt);\n    }\n    get isShuttingDown() {\n        return this.At;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.Ft(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.xt(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.At) {\n            this.At = !0, this.$t = t || !1;\n            const e = gs();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Dt);\n        }\n    }\n    enqueue(t) {\n        if (this.Ft(), this.At) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new j;\n        return this.xt((() => this.At && this.$t ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.Tt.push(t), this.St())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async St() {\n        if (0 !== this.Tt.length) {\n            try {\n                await this.Tt[0](), this.Tt.shift(), this.gt.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                y(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.Tt.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.gt.K((() => this.St()));\n        }\n    }\n    xt(t) {\n        const e = this.It.then((() => (this.Vt = !0, t().catch((t => {\n            this.Pt = t, this.Vt = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw g(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.Vt = !1, t))))));\n        return this.It = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.Ft(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Nt.indexOf(t) > -1 && (e = 0);\n        const r = _s.createAndSchedule(this, t, e, n, (t => this.qt(t)));\n        return this.Rt.push(r), r;\n    }\n    Ft() {\n        this.Pt && b();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async Ot() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.It, await t;\n        } while (t !== this.It);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    kt(t) {\n        for (const e of this.Rt) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    Ct(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.Ot().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.Rt.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.Rt) if (e.skipDelay(), \"all\" /* TimerId.All */ !== t && e.timerId === t) break;\n            return this.Ot();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Mt(t) {\n        this.Nt.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    qt(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.Rt.indexOf(t);\n        this.Rt.splice(e, 1);\n    }\n}\n\nclass bs {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = Hn(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = ds(t, this._firestore), n = new Gr(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return b();\n            const r = t[0];\n            if (r.isFoundDocument()) return new pr(this._firestore, n, r.key, r, e.converter);\n            if (r.isNoDocument()) return new pr(this._firestore, n, e._key, null, e.converter);\n            throw b();\n        }));\n    }\n    set(t, e, n) {\n        const r = ds(t, this._firestore), s = Wr(r.converter, e, n), i = Jn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, e, n, ...r) {\n        const s = ds(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof Ln ? ir(this._dataReader, \"Transaction.update\", s._key, e, n, r) : sr(this._dataReader, \"Transaction.update\", s._key, e), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = ds(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function Es(t, e, n) {\n    const r = En(t = ct(t, Tn)), s = Object.assign(Object.assign({}, ps), n);\n    !function(t) {\n        if (t.maxAttempts < 1) throw new U(P, \"Max attempts must be at least 1\");\n    }(s);\n    const i = new j;\n    return new ys(new vs, r, s, (n => e(new bs(t, n))), i).run(), i.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    w = t;\n}(`${s}_lite`), n(new i(\"firestore/lite\", ((t, {instanceIdentifier: e, options: n}) => {\n    const r = t.getProvider(\"app\").getImmediate(), s = new Tn(new W(t.getProvider(\"auth-internal\")), new H(t.getProvider(\"app-check-internal\")), function(t, e) {\n        if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new U(P, '\"projectId\" not provided in firebase.initializeApp.');\n        return new X(t.options.projectId, e);\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (r, e), r);\n    return n && s._setSettings(n), s;\n}), \"PUBLIC\").setMultipleInstances(!0)), \n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nr(\"firestore-lite\", \"3.12.1\", \"\"), r(\"firestore-lite\", \"3.12.1\", \"__BUILD_TARGET__\");\n\nexport { $n as AggregateField, Nn as AggregateQuerySnapshot, Mn as Bytes, xn as CollectionReference, Dn as DocumentReference, pr as DocumentSnapshot, Ln as FieldPath, jn as FieldValue, Tn as Firestore, U as FirestoreError, Bn as GeoPoint, Fn as Query, Rr as QueryCompositeFilterConstraint, Er as QueryConstraint, yr as QueryDocumentSnapshot, kr as QueryEndAtConstraint, Tr as QueryFieldFilterConstraint, Dr as QueryLimitConstraint, $r as QueryOrderByConstraint, gr as QuerySnapshot, Sr as QueryStartAtConstraint, xt as Timestamp, bs as Transaction, fs as WriteBatch, Zr as addDoc, is as aggregateFieldEqual, os as aggregateQuerySnapshotEqual, Vr as and, hs as arrayRemove, as as arrayUnion, rs as average, Sn as collection, qn as collectionGroup, Pn as connectFirestoreEmulator, ss as count, Xr as deleteDoc, us as deleteField, On as doc, Un as documentId, Mr as endAt, Cr as endBefore, es as getAggregate, ts as getCount, Kr as getDoc, Yr as getDocs, Rn as getFirestore, ls as increment, An as initializeFirestore, Fr as limit, xr as limitToLast, Pr as or, Nr as orderBy, Ir as query, Cn as queryEqual, kn as refEqual, Es as runTransaction, cs as serverTimestamp, Hr as setDoc, p as setLogLevel, _r as snapshotEqual, Or as startAfter, qr as startAt, ns as sum, Vn as terminate, Jr as updateDoc, Ar as where, ws as writeBatch };\n//# sourceMappingURL=index.browser.esm2017.js.map\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}